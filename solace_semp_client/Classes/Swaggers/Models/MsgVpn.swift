//
// MsgVpn.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class MsgVpn: JSONEncodable {
    public enum AuthenticationBasicType: String { 
        case Internal = "internal"
        case Ldap = "ldap"
        case Radius = "radius"
        case None = "none"
    }
    public enum AuthenticationClientCertRevocationCheckMode: String { 
        case AllowAll = "allow-all"
        case AllowUnknown = "allow-unknown"
        case AllowValid = "allow-valid"
    }
    public enum AuthenticationClientCertUsernameSource: String { 
        case CommonName = "common-name"
        case SubjectAlternateNameMsupn = "subject-alternate-name-msupn"
    }
    public enum AuthorizationType: String { 
        case Ldap = "ldap"
        case Internal = "internal"
    }
    public enum EventPublishSubscriptionMode: String { 
        case Off = "off"
        case OnWithFormatV1 = "on-with-format-v1"
        case OnWithNoUnsubscribeEventsOnDisconnectFormatV1 = "on-with-no-unsubscribe-events-on-disconnect-format-v1"
        case OnWithFormatV2 = "on-with-format-v2"
        case OnWithNoUnsubscribeEventsOnDisconnectFormatV2 = "on-with-no-unsubscribe-events-on-disconnect-format-v2"
    }
    public enum ReplicationBridgeAuthenticationScheme: String { 
        case Basic = "basic"
        case ClientCertificate = "client-certificate"
    }
    public enum ReplicationEnabledQueueBehavior: String { 
        case FailOnExistingQueue = "fail-on-existing-queue"
        case ForceUseExistingQueue = "force-use-existing-queue"
        case ForceRecreateQueue = "force-recreate-queue"
    }
    public enum ReplicationRole: String { 
        case Active = "active"
        case Standby = "standby"
    }
    public enum ReplicationTransactionMode: String { 
        case Sync = "sync"
        case Async = "async"
    }
    public enum ServiceRestMode: String { 
        case Gateway = "gateway"
        case Messaging = "messaging"
    }
    /** Enable or disable Basic Authentication for clients connecting to the Message VPN. The default value is &#x60;true&#x60;. */
    public var authenticationBasicEnabled: Bool?
    /** The name of the RADIUS or LDAP Profile to use when \&quot;authenticationBasicType\&quot; is \&quot;radius\&quot; or \&quot;ldap\&quot; respectively. The default value is &#x60;\&quot;default\&quot;&#x60;. */
    public var authenticationBasicProfileName: String?
    /** The RADIUS domain string to use when \&quot;authenticationBasicType\&quot; is \&quot;radius\&quot;. The default value is &#x60;\&quot;\&quot;&#x60;. */
    public var authenticationBasicRadiusDomain: String?
    /** Authentication mechanism to be used for Basic Authentication of clients connecting to the Message VPN. The default value is &#x60;\&quot;radius\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;internal\&quot; - Internal database. Authentication is against Client Usernames. \&quot;ldap\&quot; - LDAP authentication. An LDAP profile name must be provided. \&quot;radius\&quot; - RADIUS authentication. A RADIUS profile name must be provided. \&quot;none\&quot; - No authentication. Anonymous login allowed. &lt;/pre&gt;  */
    public var authenticationBasicType: AuthenticationBasicType?
    /** When enabled, if the client specifies a Client Username via the API connect method, the client provided Username is used instead of the CN (Common Name) field of the certificate\&quot;s subject. When disabled, the certificate CN is always used as the Client Username. The default value is &#x60;false&#x60;. */
    public var authenticationClientCertAllowApiProvidedUsernameEnabled: Bool?
    /** Enable or disable the Client Certificate client Authentication for the Message VPN. The default value is &#x60;false&#x60;. */
    public var authenticationClientCertEnabled: Bool?
    /** The maximum depth for the client certificate chain. The depth of the chain is defined as the number of signing CA certificates that are present in the chain back to the trusted self-signed root CA certificate. The default value is &#x60;3&#x60;. */
    public var authenticationClientCertMaxChainDepth: Int64?
    /** Define overrides for certificate revocation checking. For \&quot;allow-all\&quot; setting, the result of the client certificate revocation check is ignored. For \&quot;allow-unknown\&quot; setting, the client is authenticated even if the revocation status of his certificate cannot be determined. For \&quot;allow-valid\&quot; setting, the client is only authenticated if the revocation check returned an explicit positive response. The default value is &#x60;\&quot;allow-valid\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;allow-all\&quot; - Allow the client to authenticate, the result of client certificate revocation check is ingored. \&quot;allow-unknown\&quot; - Allow the client to authenticate even if the revocation status of his certificate cannot be determined. \&quot;allow-valid\&quot; - Allow the client to authenticate only when the revocation check returned an explicit positive response. &lt;/pre&gt;  Available since 2.6. */
    public var authenticationClientCertRevocationCheckMode: AuthenticationClientCertRevocationCheckMode?
    /** The field from the client certificate to use as the client username. The default value is &#x60;\&quot;common-name\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;common-name\&quot; - the username is extracted from the certificate&#39;s Common Name. \&quot;subject-alternate-name-msupn\&quot; - the username is extracted from the certificate&#39;s Other Name type of the Subject Alternative Name and must have the msUPN signature. &lt;/pre&gt;  Available since 2.5. */
    public var authenticationClientCertUsernameSource: AuthenticationClientCertUsernameSource?
    /** Enable or disable validation of the \&quot;Not Before\&quot; and \&quot;Not After\&quot; validity dates in the client certificate. When disabled, a certificate will be accepted even if the certificate is not valid according to the \&quot;Not Before\&quot; and \&quot;Not After\&quot; validity dates in the certificate. The default value is &#x60;true&#x60;. */
    public var authenticationClientCertValidateDateEnabled: Bool?
    /** When enabled, if the client specifies a Client Username via the API connect method, the client provided Username is used instead of the Kerberos Principal name in Kerberos token. When disabled, the Kerberos Principal name is always used as the Client Username. The default value is &#x60;false&#x60;. */
    public var authenticationKerberosAllowApiProvidedUsernameEnabled: Bool?
    /** Enable or disable Kerberos Authentication for clients in the Message VPN. If a user provides credentials for a different authentication scheme, this setting is not applicable. The default value is &#x60;false&#x60;. */
    public var authenticationKerberosEnabled: Bool?
    /** The name of the attribute that should be retrieved from the LDAP server as part of the LDAP search when authorizing a client. It indicates that the client belongs to a particular group (i.e. the value associated with this attribute). The default value is &#x60;\&quot;memberOf\&quot;&#x60;. */
    public var authorizationLdapGroupMembershipAttributeName: String?
    /** The LDAP Profile name to be used when \&quot;authorizationType\&quot; is \&quot;ldap\&quot;. The default value is &#x60;\&quot;\&quot;&#x60;. */
    public var authorizationProfileName: String?
    /** Authorization mechanism to be used for clients connecting to the Message VPN. The default value is &#x60;\&quot;internal\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;ldap\&quot; - LDAP authorization. \&quot;internal\&quot; - Internal authorization. &lt;/pre&gt;  */
    public var authorizationType: AuthorizationType?
    /** Enable or disable validation of the Common Name (CN) in the server certificate from the Remote Router. If enabled, the Common Name is checked against the list of Trusted Common Names configured for the Bridge. The default value is &#x60;true&#x60;. */
    public var bridgingTlsServerCertEnforceTrustedCommonNameEnabled: Bool?
    /** The maximum depth for the server certificate chain. The depth of the chain is defined as the number of signing CA certificates that are present in the chain back to the trusted self-signed root CA certificate. The default value is &#x60;3&#x60;. */
    public var bridgingTlsServerCertMaxChainDepth: Int64?
    /** Enable or disable validation of the \&quot;Not Before\&quot; and \&quot;Not After\&quot; validity dates in the server certificate. When disabled, a certificate will be accepted even if the certificate is not valid according to the \&quot;Not Before\&quot; and \&quot;Not After\&quot; validity dates in the certificate. The default value is &#x60;true&#x60;. */
    public var bridgingTlsServerCertValidateDateEnabled: Bool?
    /** Enable or disable managing of cache instances over the message bus. The default value is &#x60;true&#x60;. */
    public var distributedCacheManagementEnabled: Bool?
    /** Enable or disable the Message VPN. The default value is &#x60;false&#x60;. */
    public var enabled: Bool?
    public var eventConnectionCountThreshold: EventThreshold?
    public var eventEgressFlowCountThreshold: EventThreshold?
    public var eventEgressMsgRateThreshold: EventThresholdByValue?
    public var eventEndpointCountThreshold: EventThreshold?
    public var eventIngressFlowCountThreshold: EventThreshold?
    public var eventIngressMsgRateThreshold: EventThresholdByValue?
    /** Size in KB for what is being considered a large message for the Message VPN. The default value is &#x60;1024&#x60;. */
    public var eventLargeMsgThreshold: Int64?
    /** A prefix applied to all published Events in the Message VPN. The default value is &#x60;\&quot;\&quot;&#x60;. */
    public var eventLogTag: String?
    public var eventMsgSpoolUsageThreshold: EventThreshold?
    /** Enable or disable Client level Event message publishing. The default value is &#x60;false&#x60;. */
    public var eventPublishClientEnabled: Bool?
    /** Enable or disable Message VPN level Event message publishing. The default value is &#x60;false&#x60;. */
    public var eventPublishMsgVpnEnabled: Bool?
    /** Subscription level Event message publishing mode. The default value is &#x60;\&quot;off\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;off\&quot; - Disable client level event message publishing. \&quot;on-with-format-v1\&quot; - Enable client level event message publishing with format v1. \&quot;on-with-no-unsubscribe-events-on-disconnect-format-v1\&quot; - As \&quot;on-with-format-v1\&quot;, but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions. \&quot;on-with-format-v2\&quot; - Enable client level event message publishing with format v2. \&quot;on-with-no-unsubscribe-events-on-disconnect-format-v2\&quot; - As \&quot;on-with-format-v2\&quot;, but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions. &lt;/pre&gt;  */
    public var eventPublishSubscriptionMode: EventPublishSubscriptionMode?
    /** Enable or disable Event publish topics in MQTT format. The default value is &#x60;false&#x60;. */
    public var eventPublishTopicFormatMqttEnabled: Bool?
    /** Enable or disable Event publish topics in SMF format. The default value is &#x60;true&#x60;. */
    public var eventPublishTopicFormatSmfEnabled: Bool?
    public var eventServiceAmqpConnectionCountThreshold: EventThreshold?
    public var eventServiceMqttConnectionCountThreshold: EventThreshold?
    public var eventServiceRestIncomingConnectionCountThreshold: EventThreshold?
    public var eventServiceSmfConnectionCountThreshold: EventThreshold?
    public var eventServiceWebConnectionCountThreshold: EventThreshold?
    public var eventSubscriptionCountThreshold: EventThreshold?
    public var eventTransactedSessionCountThreshold: EventThreshold?
    public var eventTransactionCountThreshold: EventThreshold?
    /** Enable or disable the export of subscriptions in the Message VPN to other routers in the network over Neighbor links. The default value is &#x60;false&#x60;. */
    public var exportSubscriptionsEnabled: Bool?
    /** Enable or disable JNDI access for clients in the Message VPN. The default value is &#x60;false&#x60;. Available since 2.2. */
    public var jndiEnabled: Bool?
    /** The maximum number of client connections that can be simultaneously connected to the Message VPN. This value may be higher than supported by the hardware. The default is the maximum value supported by the hardware. The default is the max value supported by the hardware. */
    public var maxConnectionCount: Int64?
    /** The maximum number of egress flows that can be created in the Message VPN. The default value is &#x60;16000&#x60;. */
    public var maxEgressFlowCount: Int64?
    /** The maximum number of Queues and Topic Endpoints that can be created in the Message VPN. The default value is &#x60;16000&#x60;. */
    public var maxEndpointCount: Int64?
    /** The maximum number of ingress flows that can be created in the Message VPN. The default value is &#x60;16000&#x60;. */
    public var maxIngressFlowCount: Int64?
    /** The maximum Message Spool usage by the Message VPN, in megabytes. The default value is &#x60;0&#x60;. */
    public var maxMsgSpoolUsage: Int64?
    /** The maximum number of local client subscriptions (both primary and backup) that can be added to the Message VPN. The default varies by platform. The default varies by platform. */
    public var maxSubscriptionCount: Int64?
    /** The maximum number of transacted sessions for the Message VPN. The default varies by platform. The default varies by platform. */
    public var maxTransactedSessionCount: Int64?
    /** The maximum number of transactions for the Message VPN. The default varies by platform. The default varies by platform. */
    public var maxTransactionCount: Int64?
    /** The name of the Message VPN. */
    public var msgVpnName: String?
    /** The acknowledgement (ACK) propagation interval for the Replication Bridge, in number of replicated messages. The default value is &#x60;20&#x60;. */
    public var replicationAckPropagationIntervalMsgCount: Int64?
    /** The Client Username the Replication Bridge uses to login to the Remote Message VPN on the Replication mate. The default value is &#x60;\&quot;\&quot;&#x60;. */
    public var replicationBridgeAuthenticationBasicClientUsername: String?
    /** The password the Replication Bridge uses to login to the Remote Message VPN on the Replication mate. The default is to have no password. The default is to have no &#x60;replicationBridgeAuthenticationBasicPassword&#x60;. */
    public var replicationBridgeAuthenticationBasicPassword: String?
    /** The PEM formatted content for the client certificate used by this bridge to login to the Remote Message VPN. It must consist of a private key and between one and three certificates comprising the certificate trust chain. The default value is &#x60;\&quot;\&quot;&#x60;. Available since 2.9. */
    public var replicationBridgeAuthenticationClientCertContent: String?
    /** The password for the client certificate used by this bridge to login to the Remote Message VPN. The default value is &#x60;\&quot;\&quot;&#x60;. Available since 2.9. */
    public var replicationBridgeAuthenticationClientCertPassword: String?
    /** The Authentication Scheme for the Replication Bridge in the Message VPN. The default value is &#x60;\&quot;basic\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;basic\&quot; - Basic Authentication Scheme (via username and password). \&quot;client-certificate\&quot; - Client Certificate Authentication Scheme (via certificate file or content). &lt;/pre&gt;  */
    public var replicationBridgeAuthenticationScheme: ReplicationBridgeAuthenticationScheme?
    /** Whether compression is used for the Replication Bridge. The default value is &#x60;false&#x60;. */
    public var replicationBridgeCompressedDataEnabled: Bool?
    /** The size of the window used for guaranteed messages published to the Replication Bridge, in messages. The default value is &#x60;255&#x60;. */
    public var replicationBridgeEgressFlowWindowSize: Int64?
    /** Number of seconds that must pass before retrying the Replication Bridge connection. The default value is &#x60;3&#x60;. */
    public var replicationBridgeRetryDelay: Int64?
    /** Enable or disable use of TLS for the Replication Bridge connection. The default value is &#x60;false&#x60;. */
    public var replicationBridgeTlsEnabled: Bool?
    /** The Client Profile for the Unidirectional Replication Bridge. The Client Profile must exist in the local Message VPN, and it is used only for the TCP parameters. The default value is &#x60;\&quot;#client-profile\&quot;&#x60;. */
    public var replicationBridgeUnidirectionalClientProfileName: String?
    /** Enable or disable the Replication feature for the Message VPN. The default value is &#x60;false&#x60;. */
    public var replicationEnabled: Bool?
    /** The behavior to take when enabling the Replication feature for the Message VPN, depending on the existence of the Replication Queue. The default value is &#x60;\&quot;fail-on-existing-queue\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;fail-on-existing-queue\&quot; - The data replication queue must not already exist. \&quot;force-use-existing-queue\&quot; - The data replication queue must already exist. Any data messages on the Queue will be forwarded to interested applications. IMPORTANT: Before using this mode be certain that the messages are not stale or otherwise unsuitable to be forwarded. This mode can only be specified when the existing queue is configured the same as is currently specified under replication configuration otherwise the enabling of replication will fail. \&quot;force-recreate-queue\&quot; - The data replication queue must already exist. Any data messages on the Queue will be discarded. IMPORTANT: Before using this mode be certain that the messages on the existing data replication queue are not needed by interested applications. &lt;/pre&gt;  */
    public var replicationEnabledQueueBehavior: ReplicationEnabledQueueBehavior?
    /** The maximum Message Spool usage by the Replication Bridge Queue (quota), in megabytes. The default value is &#x60;60000&#x60;. */
    public var replicationQueueMaxMsgSpoolUsage: Int64?
    /** Assign the message discard behavior, that is the circumstances under which a negative acknowledgement (NACK) is sent to the Client on the Replication Bridge Queue discards. The default value is &#x60;true&#x60;. */
    public var replicationQueueRejectMsgToSenderOnDiscardEnabled: Bool?
    /** Enable or disable the synchronously replicated topics ineligible behavior of the Replication Bridge. If enabled and the synchronous replication becomes ineligible, guaranteed messages published to synchronously replicated topics will be rejected back to the sender as a negative acknowledgement (NACK). If disabled, the synchronous replication will revert to the asynchronous one. The default value is &#x60;false&#x60;. */
    public var replicationRejectMsgWhenSyncIneligibleEnabled: Bool?
    /** The replication role for the Message VPN. The default value is &#x60;\&quot;standby\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;active\&quot; - Assume the Active role in Replication for the Message VPN. \&quot;standby\&quot; - Assume the Standby role in Replication for the Message VPN. &lt;/pre&gt;  */
    public var replicationRole: ReplicationRole?
    /** The transaction replication mode for all transactions within the Message VPN. When mode is asynchronous, all transactions originated by clients are replicated to the standby site using the asynchronous replication. When mode is synchronous, all transactions originated by clients are replicated to the standby site using the synchronous replication. Changing this value during operation will not affect existing transactions, it is only used upon starting a transaction. The default value is &#x60;\&quot;async\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;sync\&quot; - Synchronous replication-mode. Published messages are acknowledged when they are spooled on the standby site. \&quot;async\&quot; - Asynchronous replication-mode. Published messages are acknowledged when they are spooled locally. &lt;/pre&gt;  */
    public var replicationTransactionMode: ReplicationTransactionMode?
    /** Enable or disable validation of the Common Name (CN) in the server certificate from the remote REST Consumer. If enabled, the Common Name is checked against the list of Trusted Common Names configured for the REST Consumer. The default value is &#x60;true&#x60;. */
    public var restTlsServerCertEnforceTrustedCommonNameEnabled: Bool?
    /** The maximum depth for the server certificate from the remote REST Consumer chain. The depth of the chain is defined as the number of signing CA certificates that are present in the chain back to the trusted self-signed root CA certificate. The default value is &#x60;3&#x60;. */
    public var restTlsServerCertMaxChainDepth: Int64?
    /** Enable or disable validation of the \&quot;Not Before\&quot; and \&quot;Not After\&quot; validity dates in the server certificate from the remote REST Consumer. When disabled, a certificate will be accepted even if the certificate is not valid according to the \&quot;Not Before\&quot; and \&quot;Not After\&quot; validity dates in the certificate. The default value is &#x60;true&#x60;. */
    public var restTlsServerCertValidateDateEnabled: Bool?
    /** Enable or disable \&quot;admin client\&quot; SEMP over the message bus commands for the current Message VPN. The default value is &#x60;false&#x60;. */
    public var sempOverMsgBusAdminClientEnabled: Bool?
    /** Enable or disable \&quot;admin distributed-cache\&quot; SEMP over the message bus commands for the current Message VPN. The default value is &#x60;false&#x60;. */
    public var sempOverMsgBusAdminDistributedCacheEnabled: Bool?
    /** Enable or disable \&quot;admin\&quot; SEMP over the message bus commands for the current Message VPN. The default value is &#x60;false&#x60;. */
    public var sempOverMsgBusAdminEnabled: Bool?
    /** Enable or disable SEMP over the message bus for the current Message VPN. The default value is &#x60;true&#x60;. */
    public var sempOverMsgBusEnabled: Bool?
    /** Enable or disable \&quot;show\&quot; SEMP over the message bus commands for the current Message VPN. The default value is &#x60;false&#x60;. */
    public var sempOverMsgBusShowEnabled: Bool?
    /** The maximum number of AMQP client connections that can be simultaneously connected to the Message VPN. The default is the max value supported by the hardware. Available since 2.2. */
    public var serviceAmqpMaxConnectionCount: Int64?
    /** Enable or disable the plain-text AMQP service in the Message VPN. Disabling causes clients connected to the corresponding listen-port to be disconnected. The default value is &#x60;false&#x60;. Available since 2.2. */
    public var serviceAmqpPlainTextEnabled: Bool?
    /** The port number for plain-text AMQP clients that connect to the Message VPN. The default is to have no &#x60;serviceAmqpPlainTextListenPort&#x60;. Available since 2.2. */
    public var serviceAmqpPlainTextListenPort: Int64?
    /** Enable or disable the use of TLS for the AMQP service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected. The default value is &#x60;false&#x60;. Available since 2.2. */
    public var serviceAmqpTlsEnabled: Bool?
    /** The port number for AMQP clients that connect to the Message VPN over TLS. The default is to have no &#x60;serviceAmqpTlsListenPort&#x60;. Available since 2.2. */
    public var serviceAmqpTlsListenPort: Int64?
    /** The maximum number of MQTT client connections that can be simultaneously connected to the Message VPN. The default is the max value supported by the hardware. Available since 2.1. */
    public var serviceMqttMaxConnectionCount: Int64?
    /** Enable or disable the plain-text MQTT service in the Message VPN. Disabling causes clients currently connected to be disconnected. The default value is &#x60;false&#x60;. Available since 2.1. */
    public var serviceMqttPlainTextEnabled: Bool?
    /** The port number for plain-text MQTT clients that connect to the Message VPN. The default value is &#x60;0&#x60;. Available since 2.1. */
    public var serviceMqttPlainTextListenPort: Int64?
    /** Enable or disable the use of TLS for the MQTT service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected. The default value is &#x60;false&#x60;. Available since 2.1. */
    public var serviceMqttTlsEnabled: Bool?
    /** The port number for MQTT clients that connect to the Message VPN over TLS. The default value is &#x60;0&#x60;. Available since 2.1. */
    public var serviceMqttTlsListenPort: Int64?
    /** Enable or disable the use of WebSocket over TLS for the MQTT service in the Message VPN. Disabling causes clients currently connected by WebSocket over TLS to be disconnected. The default value is &#x60;false&#x60;. Available since 2.1. */
    public var serviceMqttTlsWebSocketEnabled: Bool?
    /** The port number for MQTT clients that connect to the Message VPN using WebSocket over TLS. The default value is &#x60;0&#x60;. Available since 2.1. */
    public var serviceMqttTlsWebSocketListenPort: Int64?
    /** Enable or disable the use of WebSocket for the MQTT service in the Message VPN. Disabling causes clients currently connected by WebSocket to be disconnected. The default value is &#x60;false&#x60;. Available since 2.1. */
    public var serviceMqttWebSocketEnabled: Bool?
    /** The port number for plain-text MQTT clients that connect to the Message VPN using WebSocket. The default value is &#x60;0&#x60;. Available since 2.1. */
    public var serviceMqttWebSocketListenPort: Int64?
    /** The maximum number of REST incoming client connections that can be simultaneously connected to the Message VPN. The default is the max value supported by the hardware. */
    public var serviceRestIncomingMaxConnectionCount: Int64?
    /** Enable or disable the plain-text REST service for incoming clients in the Message VPN. Disabling causes clients currently connected to be disconnected. The default value is &#x60;false&#x60;. */
    public var serviceRestIncomingPlainTextEnabled: Bool?
    /** The port number for incoming plain-text REST clients that connect to the Message VPN. The default value is &#x60;0&#x60;. */
    public var serviceRestIncomingPlainTextListenPort: Int64?
    /** Enable or disable the use of TLS for the REST service for incoming clients in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected. The default value is &#x60;false&#x60;. */
    public var serviceRestIncomingTlsEnabled: Bool?
    /** The port number for incoming REST clients that connect to the Message VPN over TLS. The default value is &#x60;0&#x60;. */
    public var serviceRestIncomingTlsListenPort: Int64?
    /** The REST service mode for incoming REST clients that connect to the Message VPN. The default value is &#x60;\&quot;messaging\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;gateway\&quot; - Act as a message gateway through which REST messages are propagated. \&quot;messaging\&quot; - Act as a message router on which REST messages are queued. &lt;/pre&gt;  Available since 2.6. */
    public var serviceRestMode: ServiceRestMode?
    /** The maximum number of REST Consumer (outgoing) client connections that can be simultaneously connected to the Message VPN. The default varies by platform. */
    public var serviceRestOutgoingMaxConnectionCount: Int64?
    /** The maximum number of SMF client connections that can be simultaneously connected to the Message VPN. The default is the max value supported by the hardware. */
    public var serviceSmfMaxConnectionCount: Int64?
    /** Enable or disable the plain-text SMF service in the Message VPN. Disabling causes clients currently connected to be disconnected. The default value is &#x60;true&#x60;. */
    public var serviceSmfPlainTextEnabled: Bool?
    /** Enable or disable the use of TLS for the SMF service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected. The default value is &#x60;true&#x60;. */
    public var serviceSmfTlsEnabled: Bool?
    /** The maximum number of Web Transport client connections that can be simultaneously connected to the Message VPN. The default is the max value supported by the hardware. */
    public var serviceWebMaxConnectionCount: Int64?
    /** Enable or disable the plain-text Web Transport service in the Message VPN. Disabling causes clients currently connected to be disconnected. The default value is &#x60;true&#x60;. */
    public var serviceWebPlainTextEnabled: Bool?
    /** Enable or disable the use of TLS for the Web Transport service in the Message VPN. Disabling causes clients currently connected over TLS to be disconnected. The default value is &#x60;true&#x60;. */
    public var serviceWebTlsEnabled: Bool?
    /** Enable or disable the allowing of TLS SMF clients to downgrade their connections to plain-text connections. Changing this will not affect existing connections. The default value is &#x60;false&#x60;. */
    public var tlsAllowDowngradeToPlainTextEnabled: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["authenticationBasicEnabled"] = self.authenticationBasicEnabled
        nillableDictionary["authenticationBasicProfileName"] = self.authenticationBasicProfileName
        nillableDictionary["authenticationBasicRadiusDomain"] = self.authenticationBasicRadiusDomain
        nillableDictionary["authenticationBasicType"] = self.authenticationBasicType?.rawValue
        nillableDictionary["authenticationClientCertAllowApiProvidedUsernameEnabled"] = self.authenticationClientCertAllowApiProvidedUsernameEnabled
        nillableDictionary["authenticationClientCertEnabled"] = self.authenticationClientCertEnabled
        nillableDictionary["authenticationClientCertMaxChainDepth"] = self.authenticationClientCertMaxChainDepth?.encodeToJSON()
        nillableDictionary["authenticationClientCertRevocationCheckMode"] = self.authenticationClientCertRevocationCheckMode?.rawValue
        nillableDictionary["authenticationClientCertUsernameSource"] = self.authenticationClientCertUsernameSource?.rawValue
        nillableDictionary["authenticationClientCertValidateDateEnabled"] = self.authenticationClientCertValidateDateEnabled
        nillableDictionary["authenticationKerberosAllowApiProvidedUsernameEnabled"] = self.authenticationKerberosAllowApiProvidedUsernameEnabled
        nillableDictionary["authenticationKerberosEnabled"] = self.authenticationKerberosEnabled
        nillableDictionary["authorizationLdapGroupMembershipAttributeName"] = self.authorizationLdapGroupMembershipAttributeName
        nillableDictionary["authorizationProfileName"] = self.authorizationProfileName
        nillableDictionary["authorizationType"] = self.authorizationType?.rawValue
        nillableDictionary["bridgingTlsServerCertEnforceTrustedCommonNameEnabled"] = self.bridgingTlsServerCertEnforceTrustedCommonNameEnabled
        nillableDictionary["bridgingTlsServerCertMaxChainDepth"] = self.bridgingTlsServerCertMaxChainDepth?.encodeToJSON()
        nillableDictionary["bridgingTlsServerCertValidateDateEnabled"] = self.bridgingTlsServerCertValidateDateEnabled
        nillableDictionary["distributedCacheManagementEnabled"] = self.distributedCacheManagementEnabled
        nillableDictionary["enabled"] = self.enabled
        nillableDictionary["eventConnectionCountThreshold"] = self.eventConnectionCountThreshold?.encodeToJSON()
        nillableDictionary["eventEgressFlowCountThreshold"] = self.eventEgressFlowCountThreshold?.encodeToJSON()
        nillableDictionary["eventEgressMsgRateThreshold"] = self.eventEgressMsgRateThreshold?.encodeToJSON()
        nillableDictionary["eventEndpointCountThreshold"] = self.eventEndpointCountThreshold?.encodeToJSON()
        nillableDictionary["eventIngressFlowCountThreshold"] = self.eventIngressFlowCountThreshold?.encodeToJSON()
        nillableDictionary["eventIngressMsgRateThreshold"] = self.eventIngressMsgRateThreshold?.encodeToJSON()
        nillableDictionary["eventLargeMsgThreshold"] = self.eventLargeMsgThreshold?.encodeToJSON()
        nillableDictionary["eventLogTag"] = self.eventLogTag
        nillableDictionary["eventMsgSpoolUsageThreshold"] = self.eventMsgSpoolUsageThreshold?.encodeToJSON()
        nillableDictionary["eventPublishClientEnabled"] = self.eventPublishClientEnabled
        nillableDictionary["eventPublishMsgVpnEnabled"] = self.eventPublishMsgVpnEnabled
        nillableDictionary["eventPublishSubscriptionMode"] = self.eventPublishSubscriptionMode?.rawValue
        nillableDictionary["eventPublishTopicFormatMqttEnabled"] = self.eventPublishTopicFormatMqttEnabled
        nillableDictionary["eventPublishTopicFormatSmfEnabled"] = self.eventPublishTopicFormatSmfEnabled
        nillableDictionary["eventServiceAmqpConnectionCountThreshold"] = self.eventServiceAmqpConnectionCountThreshold?.encodeToJSON()
        nillableDictionary["eventServiceMqttConnectionCountThreshold"] = self.eventServiceMqttConnectionCountThreshold?.encodeToJSON()
        nillableDictionary["eventServiceRestIncomingConnectionCountThreshold"] = self.eventServiceRestIncomingConnectionCountThreshold?.encodeToJSON()
        nillableDictionary["eventServiceSmfConnectionCountThreshold"] = self.eventServiceSmfConnectionCountThreshold?.encodeToJSON()
        nillableDictionary["eventServiceWebConnectionCountThreshold"] = self.eventServiceWebConnectionCountThreshold?.encodeToJSON()
        nillableDictionary["eventSubscriptionCountThreshold"] = self.eventSubscriptionCountThreshold?.encodeToJSON()
        nillableDictionary["eventTransactedSessionCountThreshold"] = self.eventTransactedSessionCountThreshold?.encodeToJSON()
        nillableDictionary["eventTransactionCountThreshold"] = self.eventTransactionCountThreshold?.encodeToJSON()
        nillableDictionary["exportSubscriptionsEnabled"] = self.exportSubscriptionsEnabled
        nillableDictionary["jndiEnabled"] = self.jndiEnabled
        nillableDictionary["maxConnectionCount"] = self.maxConnectionCount?.encodeToJSON()
        nillableDictionary["maxEgressFlowCount"] = self.maxEgressFlowCount?.encodeToJSON()
        nillableDictionary["maxEndpointCount"] = self.maxEndpointCount?.encodeToJSON()
        nillableDictionary["maxIngressFlowCount"] = self.maxIngressFlowCount?.encodeToJSON()
        nillableDictionary["maxMsgSpoolUsage"] = self.maxMsgSpoolUsage?.encodeToJSON()
        nillableDictionary["maxSubscriptionCount"] = self.maxSubscriptionCount?.encodeToJSON()
        nillableDictionary["maxTransactedSessionCount"] = self.maxTransactedSessionCount?.encodeToJSON()
        nillableDictionary["maxTransactionCount"] = self.maxTransactionCount?.encodeToJSON()
        nillableDictionary["msgVpnName"] = self.msgVpnName
        nillableDictionary["replicationAckPropagationIntervalMsgCount"] = self.replicationAckPropagationIntervalMsgCount?.encodeToJSON()
        nillableDictionary["replicationBridgeAuthenticationBasicClientUsername"] = self.replicationBridgeAuthenticationBasicClientUsername
        nillableDictionary["replicationBridgeAuthenticationBasicPassword"] = self.replicationBridgeAuthenticationBasicPassword
        nillableDictionary["replicationBridgeAuthenticationClientCertContent"] = self.replicationBridgeAuthenticationClientCertContent
        nillableDictionary["replicationBridgeAuthenticationClientCertPassword"] = self.replicationBridgeAuthenticationClientCertPassword
        nillableDictionary["replicationBridgeAuthenticationScheme"] = self.replicationBridgeAuthenticationScheme?.rawValue
        nillableDictionary["replicationBridgeCompressedDataEnabled"] = self.replicationBridgeCompressedDataEnabled
        nillableDictionary["replicationBridgeEgressFlowWindowSize"] = self.replicationBridgeEgressFlowWindowSize?.encodeToJSON()
        nillableDictionary["replicationBridgeRetryDelay"] = self.replicationBridgeRetryDelay?.encodeToJSON()
        nillableDictionary["replicationBridgeTlsEnabled"] = self.replicationBridgeTlsEnabled
        nillableDictionary["replicationBridgeUnidirectionalClientProfileName"] = self.replicationBridgeUnidirectionalClientProfileName
        nillableDictionary["replicationEnabled"] = self.replicationEnabled
        nillableDictionary["replicationEnabledQueueBehavior"] = self.replicationEnabledQueueBehavior?.rawValue
        nillableDictionary["replicationQueueMaxMsgSpoolUsage"] = self.replicationQueueMaxMsgSpoolUsage?.encodeToJSON()
        nillableDictionary["replicationQueueRejectMsgToSenderOnDiscardEnabled"] = self.replicationQueueRejectMsgToSenderOnDiscardEnabled
        nillableDictionary["replicationRejectMsgWhenSyncIneligibleEnabled"] = self.replicationRejectMsgWhenSyncIneligibleEnabled
        nillableDictionary["replicationRole"] = self.replicationRole?.rawValue
        nillableDictionary["replicationTransactionMode"] = self.replicationTransactionMode?.rawValue
        nillableDictionary["restTlsServerCertEnforceTrustedCommonNameEnabled"] = self.restTlsServerCertEnforceTrustedCommonNameEnabled
        nillableDictionary["restTlsServerCertMaxChainDepth"] = self.restTlsServerCertMaxChainDepth?.encodeToJSON()
        nillableDictionary["restTlsServerCertValidateDateEnabled"] = self.restTlsServerCertValidateDateEnabled
        nillableDictionary["sempOverMsgBusAdminClientEnabled"] = self.sempOverMsgBusAdminClientEnabled
        nillableDictionary["sempOverMsgBusAdminDistributedCacheEnabled"] = self.sempOverMsgBusAdminDistributedCacheEnabled
        nillableDictionary["sempOverMsgBusAdminEnabled"] = self.sempOverMsgBusAdminEnabled
        nillableDictionary["sempOverMsgBusEnabled"] = self.sempOverMsgBusEnabled
        nillableDictionary["sempOverMsgBusShowEnabled"] = self.sempOverMsgBusShowEnabled
        nillableDictionary["serviceAmqpMaxConnectionCount"] = self.serviceAmqpMaxConnectionCount?.encodeToJSON()
        nillableDictionary["serviceAmqpPlainTextEnabled"] = self.serviceAmqpPlainTextEnabled
        nillableDictionary["serviceAmqpPlainTextListenPort"] = self.serviceAmqpPlainTextListenPort?.encodeToJSON()
        nillableDictionary["serviceAmqpTlsEnabled"] = self.serviceAmqpTlsEnabled
        nillableDictionary["serviceAmqpTlsListenPort"] = self.serviceAmqpTlsListenPort?.encodeToJSON()
        nillableDictionary["serviceMqttMaxConnectionCount"] = self.serviceMqttMaxConnectionCount?.encodeToJSON()
        nillableDictionary["serviceMqttPlainTextEnabled"] = self.serviceMqttPlainTextEnabled
        nillableDictionary["serviceMqttPlainTextListenPort"] = self.serviceMqttPlainTextListenPort?.encodeToJSON()
        nillableDictionary["serviceMqttTlsEnabled"] = self.serviceMqttTlsEnabled
        nillableDictionary["serviceMqttTlsListenPort"] = self.serviceMqttTlsListenPort?.encodeToJSON()
        nillableDictionary["serviceMqttTlsWebSocketEnabled"] = self.serviceMqttTlsWebSocketEnabled
        nillableDictionary["serviceMqttTlsWebSocketListenPort"] = self.serviceMqttTlsWebSocketListenPort?.encodeToJSON()
        nillableDictionary["serviceMqttWebSocketEnabled"] = self.serviceMqttWebSocketEnabled
        nillableDictionary["serviceMqttWebSocketListenPort"] = self.serviceMqttWebSocketListenPort?.encodeToJSON()
        nillableDictionary["serviceRestIncomingMaxConnectionCount"] = self.serviceRestIncomingMaxConnectionCount?.encodeToJSON()
        nillableDictionary["serviceRestIncomingPlainTextEnabled"] = self.serviceRestIncomingPlainTextEnabled
        nillableDictionary["serviceRestIncomingPlainTextListenPort"] = self.serviceRestIncomingPlainTextListenPort?.encodeToJSON()
        nillableDictionary["serviceRestIncomingTlsEnabled"] = self.serviceRestIncomingTlsEnabled
        nillableDictionary["serviceRestIncomingTlsListenPort"] = self.serviceRestIncomingTlsListenPort?.encodeToJSON()
        nillableDictionary["serviceRestMode"] = self.serviceRestMode?.rawValue
        nillableDictionary["serviceRestOutgoingMaxConnectionCount"] = self.serviceRestOutgoingMaxConnectionCount?.encodeToJSON()
        nillableDictionary["serviceSmfMaxConnectionCount"] = self.serviceSmfMaxConnectionCount?.encodeToJSON()
        nillableDictionary["serviceSmfPlainTextEnabled"] = self.serviceSmfPlainTextEnabled
        nillableDictionary["serviceSmfTlsEnabled"] = self.serviceSmfTlsEnabled
        nillableDictionary["serviceWebMaxConnectionCount"] = self.serviceWebMaxConnectionCount?.encodeToJSON()
        nillableDictionary["serviceWebPlainTextEnabled"] = self.serviceWebPlainTextEnabled
        nillableDictionary["serviceWebTlsEnabled"] = self.serviceWebTlsEnabled
        nillableDictionary["tlsAllowDowngradeToPlainTextEnabled"] = self.tlsAllowDowngradeToPlainTextEnabled
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
