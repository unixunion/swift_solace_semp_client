//
// MsgVpnJndiConnectionFactory.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class MsgVpnJndiConnectionFactory: JSONEncodable {
    public enum MessagingDefaultDeliveryMode: String { 
        case Persistent = "persistent"
        case NonPersistent = "non-persistent"
    }
    /** Enable or disable whether new JMS connections can use the same Client identifier (ID) as an existing connection. The default value is &#x60;false&#x60;. Available since 2.3. */
    public var allowDuplicateClientIdEnabled: Bool?
    /** The description of the Client. The default value is &#x60;\&quot;\&quot;&#x60;. */
    public var clientDescription: String?
    /** The Client identifier (ID). If not specified, a unique value for it will be generated. The default value is &#x60;\&quot;\&quot;&#x60;. */
    public var clientId: String?
    /** The name of the JMS Connection Factory. */
    public var connectionFactoryName: String?
    /** Enable or disable overriding by the Subscriber (Consumer) of the deliver-to-one (DTO) property on messages. When enabled, the Subscriber can receive all DTO tagged messages. The default value is &#x60;true&#x60;. */
    public var dtoReceiveOverrideEnabled: Bool?
    /** The priority for receiving deliver-to-one (DTO) messages by the Subscriber (Consumer) if the messages are published on the local Router that the Subscriber is directly connected to. The default value is &#x60;1&#x60;. */
    public var dtoReceiveSubscriberLocalPriority: Int32?
    /** The priority for receiving deliver-to-one (DTO) messages by the Subscriber (Consumer) if the messages are published on a remote Router. The default value is &#x60;1&#x60;. */
    public var dtoReceiveSubscriberNetworkPriority: Int32?
    /** Enable or disable the deliver-to-one (DTO) property on messages sent by the Publisher (Producer). The default value is &#x60;false&#x60;. */
    public var dtoSendEnabled: Bool?
    /** Enable or disable whether a durable endpoint will be dynamically created on the Router when the client calls \&quot;Session.createDurableSubscriber()\&quot; or \&quot;Session.createQueue()\&quot;. The created endpoint respects the message time-to-live (TTL) according to the \&quot;dynamicEndpointRespectTtlEnabled\&quot; property. The default value is &#x60;false&#x60;. */
    public var dynamicEndpointCreateDurableEnabled: Bool?
    /** Enable or disable whether dynamically created durable and non-durable endpoints respect the message time-to-live (TTL) property. The default value is &#x60;true&#x60;. */
    public var dynamicEndpointRespectTtlEnabled: Bool?
    /** The timeout for sending the acknowledgement (ACK) for guaranteed messages received by the Subscriber (Consumer), in milliseconds. The default value is &#x60;1000&#x60;. */
    public var guaranteedReceiveAckTimeout: Int32?
    /** The size of the window for guaranteed messages received by the Subscriber (Consumer), in messages. The default value is &#x60;18&#x60;. */
    public var guaranteedReceiveWindowSize: Int32?
    /** The threshold for sending the acknowledgement (ACK) for guaranteed messages received by the Subscriber (Consumer) as a percentage of the \&quot;guaranteedReceiveWindowSize\&quot; value. The default value is &#x60;60&#x60;. */
    public var guaranteedReceiveWindowSizeAckThreshold: Int32?
    /** The timeout for receiving the acknowledgement (ACK) for guaranteed messages sent by the Publisher (Producer), in milliseconds. The default value is &#x60;2000&#x60;. */
    public var guaranteedSendAckTimeout: Int32?
    /** The size of the window for non-persistent guaranteed messages sent by the Publisher (Producer), in messages. For persistent messages the window size is fixed at 1. The default value is &#x60;255&#x60;. */
    public var guaranteedSendWindowSize: Int32?
    /** The default delivery mode for messages sent by the Publisher (Producer). The default value is &#x60;\&quot;persistent\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;persistent\&quot; - Router spools messages (persists in the Message Spool) as part of the send operation. \&quot;non-persistent\&quot; - Router does not spool messages (does not persist in the Message Spool) as part of the send operation. &lt;/pre&gt;  */
    public var messagingDefaultDeliveryMode: MessagingDefaultDeliveryMode?
    /** Enable or disable whether messages sent by the Publisher (Producer) are Dead Message Queue (DMQ) eligible by default. The default value is &#x60;false&#x60;. */
    public var messagingDefaultDmqEligibleEnabled: Bool?
    /** Enable or disable whether messages sent by the Publisher (Producer) are Eliding eligible by default. The default value is &#x60;false&#x60;. */
    public var messagingDefaultElidingEligibleEnabled: Bool?
    /** Enable or disable inclusion (adding or replacing) of the JMSXUserID property in messages sent by the Publisher (Producer). The default value is &#x60;false&#x60;. */
    public var messagingJmsxUserIdEnabled: Bool?
    /** Enable or disable encoding of JMS text messages in Publisher (Producer) messages as XML payload. When disabled, JMS text messages are encoded as a binary attachment. The default value is &#x60;true&#x60;. */
    public var messagingTextInXmlPayloadEnabled: Bool?
    /** The name of the Message VPN. */
    public var msgVpnName: String?
    /** The ZLIB compression level for the connection to the Router. The value \&quot;0\&quot; means no compression, and the value \&quot;-1\&quot; means the compression level is specified in the JNDI Properties file. The default value is &#x60;-1&#x60;. */
    public var transportCompressionLevel: Int32?
    /** The maximum number of retry attempts to establish an initial connection to the host (Router) or list of hosts (Routers). The value \&quot;0\&quot; means a single attempt (no retries), and the value \&quot;-1\&quot; means to retry forever. The default value is &#x60;0&#x60;. */
    public var transportConnectRetryCount: Int32?
    /** The maximum number of retry attempts to establish an initial connection to each host (Router) on the list of hosts (Routers). The value \&quot;0\&quot; means a single attempt (no retries), and the value \&quot;-1\&quot; means to retry forever. The default value is &#x60;0&#x60;. */
    public var transportConnectRetryPerHostCount: Int32?
    /** The timeout for establishing an initial connection to the Router, in milliseconds. The default value is &#x60;30000&#x60;. */
    public var transportConnectTimeout: Int32?
    /** Enable or disable usage of the Direct Transport mode for sending non-persistent messages. When disabled, the Guaranteed Transport mode is used. The default value is &#x60;true&#x60;. */
    public var transportDirectTransportEnabled: Bool?
    /** The maximum number of consecutive application-level keepalive messages sent without the Router response before the connection to the Router is closed. The default value is &#x60;3&#x60;. */
    public var transportKeepaliveCount: Int32?
    /** Enable or disable usage of application-level keepalive messages to maintain a connection with the Router. The default value is &#x60;true&#x60;. */
    public var transportKeepaliveEnabled: Bool?
    /** The interval between application-level keepalive messages, in milliseconds. The default value is &#x60;3000&#x60;. */
    public var transportKeepaliveInterval: Int32?
    /** Enable or disable delivery of asynchronous messages directly from the I/O thread. Contact Solace Support before enabling this property. The default value is &#x60;false&#x60;. */
    public var transportMsgCallbackOnIoThreadEnabled: Bool?
    /** Enable or disable optimization for the Direct Transport delivery mode. If enabled, the client application is limited to one Publisher (Producer) and one non-durable Subscriber (Consumer). The default value is &#x60;false&#x60;. */
    public var transportOptimizeDirectEnabled: Bool?
    /** The connection port number on the Router for SMF clients. The value \&quot;-1\&quot; means the port is specified in the JNDI Properties file. The default value is &#x60;-1&#x60;. */
    public var transportPort: Int32?
    /** The timeout for reading a reply from the Router, in milliseconds. The default value is &#x60;10000&#x60;. */
    public var transportReadTimeout: Int32?
    /** The size of the receive socket buffer, in bytes. It corresponds to the SO_RCVBUF socket option. The default value is &#x60;65536&#x60;. */
    public var transportReceiveBufferSize: Int32?
    /** The maximum number of attempts to reconnect to the host (Router) or list of hosts (Routers) after the connection has been lost. The value \&quot;-1\&quot; means to retry forever. The default value is &#x60;3&#x60;. */
    public var transportReconnectRetryCount: Int32?
    /** The amount of time before making another attempt to connect or reconnect to the host (Router) after the connection has been lost, in milliseconds. The default value is &#x60;3000&#x60;. */
    public var transportReconnectRetryWait: Int32?
    /** The size of the send socket buffer, in bytes. It corresponds to the SO_SNDBUF socket option. The default value is &#x60;65536&#x60;. */
    public var transportSendBufferSize: Int32?
    /** Enable or disable the TCP_NODELAY option. When enabled, Nagle&#39;s algorithm for TCP/IP congestion control (RFC 896) is disabled. The default value is &#x60;true&#x60;. */
    public var transportTcpNoDelayEnabled: Bool?
    /** Enable or disable this as an XA Connection Factory. When enabled, the Connection Factory can be cast to \&quot;XAConnectionFactory\&quot;, \&quot;XAQueueConnectionFactory\&quot; or \&quot;XATopicConnectionFactory\&quot;. The default value is &#x60;false&#x60;. */
    public var xaEnabled: Bool?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["allowDuplicateClientIdEnabled"] = self.allowDuplicateClientIdEnabled
        nillableDictionary["clientDescription"] = self.clientDescription
        nillableDictionary["clientId"] = self.clientId
        nillableDictionary["connectionFactoryName"] = self.connectionFactoryName
        nillableDictionary["dtoReceiveOverrideEnabled"] = self.dtoReceiveOverrideEnabled
        nillableDictionary["dtoReceiveSubscriberLocalPriority"] = self.dtoReceiveSubscriberLocalPriority?.encodeToJSON()
        nillableDictionary["dtoReceiveSubscriberNetworkPriority"] = self.dtoReceiveSubscriberNetworkPriority?.encodeToJSON()
        nillableDictionary["dtoSendEnabled"] = self.dtoSendEnabled
        nillableDictionary["dynamicEndpointCreateDurableEnabled"] = self.dynamicEndpointCreateDurableEnabled
        nillableDictionary["dynamicEndpointRespectTtlEnabled"] = self.dynamicEndpointRespectTtlEnabled
        nillableDictionary["guaranteedReceiveAckTimeout"] = self.guaranteedReceiveAckTimeout?.encodeToJSON()
        nillableDictionary["guaranteedReceiveWindowSize"] = self.guaranteedReceiveWindowSize?.encodeToJSON()
        nillableDictionary["guaranteedReceiveWindowSizeAckThreshold"] = self.guaranteedReceiveWindowSizeAckThreshold?.encodeToJSON()
        nillableDictionary["guaranteedSendAckTimeout"] = self.guaranteedSendAckTimeout?.encodeToJSON()
        nillableDictionary["guaranteedSendWindowSize"] = self.guaranteedSendWindowSize?.encodeToJSON()
        nillableDictionary["messagingDefaultDeliveryMode"] = self.messagingDefaultDeliveryMode?.rawValue
        nillableDictionary["messagingDefaultDmqEligibleEnabled"] = self.messagingDefaultDmqEligibleEnabled
        nillableDictionary["messagingDefaultElidingEligibleEnabled"] = self.messagingDefaultElidingEligibleEnabled
        nillableDictionary["messagingJmsxUserIdEnabled"] = self.messagingJmsxUserIdEnabled
        nillableDictionary["messagingTextInXmlPayloadEnabled"] = self.messagingTextInXmlPayloadEnabled
        nillableDictionary["msgVpnName"] = self.msgVpnName
        nillableDictionary["transportCompressionLevel"] = self.transportCompressionLevel?.encodeToJSON()
        nillableDictionary["transportConnectRetryCount"] = self.transportConnectRetryCount?.encodeToJSON()
        nillableDictionary["transportConnectRetryPerHostCount"] = self.transportConnectRetryPerHostCount?.encodeToJSON()
        nillableDictionary["transportConnectTimeout"] = self.transportConnectTimeout?.encodeToJSON()
        nillableDictionary["transportDirectTransportEnabled"] = self.transportDirectTransportEnabled
        nillableDictionary["transportKeepaliveCount"] = self.transportKeepaliveCount?.encodeToJSON()
        nillableDictionary["transportKeepaliveEnabled"] = self.transportKeepaliveEnabled
        nillableDictionary["transportKeepaliveInterval"] = self.transportKeepaliveInterval?.encodeToJSON()
        nillableDictionary["transportMsgCallbackOnIoThreadEnabled"] = self.transportMsgCallbackOnIoThreadEnabled
        nillableDictionary["transportOptimizeDirectEnabled"] = self.transportOptimizeDirectEnabled
        nillableDictionary["transportPort"] = self.transportPort?.encodeToJSON()
        nillableDictionary["transportReadTimeout"] = self.transportReadTimeout?.encodeToJSON()
        nillableDictionary["transportReceiveBufferSize"] = self.transportReceiveBufferSize?.encodeToJSON()
        nillableDictionary["transportReconnectRetryCount"] = self.transportReconnectRetryCount?.encodeToJSON()
        nillableDictionary["transportReconnectRetryWait"] = self.transportReconnectRetryWait?.encodeToJSON()
        nillableDictionary["transportSendBufferSize"] = self.transportSendBufferSize?.encodeToJSON()
        nillableDictionary["transportTcpNoDelayEnabled"] = self.transportTcpNoDelayEnabled
        nillableDictionary["xaEnabled"] = self.xaEnabled
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
