//
// MsgVpnReplicatedTopic.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public class MsgVpnReplicatedTopic: JSONEncodable {
    public enum ReplicationMode: String { 
        case Sync = "sync"
        case Async = "async"
    }
    /** The name of the Message VPN. */
    public var msgVpnName: String?
    /** Topic for applying replication. Published messages matching this topic will be replicated to the standby site. */
    public var replicatedTopic: String?
    /** Choose the replication-mode for the Replicated Topic. The default value is &#x60;\&quot;async\&quot;&#x60;. The allowed values and their meaning are:  &lt;pre&gt; \&quot;sync\&quot; - Synchronous replication-mode. Published messages are acknowledged when they are spooled on the standby site. \&quot;async\&quot; - Asynchronous replication-mode. Published messages are acknowledged when they are spooled locally. &lt;/pre&gt;  Available since 2.1. */
    public var replicationMode: ReplicationMode?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["msgVpnName"] = self.msgVpnName
        nillableDictionary["replicatedTopic"] = self.replicatedTopic
        nillableDictionary["replicationMode"] = self.replicationMode?.rawValue
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
