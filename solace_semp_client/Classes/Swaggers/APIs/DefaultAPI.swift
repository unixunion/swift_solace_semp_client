//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class DefaultAPI: APIBase {
    /**
     Creates a Message VPN object.
     
     - parameter body: (body) The Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpn(body body: MsgVpn, select: [String]? = nil, completion: ((data: MsgVpnResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnWithRequestBuilder(body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Message VPN object.
     - POST /msgVpns
     - Creates a Message VPN object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replicationBridgeAuthenticationBasicPassword||||x| replicationBridgeAuthenticationClientCertContent||||x| replicationBridgeAuthenticationClientCertPassword||||x| replicationEnabledQueueBehavior||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent EventThresholdByValue|clearValue|setValue| EventThresholdByValue|setValue|clearValue| MsgVpn|authenticationBasicProfileName|authenticationBasicType| MsgVpn|authorizationProfileName|authorizationType| MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled| MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled| MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword| MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername| MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent| MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|    A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "serviceMqttMaxConnectionCount" : 6,
    "authorizationProfileName" : "authorizationProfileName",
    "replicationBridgeAuthenticationClientCertPassword" : "replicationBridgeAuthenticationClientCertPassword",
    "replicationBridgeEgressFlowWindowSize" : 4,
    "restTlsServerCertMaxChainDepth" : 9,
    "serviceRestIncomingPlainTextEnabled" : true,
    "replicationEnabled" : true,
    "eventServiceWebConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "bridgingTlsServerCertValidateDateEnabled" : true,
    "authorizationType" : "ldap",
    "replicationAckPropagationIntervalMsgCount" : 1,
    "bridgingTlsServerCertMaxChainDepth" : 6,
    "replicationBridgeCompressedDataEnabled" : true,
    "serviceAmqpPlainTextEnabled" : true,
    "bridgingTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "restTlsServerCertValidateDateEnabled" : true,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "authenticationKerberosEnabled" : true,
    "authorizationLdapGroupMembershipAttributeName" : "authorizationLdapGroupMembershipAttributeName",
    "serviceRestIncomingPlainTextListenPort" : 6,
    "authenticationClientCertUsernameSource" : "common-name",
    "replicationBridgeAuthenticationClientCertContent" : "replicationBridgeAuthenticationClientCertContent",
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceMqttPlainTextListenPort" : 3,
    "authenticationClientCertMaxChainDepth" : 0,
    "serviceMqttWebSocketEnabled" : true,
    "authenticationClientCertEnabled" : true,
    "restTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "replicationRejectMsgWhenSyncIneligibleEnabled" : true,
    "eventPublishTopicFormatSmfEnabled" : true,
    "authenticationBasicProfileName" : "authenticationBasicProfileName",
    "enabled" : true,
    "replicationBridgeAuthenticationScheme" : "basic",
    "replicationBridgeUnidirectionalClientProfileName" : "replicationBridgeUnidirectionalClientProfileName",
    "serviceRestIncomingMaxConnectionCount" : 6,
    "sempOverMsgBusEnabled" : true,
    "maxTransactionCount" : 7,
    "serviceAmqpTlsListenPort" : 9,
    "serviceMqttTlsListenPort" : 6,
    "eventServiceAmqpConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceRestMode" : "gateway",
    "serviceRestIncomingTlsEnabled" : true,
    "authenticationKerberosAllowApiProvidedUsernameEnabled" : true,
    "sempOverMsgBusAdminDistributedCacheEnabled" : true,
    "maxSubscriptionCount" : 1,
    "authenticationBasicType" : "internal",
    "serviceWebMaxConnectionCount" : 3,
    "serviceAmqpMaxConnectionCount" : 6,
    "maxEgressFlowCount" : 4,
    "serviceMqttWebSocketListenPort" : 2,
    "serviceSmfPlainTextEnabled" : true,
    "maxEndpointCount" : 7,
    "serviceWebTlsEnabled" : true,
    "serviceMqttTlsWebSocketEnabled" : true,
    "exportSubscriptionsEnabled" : true,
    "eventIngressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "eventPublishSubscriptionMode" : "off",
    "serviceMqttTlsEnabled" : true,
    "eventConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfTlsEnabled" : true,
    "eventLargeMsgThreshold" : 3,
    "serviceRestIncomingTlsListenPort" : 5,
    "replicationQueueRejectMsgToSenderOnDiscardEnabled" : true,
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventPublishMsgVpnEnabled" : true,
    "sempOverMsgBusShowEnabled" : true,
    "serviceWebPlainTextEnabled" : true,
    "msgVpnName" : "msgVpnName",
    "eventEndpointCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminEnabled" : true,
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventServiceRestIncomingConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfMaxConnectionCount" : 3,
    "jndiEnabled" : true,
    "serviceMqttPlainTextEnabled" : true,
    "eventPublishClientEnabled" : true,
    "replicationQueueMaxMsgSpoolUsage" : 9,
    "eventServiceMqttConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminClientEnabled" : true,
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "maxConnectionCount" : 2,
    "serviceRestOutgoingMaxConnectionCount" : 6,
    "replicationBridgeTlsEnabled" : true,
    "authenticationClientCertRevocationCheckMode" : "allow-all",
    "authenticationClientCertAllowApiProvidedUsernameEnabled" : true,
    "eventServiceSmfConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceAmqpPlainTextListenPort" : 8,
    "authenticationClientCertValidateDateEnabled" : true,
    "serviceAmqpTlsEnabled" : true,
    "eventEgressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "replicationTransactionMode" : "sync",
    "replicationRole" : "active",
    "authenticationBasicRadiusDomain" : "authenticationBasicRadiusDomain",
    "replicationEnabledQueueBehavior" : "fail-on-existing-queue",
    "replicationBridgeRetryDelay" : 5,
    "eventLogTag" : "eventLogTag",
    "distributedCacheManagementEnabled" : true,
    "serviceMqttTlsWebSocketListenPort" : 1,
    "replicationBridgeAuthenticationBasicClientUsername" : "replicationBridgeAuthenticationBasicClientUsername",
    "replicationBridgeAuthenticationBasicPassword" : "replicationBridgeAuthenticationBasicPassword",
    "maxIngressFlowCount" : 1,
    "maxTransactedSessionCount" : 6,
    "eventPublishTopicFormatMqttEnabled" : true,
    "authenticationBasicEnabled" : true,
    "maxMsgSpoolUsage" : 1,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientProfilesUri" : "clientProfilesUri",
    "topicEndpointsUri" : "topicEndpointsUri",
    "jndiConnectionFactoriesUri" : "jndiConnectionFactoriesUri",
    "clientUsernamesUri" : "clientUsernamesUri",
    "bridgesUri" : "bridgesUri",
    "replicatedTopicsUri" : "replicatedTopicsUri",
    "aclProfilesUri" : "aclProfilesUri",
    "sequencedTopicsUri" : "sequencedTopicsUri",
    "uri" : "uri",
    "jndiTopicsUri" : "jndiTopicsUri",
    "replayLogsUri" : "replayLogsUri",
    "queuesUri" : "queuesUri",
    "restDeliveryPointsUri" : "restDeliveryPointsUri",
    "mqttSessionsUri" : "mqttSessionsUri",
    "authorizationGroupsUri" : "authorizationGroupsUri",
    "jndiQueuesUri" : "jndiQueuesUri"
  }
}}]
     
     - parameter body: (body) The Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnResponse> 
     */
    public class func createMsgVpnWithRequestBuilder(body body: MsgVpn, select: [String]? = nil) -> RequestBuilder<MsgVpnResponse> {
        let path = "/msgVpns"
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates an ACL Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The ACL Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnAclProfile(msgVpnName msgVpnName: String, body: MsgVpnAclProfile, select: [String]? = nil, completion: ((data: MsgVpnAclProfileResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnAclProfileWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates an ACL Profile object.
     - POST /msgVpns/{msgVpnName}/aclProfiles
     - Creates an ACL Profile object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName|x|x||| msgVpnName|x||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientConnectDefaultAction" : "allow",
    "publishTopicDefaultAction" : "allow",
    "subscribeTopicDefaultAction" : "allow",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientConnectExceptionsUri" : "clientConnectExceptionsUri",
    "publishExceptionsUri" : "publishExceptionsUri",
    "uri" : "uri",
    "subscribeExceptionsUri" : "subscribeExceptionsUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The ACL Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileResponse> 
     */
    public class func createMsgVpnAclProfileWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnAclProfile, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Client Connect Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The Client Connect Exception object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnAclProfileClientConnectException(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfileClientConnectException, select: [String]? = nil, completion: ((data: MsgVpnAclProfileClientConnectExceptionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnAclProfileClientConnectExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Client Connect Exception object.
     - POST /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions
     - Creates a Client Connect Exception object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName|x||x|| clientConnectExceptionAddress|x|x||| msgVpnName|x||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientConnectExceptionAddress" : "clientConnectExceptionAddress",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The Client Connect Exception object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileClientConnectExceptionResponse> 
     */
    public class func createMsgVpnAclProfileClientConnectExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfileClientConnectException, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileClientConnectExceptionResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileClientConnectExceptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Publish Topic Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The Publish Topic Exception object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnAclProfilePublishException(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfilePublishException, select: [String]? = nil, completion: ((data: MsgVpnAclProfilePublishExceptionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnAclProfilePublishExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Publish Topic Exception object.
     - POST /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions
     - Creates a Publish Topic Exception object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName|x||x|| msgVpnName|x||x|| publishExceptionTopic|x|x||| topicSyntax|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "publishExceptionTopic" : "publishExceptionTopic",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The Publish Topic Exception object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfilePublishExceptionResponse> 
     */
    public class func createMsgVpnAclProfilePublishExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfilePublishException, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfilePublishExceptionResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfilePublishExceptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Subscribe Topic Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The Subscribe Topic Exception object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnAclProfileSubscribeException(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfileSubscribeException, select: [String]? = nil, completion: ((data: MsgVpnAclProfileSubscribeExceptionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnAclProfileSubscribeExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Subscribe Topic Exception object.
     - POST /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions
     - Creates a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName|x||x|| msgVpnName|x||x|| subscribeExceptionTopic|x|x||| topicSyntax|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "msgVpnName" : "msgVpnName",
    "subscribeExceptionTopic" : "subscribeExceptionTopic",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The Subscribe Topic Exception object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileSubscribeExceptionResponse> 
     */
    public class func createMsgVpnAclProfileSubscribeExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfileSubscribeException, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileSubscribeExceptionResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileSubscribeExceptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates an LDAP Authorization Group object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The LDAP Authorization Group object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnAuthorizationGroup(msgVpnName msgVpnName: String, body: MsgVpnAuthorizationGroup, select: [String]? = nil, completion: ((data: MsgVpnAuthorizationGroupResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates an LDAP Authorization Group object.
     - POST /msgVpns/{msgVpnName}/authorizationGroups
     - Creates an LDAP Authorization Group object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: authorizationGroupName|x|x||| msgVpnName|x||x|| orderAfterAuthorizationGroupName||||x| orderBeforeAuthorizationGroupName||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "orderBeforeAuthorizationGroupName" : "orderBeforeAuthorizationGroupName",
    "authorizationGroupName" : "authorizationGroupName",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "enabled" : true,
    "orderAfterAuthorizationGroupName" : "orderAfterAuthorizationGroupName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The LDAP Authorization Group object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAuthorizationGroupResponse> 
     */
    public class func createMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnAuthorizationGroup, select: [String]? = nil) -> RequestBuilder<MsgVpnAuthorizationGroupResponse> {
        var path = "/msgVpns/{msgVpnName}/authorizationGroups"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAuthorizationGroupResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Bridge object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Bridge object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnBridge(msgVpnName msgVpnName: String, body: MsgVpnBridge, select: [String]? = nil, completion: ((data: MsgVpnBridgeResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnBridgeWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Bridge object.
     - POST /msgVpns/{msgVpnName}/bridges
     - Creates a Bridge object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x|x||| bridgeVirtualRouter|x|x||| msgVpnName|x||x|| remoteAuthenticationBasicPassword||||x| remoteAuthenticationClientCertContent||||x| remoteAuthenticationClientCertPassword||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword| MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername| MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "remoteAuthenticationBasicClientUsername" : "remoteAuthenticationBasicClientUsername",
    "remoteAuthenticationClientCertPassword" : "remoteAuthenticationClientCertPassword",
    "maxTtl" : 0,
    "remoteDeliverToOnePriority" : "p1",
    "bridgeName" : "bridgeName",
    "enabled" : true,
    "remoteAuthenticationBasicPassword" : "remoteAuthenticationBasicPassword",
    "bridgeVirtualRouter" : "primary",
    "remoteAuthenticationClientCertContent" : "remoteAuthenticationClientCertContent",
    "remoteConnectionRetryCount" : 6,
    "remoteConnectionRetryDelay" : 1,
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "msgVpnName" : "msgVpnName",
    "remoteAuthenticationScheme" : "basic"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "remoteMsgVpnsUri" : "remoteMsgVpnsUri",
    "uri" : "uri",
    "remoteSubscriptionsUri" : "remoteSubscriptionsUri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Bridge object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeResponse> 
     */
    public class func createMsgVpnBridgeWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnBridge, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Remote Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Remote Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnBridgeRemoteMsgVpn(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridgeRemoteMsgVpn, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteMsgVpnResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Remote Message VPN object.
     - POST /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns
     - Creates a Remote Message VPN object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x||x|| bridgeVirtualRouter|x||x|| msgVpnName|x||x|| password||||x| remoteMsgVpnInterface|x|||| remoteMsgVpnLocation|x|x||| remoteMsgVpnName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnBridgeRemoteMsgVpn|clientUsername|password| MsgVpnBridgeRemoteMsgVpn|password|clientUsername|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "egressFlowWindowSize" : 6,
    "remoteMsgVpnLocation" : "remoteMsgVpnLocation",
    "bridgeName" : "bridgeName",
    "compressedDataEnabled" : true,
    "enabled" : true,
    "remoteMsgVpnName" : "remoteMsgVpnName",
    "bridgeVirtualRouter" : "primary",
    "password" : "password",
    "remoteMsgVpnInterface" : "remoteMsgVpnInterface",
    "tlsEnabled" : true,
    "clientUsername" : "clientUsername",
    "connectOrder" : 0,
    "queueBinding" : "queueBinding",
    "msgVpnName" : "msgVpnName",
    "unidirectionalClientProfile" : "unidirectionalClientProfile"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Remote Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> 
     */
    public class func createMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridgeRemoteMsgVpn, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Remote Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Remote Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnBridgeRemoteSubscription(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridgeRemoteSubscription, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteSubscriptionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnBridgeRemoteSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Remote Subscription object.
     - POST /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions
     - Creates a Remote Subscription object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x||x|| bridgeVirtualRouter|x||x|| deliverAlwaysEnabled||x||| msgVpnName|x||x|| remoteSubscriptionTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "bridgeVirtualRouter" : "primary",
    "deliverAlwaysEnabled" : true,
    "remoteSubscriptionTopic" : "remoteSubscriptionTopic",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Remote Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteSubscriptionResponse> 
     */
    public class func createMsgVpnBridgeRemoteSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridgeRemoteSubscription, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Trusted Common Name object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Trusted Common Name object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnBridgeTlsTrustedCommonName(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridgeTlsTrustedCommonName, select: [String]? = nil, completion: ((data: MsgVpnBridgeTlsTrustedCommonNameResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnBridgeTlsTrustedCommonNameWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Trusted Common Name object.
     - POST /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames
     - Creates a Trusted Common Name object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x||x|| bridgeVirtualRouter|x||x|| msgVpnName|x||x|| tlsTrustedCommonName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "bridgeVirtualRouter" : "primary",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Trusted Common Name object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeTlsTrustedCommonNameResponse> 
     */
    public class func createMsgVpnBridgeTlsTrustedCommonNameWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridgeTlsTrustedCommonName, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeTlsTrustedCommonNameResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeTlsTrustedCommonNameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Client Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Client Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnClientProfile(msgVpnName msgVpnName: String, body: MsgVpnClientProfile, select: [String]? = nil, completion: ((data: MsgVpnClientProfileResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnClientProfileWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Client Profile object.
     - POST /msgVpns/{msgVpnName}/clientProfiles
     - Creates a Client Profile object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: clientProfileName|x|x||| msgVpnName|x||x||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent EventThresholdByPercent|clearPercent|setPercent| EventThresholdByPercent|setPercent|clearPercent|    A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "apiTopicEndpointManagementCopyFromOnCreateName" : "apiTopicEndpointManagementCopyFromOnCreateName",
    "compressionEnabled" : true,
    "tcpMaxWindowSize" : 6,
    "clientProfileName" : "clientProfileName",
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpMaxSegmentSize" : 2,
    "queueDirect2MaxDepth" : 6,
    "msgVpnName" : "msgVpnName",
    "eventClientProvisionedEndpointSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5
    },
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MinMsgBurst" : 4,
    "elidingDelay" : 0,
    "eventServiceWebConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueControl1MinMsgBurst" : 1,
    "serviceWebMaxPayload" : 9,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "tcpKeepaliveIdleTime" : 6,
    "maxEndpointCountPerClientUsername" : 7,
    "queueDirect2MinMsgBurst" : 7,
    "queueGuaranteed1MinMsgBurst" : 9,
    "queueDirect1MaxDepth" : 1,
    "eventServiceSmfConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpCongestionWindowSize" : 6,
    "eventEndpointCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MaxDepth" : 1,
    "allowBridgeConnectionsEnabled" : true,
    "allowTransactedSessionsEnabled" : true,
    "serviceSmfMaxConnectionCountPerClientUsername" : 9,
    "allowGuaranteedMsgSendEnabled" : true,
    "queueDirect1MinMsgBurst" : 1,
    "queueGuaranteed1MaxDepth" : 5,
    "serviceWebInactiveTimeout" : 6,
    "allowGuaranteedMsgReceiveEnabled" : true,
    "tcpKeepaliveCount" : 3,
    "maxTransactionCount" : 4,
    "maxSubscriptionCount" : 3,
    "eventConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "elidingMaxTopicCount" : 6,
    "queueControl1MaxDepth" : 7,
    "tcpKeepaliveInterval" : 1,
    "elidingEnabled" : true,
    "maxIngressFlowCount" : 9,
    "replicationAllowClientConnectWhenStandbyEnabled" : true,
    "maxEgressFlowCount" : 2,
    "maxTransactedSessionCount" : 2,
    "rejectMsgToSenderOnNoSubscriptionMatchEnabled" : true,
    "serviceWebMaxConnectionCountPerClientUsername" : 8,
    "allowGuaranteedEndpointCreateEnabled" : true,
    "allowCutThroughForwardingEnabled" : true,
    "apiQueueManagementCopyFromOnCreateName" : "apiQueueManagementCopyFromOnCreateName",
    "maxConnectionCountPerClientUsername" : 5,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Client Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientProfileResponse> 
     */
    public class func createMsgVpnClientProfileWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnClientProfile, select: [String]? = nil) -> RequestBuilder<MsgVpnClientProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/clientProfiles"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Client Username object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Client Username object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnClientUsername(msgVpnName msgVpnName: String, body: MsgVpnClientUsername, select: [String]? = nil, completion: ((data: MsgVpnClientUsernameResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnClientUsernameWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Client Username object.
     - POST /msgVpns/{msgVpnName}/clientUsernames
     - Creates a Client Username object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: clientUsername|x|x||| msgVpnName|x||x|| password||||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "password" : "password",
    "subscriptionManagerEnabled" : true,
    "clientUsername" : "clientUsername",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "guaranteedEndpointPermissionOverrideEnabled" : true,
    "aclProfileName" : "aclProfileName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Client Username object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientUsernameResponse> 
     */
    public class func createMsgVpnClientUsernameWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnClientUsername, select: [String]? = nil) -> RequestBuilder<MsgVpnClientUsernameResponse> {
        var path = "/msgVpns/{msgVpnName}/clientUsernames"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientUsernameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a JNDI Connection Factory object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The JNDI Connection Factory object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnJndiConnectionFactory(msgVpnName msgVpnName: String, body: MsgVpnJndiConnectionFactory, select: [String]? = nil, completion: ((data: MsgVpnJndiConnectionFactoryResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a JNDI Connection Factory object.
     - POST /msgVpns/{msgVpnName}/jndiConnectionFactories
     - Creates a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: connectionFactoryName|x|x||| msgVpnName|x||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "messagingDefaultDeliveryMode" : "persistent",
    "connectionFactoryName" : "connectionFactoryName",
    "guaranteedReceiveAckTimeout" : 1,
    "transportReadTimeout" : 1,
    "transportReconnectRetryCount" : 7,
    "dtoReceiveSubscriberNetworkPriority" : 6,
    "messagingDefaultElidingEligibleEnabled" : true,
    "transportDirectTransportEnabled" : true,
    "transportReconnectRetryWait" : 1,
    "clientDescription" : "clientDescription",
    "guaranteedReceiveWindowSize" : 5,
    "dtoReceiveSubscriberLocalPriority" : 0,
    "transportCompressionLevel" : 9,
    "transportConnectRetryPerHostCount" : 2,
    "guaranteedSendAckTimeout" : 2,
    "transportReceiveBufferSize" : 6,
    "msgVpnName" : "msgVpnName",
    "transportKeepaliveEnabled" : true,
    "allowDuplicateClientIdEnabled" : true,
    "transportPort" : 1,
    "transportConnectRetryCount" : 3,
    "transportConnectTimeout" : 4,
    "dynamicEndpointCreateDurableEnabled" : true,
    "clientId" : "clientId",
    "messagingJmsxUserIdEnabled" : true,
    "guaranteedReceiveWindowSizeAckThreshold" : 5,
    "dynamicEndpointRespectTtlEnabled" : true,
    "messagingTextInXmlPayloadEnabled" : true,
    "guaranteedSendWindowSize" : 7,
    "transportKeepaliveInterval" : 1,
    "transportOptimizeDirectEnabled" : true,
    "transportTcpNoDelayEnabled" : true,
    "transportSendBufferSize" : 4,
    "transportKeepaliveCount" : 7,
    "xaEnabled" : true,
    "dtoSendEnabled" : true,
    "messagingDefaultDmqEligibleEnabled" : true,
    "dtoReceiveOverrideEnabled" : true,
    "transportMsgCallbackOnIoThreadEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The JNDI Connection Factory object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiConnectionFactoryResponse> 
     */
    public class func createMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnJndiConnectionFactory, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiConnectionFactoryResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiConnectionFactories"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiConnectionFactoryResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a JNDI Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The JNDI Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnJndiQueue(msgVpnName msgVpnName: String, body: MsgVpnJndiQueue, select: [String]? = nil, completion: ((data: MsgVpnJndiQueueResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnJndiQueueWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a JNDI Queue object.
     - POST /msgVpns/{msgVpnName}/jndiQueues
     - Creates a JNDI Queue object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| queueName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "queueName" : "queueName",
    "physicalName" : "physicalName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The JNDI Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiQueueResponse> 
     */
    public class func createMsgVpnJndiQueueWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnJndiQueue, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiQueues"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a JNDI Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The JNDI Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnJndiTopic(msgVpnName msgVpnName: String, body: MsgVpnJndiTopic, select: [String]? = nil, completion: ((data: MsgVpnJndiTopicResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnJndiTopicWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a JNDI Topic object.
     - POST /msgVpns/{msgVpnName}/jndiTopics
     - Creates a JNDI Topic object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| topicName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "physicalName" : "physicalName",
    "topicName" : "topicName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The JNDI Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiTopicResponse> 
     */
    public class func createMsgVpnJndiTopicWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnJndiTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiTopics"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates an MQTT Session object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The MQTT Session object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnMqttSession(msgVpnName msgVpnName: String, body: MsgVpnMqttSession, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnMqttSessionWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates an MQTT Session object.
     - POST /msgVpns/{msgVpnName}/mqttSessions
     - Creates an MQTT Session object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: mqttSessionClientId|x|x||| mqttSessionVirtualRouter|x|x||| msgVpnName|x||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "owner" : "owner",
    "mqttSessionClientId" : "mqttSessionClientId",
    "msgVpnName" : "msgVpnName",
    "enabled" : true,
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The MQTT Session object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionResponse> 
     */
    public class func createMsgVpnMqttSessionWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnMqttSession, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates an MQTT Session Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter body: (body) The MQTT Session Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnMqttSessionSubscription(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, body: MsgVpnMqttSessionSubscription, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionSubscriptionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates an MQTT Session Subscription object.
     - POST /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions
     - Creates an MQTT Session Subscription object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: mqttSessionClientId|x||x|| mqttSessionVirtualRouter|x||x|| msgVpnName|x||x|| subscriptionTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "mqttSessionClientId" : "mqttSessionClientId",
    "subscriptionQos" : 0,
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic",
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter body: (body) The MQTT Session Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> 
     */
    public class func createMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, body: MsgVpnMqttSessionSubscription, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnQueue(msgVpnName msgVpnName: String, body: MsgVpnQueue, select: [String]? = nil, completion: ((data: MsgVpnQueueResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnQueueWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Queue object.
     - POST /msgVpns/{msgVpnName}/queues
     - Creates a Queue object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| queueName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "queueName" : "queueName",
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxMsgSpoolUsage" : 5,
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueResponse> 
     */
    public class func createMsgVpnQueueWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnQueue, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/queues"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Queue Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter body: (body) The Queue Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnQueueSubscription(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnQueueSubscription, select: [String]? = nil, completion: ((data: MsgVpnQueueSubscriptionResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnQueueSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Queue Subscription object.
     - POST /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions
     - Creates a Queue Subscription object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| queueName|x||x|| subscriptionTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "queueName" : "queueName",
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter body: (body) The Queue Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueSubscriptionResponse> 
     */
    public class func createMsgVpnQueueSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnQueueSubscription, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}/subscriptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a ReplayLog object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The ReplayLog object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnReplayLog(msgVpnName msgVpnName: String, body: MsgVpnReplayLog, select: [String]? = nil, completion: ((data: MsgVpnReplayLogResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnReplayLogWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a ReplayLog object.
     - POST /msgVpns/{msgVpnName}/replayLogs
     - Creates a ReplayLog object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| replayLogName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.10.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "ingressEnabled" : true,
    "replayLogName" : "replayLogName",
    "maxSpoolUsage" : 0,
    "egressEnabled" : true,
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The ReplayLog object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplayLogResponse> 
     */
    public class func createMsgVpnReplayLogWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnReplayLog, select: [String]? = nil) -> RequestBuilder<MsgVpnReplayLogResponse> {
        var path = "/msgVpns/{msgVpnName}/replayLogs"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplayLogResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Replicated Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Replicated Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnReplicatedTopic(msgVpnName msgVpnName: String, body: MsgVpnReplicatedTopic, select: [String]? = nil, completion: ((data: MsgVpnReplicatedTopicResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Replicated Topic object.
     - POST /msgVpns/{msgVpnName}/replicatedTopics
     - Creates a Replicated Topic object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| replicatedTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.9.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "replicationMode" : "sync",
    "replicatedTopic" : "replicatedTopic",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Replicated Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplicatedTopicResponse> 
     */
    public class func createMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnReplicatedTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnReplicatedTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/replicatedTopics"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplicatedTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a REST Delivery Point object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The REST Delivery Point object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnRestDeliveryPoint(msgVpnName msgVpnName: String, body: MsgVpnRestDeliveryPoint, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a REST Delivery Point object.
     - POST /msgVpns/{msgVpnName}/restDeliveryPoints
     - Creates a REST Delivery Point object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| restDeliveryPointName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "restConsumersUri" : "restConsumersUri",
    "queueBindingsUri" : "queueBindingsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The REST Delivery Point object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointResponse> 
     */
    public class func createMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnRestDeliveryPoint, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Queue Binding object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The Queue Binding object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnRestDeliveryPointQueueBinding(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPointQueueBinding, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointQueueBindingResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Queue Binding object.
     - POST /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings
     - Creates a Queue Binding object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| queueBindingName|x|x||| restDeliveryPointName|x||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "gatewayReplaceTargetAuthorityEnabled" : true,
    "queueBindingName" : "queueBindingName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "postRequestTarget" : "postRequestTarget"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The Queue Binding object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> 
     */
    public class func createMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPointQueueBinding, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a REST Consumer object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The REST Consumer object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnRestDeliveryPointRestConsumer(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPointRestConsumer, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a REST Consumer object.
     - POST /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers
     - Creates a REST Consumer object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: authenticationClientCertContent||||x| authenticationClientCertPassword||||x| authenticationHttpBasicPassword||||x| msgVpnName|x||x|| restConsumerName|x|x||| restDeliveryPointName|x||x||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent| MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername| MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword| MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled| MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxPostWaitTime" : 0,
    "remoteHost" : "remoteHost",
    "restConsumerName" : "restConsumerName",
    "remotePort" : 1,
    "enabled" : true,
    "authenticationClientCertPassword" : "authenticationClientCertPassword",
    "localInterface" : "localInterface",
    "outgoingConnectionCount" : 6,
    "retryDelay" : 5,
    "authenticationHttpBasicPassword" : "authenticationHttpBasicPassword",
    "tlsEnabled" : true,
    "authenticationScheme" : "none",
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "authenticationClientCertContent" : "authenticationClientCertContent",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "authenticationHttpBasicUsername" : "authenticationHttpBasicUsername"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The REST Consumer object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> 
     */
    public class func createMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPointRestConsumer, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Trusted Common Name object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter body: (body) The Trusted Common Name object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, body: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Trusted Common Name object.
     - POST /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames
     - Creates a Trusted Common Name object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| restConsumerName|x||x|| restDeliveryPointName|x||x|| tlsTrustedCommonName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.7.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "restConsumerName" : "restConsumerName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter body: (body) The Trusted Common Name object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse> 
     */
    public class func createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, body: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Sequenced Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Sequenced Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnSequencedTopic(msgVpnName msgVpnName: String, body: MsgVpnSequencedTopic, select: [String]? = nil, completion: ((data: MsgVpnSequencedTopicResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnSequencedTopicWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Sequenced Topic object.
     - POST /msgVpns/{msgVpnName}/sequencedTopics
     - Creates a Sequenced Topic object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| sequencedTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "sequencedTopic" : "sequencedTopic",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Sequenced Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnSequencedTopicResponse> 
     */
    public class func createMsgVpnSequencedTopicWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnSequencedTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnSequencedTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/sequencedTopics"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnSequencedTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Creates a Topic Endpoint object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Topic Endpoint object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createMsgVpnTopicEndpoint(msgVpnName msgVpnName: String, body: MsgVpnTopicEndpoint, select: [String]? = nil, completion: ((data: MsgVpnTopicEndpointResponse?, error: ErrorType?) -> Void)) {
        createMsgVpnTopicEndpointWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Creates a Topic Endpoint object.
     - POST /msgVpns/{msgVpnName}/topicEndpoints
     - Creates a Topic Endpoint object. Any attribute missing from the request will be set to its default value.   Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x||x|| topicEndpointName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "topicEndpointName" : "topicEndpointName",
    "maxSpoolUsage" : 5,
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "eventSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Topic Endpoint object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnTopicEndpointResponse> 
     */
    public class func createMsgVpnTopicEndpointWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpnTopicEndpoint, select: [String]? = nil) -> RequestBuilder<MsgVpnTopicEndpointResponse> {
        var path = "/msgVpns/{msgVpnName}/topicEndpoints"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnTopicEndpointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Deletes a Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpn(msgVpnName msgVpnName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnWithRequestBuilder(msgVpnName: msgVpnName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Message VPN object.
     - DELETE /msgVpns/{msgVpnName}
     - Deletes a Message VPN object.  A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes an ACL Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnAclProfile(msgVpnName msgVpnName: String, aclProfileName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnAclProfileWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes an ACL Profile object.
     - DELETE /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}
     - Deletes an ACL Profile object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnAclProfileWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Client Connect Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter clientConnectExceptionAddress: (path) The clientConnectExceptionAddress of the Client Connect Exception. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnAclProfileClientConnectException(msgVpnName msgVpnName: String, aclProfileName: String, clientConnectExceptionAddress: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnAclProfileClientConnectExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, clientConnectExceptionAddress: clientConnectExceptionAddress).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Client Connect Exception object.
     - DELETE /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}
     - Deletes a Client Connect Exception object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter clientConnectExceptionAddress: (path) The clientConnectExceptionAddress of the Client Connect Exception. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnAclProfileClientConnectExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, clientConnectExceptionAddress: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientConnectExceptionAddress}", withString: "\(clientConnectExceptionAddress)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Publish Topic Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Publish Topic Exception. 
     - parameter publishExceptionTopic: (path) The publishExceptionTopic of the Publish Topic Exception. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnAclProfilePublishException(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, publishExceptionTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnAclProfilePublishExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, topicSyntax: topicSyntax, publishExceptionTopic: publishExceptionTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Publish Topic Exception object.
     - DELETE /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}
     - Deletes a Publish Topic Exception object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Publish Topic Exception. 
     - parameter publishExceptionTopic: (path) The publishExceptionTopic of the Publish Topic Exception. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnAclProfilePublishExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, publishExceptionTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicSyntax}", withString: "\(topicSyntax)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{publishExceptionTopic}", withString: "\(publishExceptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Subscribe Topic Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Subscribe Topic Exception. 
     - parameter subscribeExceptionTopic: (path) The subscribeExceptionTopic of the Subscribe Topic Exception. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnAclProfileSubscribeException(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, subscribeExceptionTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnAclProfileSubscribeExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, topicSyntax: topicSyntax, subscribeExceptionTopic: subscribeExceptionTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Subscribe Topic Exception object.
     - DELETE /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}
     - Deletes a Subscribe Topic Exception object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Subscribe Topic Exception. 
     - parameter subscribeExceptionTopic: (path) The subscribeExceptionTopic of the Subscribe Topic Exception. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnAclProfileSubscribeExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, subscribeExceptionTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicSyntax}", withString: "\(topicSyntax)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscribeExceptionTopic}", withString: "\(subscribeExceptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes an LDAP Authorization Group object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnAuthorizationGroup(msgVpnName msgVpnName: String, authorizationGroupName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName: msgVpnName, authorizationGroupName: authorizationGroupName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes an LDAP Authorization Group object.
     - DELETE /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}
     - Deletes an LDAP Authorization Group object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName msgVpnName: String, authorizationGroupName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{authorizationGroupName}", withString: "\(authorizationGroupName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Bridge object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnBridge(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnBridgeWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Bridge object.
     - DELETE /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}
     - Deletes a Bridge object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnBridgeWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Remote Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnBridgeRemoteMsgVpn(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, remoteMsgVpnName: remoteMsgVpnName, remoteMsgVpnLocation: remoteMsgVpnLocation, remoteMsgVpnInterface: remoteMsgVpnInterface).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Remote Message VPN object.
     - DELETE /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
     - Deletes a Remote Message VPN object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnName}", withString: "\(remoteMsgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnLocation}", withString: "\(remoteMsgVpnLocation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnInterface}", withString: "\(remoteMsgVpnInterface)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Remote Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteSubscriptionTopic: (path) The remoteSubscriptionTopic of the Remote Subscription. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnBridgeRemoteSubscription(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteSubscriptionTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnBridgeRemoteSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, remoteSubscriptionTopic: remoteSubscriptionTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Remote Subscription object.
     - DELETE /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}
     - Deletes a Remote Subscription object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteSubscriptionTopic: (path) The remoteSubscriptionTopic of the Remote Subscription. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnBridgeRemoteSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteSubscriptionTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteSubscriptionTopic}", withString: "\(remoteSubscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Trusted Common Name object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnBridgeTlsTrustedCommonName(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, tlsTrustedCommonName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnBridgeTlsTrustedCommonNameWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, tlsTrustedCommonName: tlsTrustedCommonName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Trusted Common Name object.
     - DELETE /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}
     - Deletes a Trusted Common Name object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnBridgeTlsTrustedCommonNameWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, tlsTrustedCommonName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tlsTrustedCommonName}", withString: "\(tlsTrustedCommonName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Client Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnClientProfile(msgVpnName msgVpnName: String, clientProfileName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnClientProfileWithRequestBuilder(msgVpnName: msgVpnName, clientProfileName: clientProfileName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Client Profile object.
     - DELETE /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}
     - Deletes a Client Profile object.  A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnClientProfileWithRequestBuilder(msgVpnName msgVpnName: String, clientProfileName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientProfileName}", withString: "\(clientProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Client Username object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnClientUsername(msgVpnName msgVpnName: String, clientUsername: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnClientUsernameWithRequestBuilder(msgVpnName: msgVpnName, clientUsername: clientUsername).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Client Username object.
     - DELETE /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}
     - Deletes a Client Username object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnClientUsernameWithRequestBuilder(msgVpnName msgVpnName: String, clientUsername: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientUsername}", withString: "\(clientUsername)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a JNDI Connection Factory object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnJndiConnectionFactory(msgVpnName msgVpnName: String, connectionFactoryName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName: msgVpnName, connectionFactoryName: connectionFactoryName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a JNDI Connection Factory object.
     - DELETE /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}
     - Deletes a JNDI Connection Factory object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName msgVpnName: String, connectionFactoryName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{connectionFactoryName}", withString: "\(connectionFactoryName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a JNDI Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnJndiQueue(msgVpnName msgVpnName: String, queueName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnJndiQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a JNDI Queue object.
     - DELETE /msgVpns/{msgVpnName}/jndiQueues/{queueName}
     - Deletes a JNDI Queue object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnJndiQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiQueues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a JNDI Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnJndiTopic(msgVpnName msgVpnName: String, topicName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnJndiTopicWithRequestBuilder(msgVpnName: msgVpnName, topicName: topicName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a JNDI Topic object.
     - DELETE /msgVpns/{msgVpnName}/jndiTopics/{topicName}
     - Deletes a JNDI Topic object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnJndiTopicWithRequestBuilder(msgVpnName msgVpnName: String, topicName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiTopics/{topicName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicName}", withString: "\(topicName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes an MQTT Session object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnMqttSession(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnMqttSessionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes an MQTT Session object.
     - DELETE /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}
     - Deletes an MQTT Session object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnMqttSessionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes an MQTT Session Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnMqttSessionSubscription(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, subscriptionTopic: subscriptionTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes an MQTT Session Subscription object.
     - DELETE /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}
     - Deletes an MQTT Session Subscription object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscriptionTopic}", withString: "\(subscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnQueue(msgVpnName msgVpnName: String, queueName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Queue object.
     - DELETE /msgVpns/{msgVpnName}/queues/{queueName}
     - Deletes a Queue object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Queue Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the Queue Subscription. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnQueueSubscription(msgVpnName msgVpnName: String, queueName: String, subscriptionTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnQueueSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, subscriptionTopic: subscriptionTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Queue Subscription object.
     - DELETE /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}
     - Deletes a Queue Subscription object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the Queue Subscription. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnQueueSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, subscriptionTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscriptionTopic}", withString: "\(subscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a ReplayLog object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnReplayLog(msgVpnName msgVpnName: String, replayLogName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnReplayLogWithRequestBuilder(msgVpnName: msgVpnName, replayLogName: replayLogName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a ReplayLog object.
     - DELETE /msgVpns/{msgVpnName}/replayLogs/{replayLogName}
     - Deletes a ReplayLog object.  A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.10.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnReplayLogWithRequestBuilder(msgVpnName msgVpnName: String, replayLogName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replayLogName}", withString: "\(replayLogName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Replicated Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnReplicatedTopic(msgVpnName msgVpnName: String, replicatedTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName: msgVpnName, replicatedTopic: replicatedTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Replicated Topic object.
     - DELETE /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}
     - Deletes a Replicated Topic object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.9.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName msgVpnName: String, replicatedTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replicatedTopic}", withString: "\(replicatedTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a REST Delivery Point object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnRestDeliveryPoint(msgVpnName msgVpnName: String, restDeliveryPointName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a REST Delivery Point object.
     - DELETE /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}
     - Deletes a REST Delivery Point object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Queue Binding object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnRestDeliveryPointQueueBinding(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, queueBindingName: queueBindingName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Queue Binding object.
     - DELETE /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}
     - Deletes a Queue Binding object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueBindingName}", withString: "\(queueBindingName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a REST Consumer object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnRestDeliveryPointRestConsumer(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a REST Consumer object.
     - DELETE /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}
     - Deletes a REST Consumer object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Trusted Common Name object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, tlsTrustedCommonName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, tlsTrustedCommonName: tlsTrustedCommonName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Trusted Common Name object.
     - DELETE /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
     - Deletes a Trusted Common Name object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.7.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, tlsTrustedCommonName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tlsTrustedCommonName}", withString: "\(tlsTrustedCommonName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Sequenced Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter sequencedTopic: (path) The sequencedTopic of the Sequenced Topic. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnSequencedTopic(msgVpnName msgVpnName: String, sequencedTopic: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnSequencedTopicWithRequestBuilder(msgVpnName: msgVpnName, sequencedTopic: sequencedTopic).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Sequenced Topic object.
     - DELETE /msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}
     - Deletes a Sequenced Topic object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter sequencedTopic: (path) The sequencedTopic of the Sequenced Topic. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnSequencedTopicWithRequestBuilder(msgVpnName msgVpnName: String, sequencedTopic: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{sequencedTopic}", withString: "\(sequencedTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Deletes a Topic Endpoint object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteMsgVpnTopicEndpoint(msgVpnName msgVpnName: String, topicEndpointName: String, completion: ((data: SempMetaOnlyResponse?, error: ErrorType?) -> Void)) {
        deleteMsgVpnTopicEndpointWithRequestBuilder(msgVpnName: msgVpnName, topicEndpointName: topicEndpointName).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Deletes a Topic Endpoint object.
     - DELETE /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}
     - Deletes a Topic Endpoint object.  A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 

     - returns: RequestBuilder<SempMetaOnlyResponse> 
     */
    public class func deleteMsgVpnTopicEndpointWithRequestBuilder(msgVpnName msgVpnName: String, topicEndpointName: String) -> RequestBuilder<SempMetaOnlyResponse> {
        var path = "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicEndpointName}", withString: "\(topicEndpointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SempMetaOnlyResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Gets a Current User Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Current User Message VPN. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAboutUserMsgVpn(msgVpnName msgVpnName: String, select: [String]? = nil, completion: ((data: AboutUserMsgVpnResponse?, error: ErrorType?) -> Void)) {
        getAboutUserMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Current User Message VPN object.
     - GET /about/user/msgVpns/{msgVpnName}
     - Gets a Current User Message VPN object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"global/none\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "accessLevel" : "none",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Current User Message VPN. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<AboutUserMsgVpnResponse> 
     */
    public class func getAboutUserMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, select: [String]? = nil) -> RequestBuilder<AboutUserMsgVpnResponse> {
        var path = "/about/user/msgVpns/{msgVpnName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AboutUserMsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Current User Message VPN objects.
     
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAboutUserMsgVpns(count count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: AboutUserMsgVpnsResponse?, error: ErrorType?) -> Void)) {
        getAboutUserMsgVpnsWithRequestBuilder(count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Current User Message VPN objects.
     - GET /about/user/msgVpns
     - Gets a list of Current User Message VPN objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"global/none\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "accessLevel" : "none",
    "msgVpnName" : "msgVpnName"
  }, {
    "accessLevel" : "none",
    "msgVpnName" : "msgVpnName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<AboutUserMsgVpnsResponse> 
     */
    public class func getAboutUserMsgVpnsWithRequestBuilder(count count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<AboutUserMsgVpnsResponse> {
        let path = "/about/user/msgVpns"
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AboutUserMsgVpnsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpn(msgVpnName msgVpnName: String, select: [String]? = nil, completion: ((data: MsgVpnResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Message VPN object.
     - GET /msgVpns/{msgVpnName}
     - Gets a Message VPN object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| replicationBridgeAuthenticationBasicPassword||x| replicationBridgeAuthenticationClientCertContent||x| replicationBridgeAuthenticationClientCertPassword||x| replicationEnabledQueueBehavior||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "serviceMqttMaxConnectionCount" : 6,
    "authorizationProfileName" : "authorizationProfileName",
    "replicationBridgeAuthenticationClientCertPassword" : "replicationBridgeAuthenticationClientCertPassword",
    "replicationBridgeEgressFlowWindowSize" : 4,
    "restTlsServerCertMaxChainDepth" : 9,
    "serviceRestIncomingPlainTextEnabled" : true,
    "replicationEnabled" : true,
    "eventServiceWebConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "bridgingTlsServerCertValidateDateEnabled" : true,
    "authorizationType" : "ldap",
    "replicationAckPropagationIntervalMsgCount" : 1,
    "bridgingTlsServerCertMaxChainDepth" : 6,
    "replicationBridgeCompressedDataEnabled" : true,
    "serviceAmqpPlainTextEnabled" : true,
    "bridgingTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "restTlsServerCertValidateDateEnabled" : true,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "authenticationKerberosEnabled" : true,
    "authorizationLdapGroupMembershipAttributeName" : "authorizationLdapGroupMembershipAttributeName",
    "serviceRestIncomingPlainTextListenPort" : 6,
    "authenticationClientCertUsernameSource" : "common-name",
    "replicationBridgeAuthenticationClientCertContent" : "replicationBridgeAuthenticationClientCertContent",
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceMqttPlainTextListenPort" : 3,
    "authenticationClientCertMaxChainDepth" : 0,
    "serviceMqttWebSocketEnabled" : true,
    "authenticationClientCertEnabled" : true,
    "restTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "replicationRejectMsgWhenSyncIneligibleEnabled" : true,
    "eventPublishTopicFormatSmfEnabled" : true,
    "authenticationBasicProfileName" : "authenticationBasicProfileName",
    "enabled" : true,
    "replicationBridgeAuthenticationScheme" : "basic",
    "replicationBridgeUnidirectionalClientProfileName" : "replicationBridgeUnidirectionalClientProfileName",
    "serviceRestIncomingMaxConnectionCount" : 6,
    "sempOverMsgBusEnabled" : true,
    "maxTransactionCount" : 7,
    "serviceAmqpTlsListenPort" : 9,
    "serviceMqttTlsListenPort" : 6,
    "eventServiceAmqpConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceRestMode" : "gateway",
    "serviceRestIncomingTlsEnabled" : true,
    "authenticationKerberosAllowApiProvidedUsernameEnabled" : true,
    "sempOverMsgBusAdminDistributedCacheEnabled" : true,
    "maxSubscriptionCount" : 1,
    "authenticationBasicType" : "internal",
    "serviceWebMaxConnectionCount" : 3,
    "serviceAmqpMaxConnectionCount" : 6,
    "maxEgressFlowCount" : 4,
    "serviceMqttWebSocketListenPort" : 2,
    "serviceSmfPlainTextEnabled" : true,
    "maxEndpointCount" : 7,
    "serviceWebTlsEnabled" : true,
    "serviceMqttTlsWebSocketEnabled" : true,
    "exportSubscriptionsEnabled" : true,
    "eventIngressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "eventPublishSubscriptionMode" : "off",
    "serviceMqttTlsEnabled" : true,
    "eventConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfTlsEnabled" : true,
    "eventLargeMsgThreshold" : 3,
    "serviceRestIncomingTlsListenPort" : 5,
    "replicationQueueRejectMsgToSenderOnDiscardEnabled" : true,
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventPublishMsgVpnEnabled" : true,
    "sempOverMsgBusShowEnabled" : true,
    "serviceWebPlainTextEnabled" : true,
    "msgVpnName" : "msgVpnName",
    "eventEndpointCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminEnabled" : true,
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventServiceRestIncomingConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfMaxConnectionCount" : 3,
    "jndiEnabled" : true,
    "serviceMqttPlainTextEnabled" : true,
    "eventPublishClientEnabled" : true,
    "replicationQueueMaxMsgSpoolUsage" : 9,
    "eventServiceMqttConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminClientEnabled" : true,
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "maxConnectionCount" : 2,
    "serviceRestOutgoingMaxConnectionCount" : 6,
    "replicationBridgeTlsEnabled" : true,
    "authenticationClientCertRevocationCheckMode" : "allow-all",
    "authenticationClientCertAllowApiProvidedUsernameEnabled" : true,
    "eventServiceSmfConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceAmqpPlainTextListenPort" : 8,
    "authenticationClientCertValidateDateEnabled" : true,
    "serviceAmqpTlsEnabled" : true,
    "eventEgressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "replicationTransactionMode" : "sync",
    "replicationRole" : "active",
    "authenticationBasicRadiusDomain" : "authenticationBasicRadiusDomain",
    "replicationEnabledQueueBehavior" : "fail-on-existing-queue",
    "replicationBridgeRetryDelay" : 5,
    "eventLogTag" : "eventLogTag",
    "distributedCacheManagementEnabled" : true,
    "serviceMqttTlsWebSocketListenPort" : 1,
    "replicationBridgeAuthenticationBasicClientUsername" : "replicationBridgeAuthenticationBasicClientUsername",
    "replicationBridgeAuthenticationBasicPassword" : "replicationBridgeAuthenticationBasicPassword",
    "maxIngressFlowCount" : 1,
    "maxTransactedSessionCount" : 6,
    "eventPublishTopicFormatMqttEnabled" : true,
    "authenticationBasicEnabled" : true,
    "maxMsgSpoolUsage" : 1,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientProfilesUri" : "clientProfilesUri",
    "topicEndpointsUri" : "topicEndpointsUri",
    "jndiConnectionFactoriesUri" : "jndiConnectionFactoriesUri",
    "clientUsernamesUri" : "clientUsernamesUri",
    "bridgesUri" : "bridgesUri",
    "replicatedTopicsUri" : "replicatedTopicsUri",
    "aclProfilesUri" : "aclProfilesUri",
    "sequencedTopicsUri" : "sequencedTopicsUri",
    "uri" : "uri",
    "jndiTopicsUri" : "jndiTopicsUri",
    "replayLogsUri" : "replayLogsUri",
    "queuesUri" : "queuesUri",
    "restDeliveryPointsUri" : "restDeliveryPointsUri",
    "mqttSessionsUri" : "mqttSessionsUri",
    "authorizationGroupsUri" : "authorizationGroupsUri",
    "jndiQueuesUri" : "jndiQueuesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnResponse> 
     */
    public class func getMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets an ACL Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfile(msgVpnName msgVpnName: String, aclProfileName: String, select: [String]? = nil, completion: ((data: MsgVpnAclProfileResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfileWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets an ACL Profile object.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}
     - Gets an ACL Profile object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientConnectDefaultAction" : "allow",
    "publishTopicDefaultAction" : "allow",
    "subscribeTopicDefaultAction" : "allow",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientConnectExceptionsUri" : "clientConnectExceptionsUri",
    "publishExceptionsUri" : "publishExceptionsUri",
    "uri" : "uri",
    "subscribeExceptionsUri" : "subscribeExceptionsUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileResponse> 
     */
    public class func getMsgVpnAclProfileWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Client Connect Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter clientConnectExceptionAddress: (path) The clientConnectExceptionAddress of the Client Connect Exception. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfileClientConnectException(msgVpnName msgVpnName: String, aclProfileName: String, clientConnectExceptionAddress: String, select: [String]? = nil, completion: ((data: MsgVpnAclProfileClientConnectExceptionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfileClientConnectExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, clientConnectExceptionAddress: clientConnectExceptionAddress, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Client Connect Exception object.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}
     - Gets a Client Connect Exception object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| clientConnectExceptionAddress|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientConnectExceptionAddress" : "clientConnectExceptionAddress",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter clientConnectExceptionAddress: (path) The clientConnectExceptionAddress of the Client Connect Exception. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileClientConnectExceptionResponse> 
     */
    public class func getMsgVpnAclProfileClientConnectExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, clientConnectExceptionAddress: String, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileClientConnectExceptionResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientConnectExceptionAddress}", withString: "\(clientConnectExceptionAddress)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileClientConnectExceptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Client Connect Exception objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfileClientConnectExceptions(msgVpnName msgVpnName: String, aclProfileName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnAclProfileClientConnectExceptionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfileClientConnectExceptionsWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Client Connect Exception objects.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions
     - Gets a list of Client Connect Exception objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| clientConnectExceptionAddress|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "clientConnectExceptionAddress" : "clientConnectExceptionAddress",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  }, {
    "clientConnectExceptionAddress" : "clientConnectExceptionAddress",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileClientConnectExceptionsResponse> 
     */
    public class func getMsgVpnAclProfileClientConnectExceptionsWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileClientConnectExceptionsResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileClientConnectExceptionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Publish Topic Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Publish Topic Exception. 
     - parameter publishExceptionTopic: (path) The publishExceptionTopic of the Publish Topic Exception. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfilePublishException(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, publishExceptionTopic: String, select: [String]? = nil, completion: ((data: MsgVpnAclProfilePublishExceptionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfilePublishExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, topicSyntax: topicSyntax, publishExceptionTopic: publishExceptionTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Publish Topic Exception object.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}
     - Gets a Publish Topic Exception object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| msgVpnName|x|| publishExceptionTopic|x|| topicSyntax|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "publishExceptionTopic" : "publishExceptionTopic",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Publish Topic Exception. 
     - parameter publishExceptionTopic: (path) The publishExceptionTopic of the Publish Topic Exception. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfilePublishExceptionResponse> 
     */
    public class func getMsgVpnAclProfilePublishExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, publishExceptionTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfilePublishExceptionResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicSyntax}", withString: "\(topicSyntax)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{publishExceptionTopic}", withString: "\(publishExceptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfilePublishExceptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Publish Topic Exception objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfilePublishExceptions(msgVpnName msgVpnName: String, aclProfileName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnAclProfilePublishExceptionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfilePublishExceptionsWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Publish Topic Exception objects.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions
     - Gets a list of Publish Topic Exception objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| msgVpnName|x|| publishExceptionTopic|x|| topicSyntax|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "publishExceptionTopic" : "publishExceptionTopic",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  }, {
    "publishExceptionTopic" : "publishExceptionTopic",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfilePublishExceptionsResponse> 
     */
    public class func getMsgVpnAclProfilePublishExceptionsWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfilePublishExceptionsResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfilePublishExceptionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Subscribe Topic Exception object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Subscribe Topic Exception. 
     - parameter subscribeExceptionTopic: (path) The subscribeExceptionTopic of the Subscribe Topic Exception. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfileSubscribeException(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, subscribeExceptionTopic: String, select: [String]? = nil, completion: ((data: MsgVpnAclProfileSubscribeExceptionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfileSubscribeExceptionWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, topicSyntax: topicSyntax, subscribeExceptionTopic: subscribeExceptionTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Subscribe Topic Exception object.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}
     - Gets a Subscribe Topic Exception object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| msgVpnName|x|| subscribeExceptionTopic|x|| topicSyntax|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "msgVpnName" : "msgVpnName",
    "subscribeExceptionTopic" : "subscribeExceptionTopic",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter topicSyntax: (path) The topicSyntax of the Subscribe Topic Exception. 
     - parameter subscribeExceptionTopic: (path) The subscribeExceptionTopic of the Subscribe Topic Exception. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileSubscribeExceptionResponse> 
     */
    public class func getMsgVpnAclProfileSubscribeExceptionWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, topicSyntax: String, subscribeExceptionTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileSubscribeExceptionResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicSyntax}", withString: "\(topicSyntax)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscribeExceptionTopic}", withString: "\(subscribeExceptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileSubscribeExceptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Subscribe Topic Exception objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfileSubscribeExceptions(msgVpnName msgVpnName: String, aclProfileName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnAclProfileSubscribeExceptionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfileSubscribeExceptionsWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Subscribe Topic Exception objects.
     - GET /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions
     - Gets a list of Subscribe Topic Exception objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| msgVpnName|x|| subscribeExceptionTopic|x|| topicSyntax|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "msgVpnName" : "msgVpnName",
    "subscribeExceptionTopic" : "subscribeExceptionTopic",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  }, {
    "msgVpnName" : "msgVpnName",
    "subscribeExceptionTopic" : "subscribeExceptionTopic",
    "aclProfileName" : "aclProfileName",
    "topicSyntax" : "smf"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileSubscribeExceptionsResponse> 
     */
    public class func getMsgVpnAclProfileSubscribeExceptionsWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileSubscribeExceptionsResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileSubscribeExceptionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets an LDAP Authorization Group object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAuthorizationGroup(msgVpnName msgVpnName: String, authorizationGroupName: String, select: [String]? = nil, completion: ((data: MsgVpnAuthorizationGroupResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName: msgVpnName, authorizationGroupName: authorizationGroupName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets an LDAP Authorization Group object.
     - GET /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}
     - Gets an LDAP Authorization Group object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: authorizationGroupName|x|| msgVpnName|x|| orderAfterAuthorizationGroupName||x| orderBeforeAuthorizationGroupName||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "orderBeforeAuthorizationGroupName" : "orderBeforeAuthorizationGroupName",
    "authorizationGroupName" : "authorizationGroupName",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "enabled" : true,
    "orderAfterAuthorizationGroupName" : "orderAfterAuthorizationGroupName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAuthorizationGroupResponse> 
     */
    public class func getMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName msgVpnName: String, authorizationGroupName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnAuthorizationGroupResponse> {
        var path = "/msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{authorizationGroupName}", withString: "\(authorizationGroupName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAuthorizationGroupResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Bridge object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridge(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, select: [String]? = nil, completion: ((data: MsgVpnBridgeResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Bridge object.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}
     - Gets a Bridge object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| remoteAuthenticationBasicPassword||x| remoteAuthenticationClientCertContent||x| remoteAuthenticationClientCertPassword||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "remoteAuthenticationBasicClientUsername" : "remoteAuthenticationBasicClientUsername",
    "remoteAuthenticationClientCertPassword" : "remoteAuthenticationClientCertPassword",
    "maxTtl" : 0,
    "remoteDeliverToOnePriority" : "p1",
    "bridgeName" : "bridgeName",
    "enabled" : true,
    "remoteAuthenticationBasicPassword" : "remoteAuthenticationBasicPassword",
    "bridgeVirtualRouter" : "primary",
    "remoteAuthenticationClientCertContent" : "remoteAuthenticationClientCertContent",
    "remoteConnectionRetryCount" : 6,
    "remoteConnectionRetryDelay" : 1,
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "msgVpnName" : "msgVpnName",
    "remoteAuthenticationScheme" : "basic"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "remoteMsgVpnsUri" : "remoteMsgVpnsUri",
    "uri" : "uri",
    "remoteSubscriptionsUri" : "remoteSubscriptionsUri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeResponse> 
     */
    public class func getMsgVpnBridgeWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Remote Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridgeRemoteMsgVpn(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteMsgVpnResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, remoteMsgVpnName: remoteMsgVpnName, remoteMsgVpnLocation: remoteMsgVpnLocation, remoteMsgVpnInterface: remoteMsgVpnInterface, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Remote Message VPN object.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
     - Gets a Remote Message VPN object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| password||x| remoteMsgVpnInterface|x|| remoteMsgVpnLocation|x|| remoteMsgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "egressFlowWindowSize" : 6,
    "remoteMsgVpnLocation" : "remoteMsgVpnLocation",
    "bridgeName" : "bridgeName",
    "compressedDataEnabled" : true,
    "enabled" : true,
    "remoteMsgVpnName" : "remoteMsgVpnName",
    "bridgeVirtualRouter" : "primary",
    "password" : "password",
    "remoteMsgVpnInterface" : "remoteMsgVpnInterface",
    "tlsEnabled" : true,
    "clientUsername" : "clientUsername",
    "connectOrder" : 0,
    "queueBinding" : "queueBinding",
    "msgVpnName" : "msgVpnName",
    "unidirectionalClientProfile" : "unidirectionalClientProfile"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> 
     */
    public class func getMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnName}", withString: "\(remoteMsgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnLocation}", withString: "\(remoteMsgVpnLocation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnInterface}", withString: "\(remoteMsgVpnInterface)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Remote Message VPN objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridgeRemoteMsgVpns(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteMsgVpnsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeRemoteMsgVpnsWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Remote Message VPN objects.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns
     - Gets a list of Remote Message VPN objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| password||x| remoteMsgVpnInterface|x|| remoteMsgVpnLocation|x|| remoteMsgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "egressFlowWindowSize" : 6,
    "remoteMsgVpnLocation" : "remoteMsgVpnLocation",
    "bridgeName" : "bridgeName",
    "compressedDataEnabled" : true,
    "enabled" : true,
    "remoteMsgVpnName" : "remoteMsgVpnName",
    "bridgeVirtualRouter" : "primary",
    "password" : "password",
    "remoteMsgVpnInterface" : "remoteMsgVpnInterface",
    "tlsEnabled" : true,
    "clientUsername" : "clientUsername",
    "connectOrder" : 0,
    "queueBinding" : "queueBinding",
    "msgVpnName" : "msgVpnName",
    "unidirectionalClientProfile" : "unidirectionalClientProfile"
  }, {
    "egressFlowWindowSize" : 6,
    "remoteMsgVpnLocation" : "remoteMsgVpnLocation",
    "bridgeName" : "bridgeName",
    "compressedDataEnabled" : true,
    "enabled" : true,
    "remoteMsgVpnName" : "remoteMsgVpnName",
    "bridgeVirtualRouter" : "primary",
    "password" : "password",
    "remoteMsgVpnInterface" : "remoteMsgVpnInterface",
    "tlsEnabled" : true,
    "clientUsername" : "clientUsername",
    "connectOrder" : 0,
    "queueBinding" : "queueBinding",
    "msgVpnName" : "msgVpnName",
    "unidirectionalClientProfile" : "unidirectionalClientProfile"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteMsgVpnsResponse> 
     */
    public class func getMsgVpnBridgeRemoteMsgVpnsWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteMsgVpnsResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteMsgVpnsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Remote Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteSubscriptionTopic: (path) The remoteSubscriptionTopic of the Remote Subscription. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridgeRemoteSubscription(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteSubscriptionTopic: String, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteSubscriptionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeRemoteSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, remoteSubscriptionTopic: remoteSubscriptionTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Remote Subscription object.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}
     - Gets a Remote Subscription object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| remoteSubscriptionTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "bridgeVirtualRouter" : "primary",
    "deliverAlwaysEnabled" : true,
    "remoteSubscriptionTopic" : "remoteSubscriptionTopic",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteSubscriptionTopic: (path) The remoteSubscriptionTopic of the Remote Subscription. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteSubscriptionResponse> 
     */
    public class func getMsgVpnBridgeRemoteSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteSubscriptionTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteSubscriptionTopic}", withString: "\(remoteSubscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Remote Subscription objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridgeRemoteSubscriptions(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteSubscriptionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeRemoteSubscriptionsWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Remote Subscription objects.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions
     - Gets a list of Remote Subscription objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| remoteSubscriptionTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "bridgeVirtualRouter" : "primary",
    "deliverAlwaysEnabled" : true,
    "remoteSubscriptionTopic" : "remoteSubscriptionTopic",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName"
  }, {
    "bridgeVirtualRouter" : "primary",
    "deliverAlwaysEnabled" : true,
    "remoteSubscriptionTopic" : "remoteSubscriptionTopic",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteSubscriptionsResponse> 
     */
    public class func getMsgVpnBridgeRemoteSubscriptionsWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteSubscriptionsResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteSubscriptionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Trusted Common Name object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridgeTlsTrustedCommonName(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, tlsTrustedCommonName: String, select: [String]? = nil, completion: ((data: MsgVpnBridgeTlsTrustedCommonNameResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeTlsTrustedCommonNameWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, tlsTrustedCommonName: tlsTrustedCommonName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Trusted Common Name object.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}
     - Gets a Trusted Common Name object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| tlsTrustedCommonName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "bridgeVirtualRouter" : "primary",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeTlsTrustedCommonNameResponse> 
     */
    public class func getMsgVpnBridgeTlsTrustedCommonNameWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, tlsTrustedCommonName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeTlsTrustedCommonNameResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tlsTrustedCommonName}", withString: "\(tlsTrustedCommonName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeTlsTrustedCommonNameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Trusted Common Name objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridgeTlsTrustedCommonNames(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnBridgeTlsTrustedCommonNamesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgeTlsTrustedCommonNamesWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Trusted Common Name objects.
     - GET /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames
     - Gets a list of Trusted Common Name objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| tlsTrustedCommonName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "bridgeVirtualRouter" : "primary",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  }, {
    "bridgeVirtualRouter" : "primary",
    "msgVpnName" : "msgVpnName",
    "bridgeName" : "bridgeName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeTlsTrustedCommonNamesResponse> 
     */
    public class func getMsgVpnBridgeTlsTrustedCommonNamesWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeTlsTrustedCommonNamesResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeTlsTrustedCommonNamesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Client Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnClientProfile(msgVpnName msgVpnName: String, clientProfileName: String, select: [String]? = nil, completion: ((data: MsgVpnClientProfileResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnClientProfileWithRequestBuilder(msgVpnName: msgVpnName, clientProfileName: clientProfileName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Client Profile object.
     - GET /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}
     - Gets a Client Profile object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: clientProfileName|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "apiTopicEndpointManagementCopyFromOnCreateName" : "apiTopicEndpointManagementCopyFromOnCreateName",
    "compressionEnabled" : true,
    "tcpMaxWindowSize" : 6,
    "clientProfileName" : "clientProfileName",
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpMaxSegmentSize" : 2,
    "queueDirect2MaxDepth" : 6,
    "msgVpnName" : "msgVpnName",
    "eventClientProvisionedEndpointSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5
    },
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MinMsgBurst" : 4,
    "elidingDelay" : 0,
    "eventServiceWebConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueControl1MinMsgBurst" : 1,
    "serviceWebMaxPayload" : 9,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "tcpKeepaliveIdleTime" : 6,
    "maxEndpointCountPerClientUsername" : 7,
    "queueDirect2MinMsgBurst" : 7,
    "queueGuaranteed1MinMsgBurst" : 9,
    "queueDirect1MaxDepth" : 1,
    "eventServiceSmfConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpCongestionWindowSize" : 6,
    "eventEndpointCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MaxDepth" : 1,
    "allowBridgeConnectionsEnabled" : true,
    "allowTransactedSessionsEnabled" : true,
    "serviceSmfMaxConnectionCountPerClientUsername" : 9,
    "allowGuaranteedMsgSendEnabled" : true,
    "queueDirect1MinMsgBurst" : 1,
    "queueGuaranteed1MaxDepth" : 5,
    "serviceWebInactiveTimeout" : 6,
    "allowGuaranteedMsgReceiveEnabled" : true,
    "tcpKeepaliveCount" : 3,
    "maxTransactionCount" : 4,
    "maxSubscriptionCount" : 3,
    "eventConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "elidingMaxTopicCount" : 6,
    "queueControl1MaxDepth" : 7,
    "tcpKeepaliveInterval" : 1,
    "elidingEnabled" : true,
    "maxIngressFlowCount" : 9,
    "replicationAllowClientConnectWhenStandbyEnabled" : true,
    "maxEgressFlowCount" : 2,
    "maxTransactedSessionCount" : 2,
    "rejectMsgToSenderOnNoSubscriptionMatchEnabled" : true,
    "serviceWebMaxConnectionCountPerClientUsername" : 8,
    "allowGuaranteedEndpointCreateEnabled" : true,
    "allowCutThroughForwardingEnabled" : true,
    "apiQueueManagementCopyFromOnCreateName" : "apiQueueManagementCopyFromOnCreateName",
    "maxConnectionCountPerClientUsername" : 5,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientProfileResponse> 
     */
    public class func getMsgVpnClientProfileWithRequestBuilder(msgVpnName msgVpnName: String, clientProfileName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnClientProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientProfileName}", withString: "\(clientProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Client Username object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnClientUsername(msgVpnName msgVpnName: String, clientUsername: String, select: [String]? = nil, completion: ((data: MsgVpnClientUsernameResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnClientUsernameWithRequestBuilder(msgVpnName: msgVpnName, clientUsername: clientUsername, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Client Username object.
     - GET /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}
     - Gets a Client Username object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: clientUsername|x|| msgVpnName|x|| password||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "password" : "password",
    "subscriptionManagerEnabled" : true,
    "clientUsername" : "clientUsername",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "guaranteedEndpointPermissionOverrideEnabled" : true,
    "aclProfileName" : "aclProfileName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientUsernameResponse> 
     */
    public class func getMsgVpnClientUsernameWithRequestBuilder(msgVpnName msgVpnName: String, clientUsername: String, select: [String]? = nil) -> RequestBuilder<MsgVpnClientUsernameResponse> {
        var path = "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientUsername}", withString: "\(clientUsername)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientUsernameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a JNDI Connection Factory object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnJndiConnectionFactory(msgVpnName msgVpnName: String, connectionFactoryName: String, select: [String]? = nil, completion: ((data: MsgVpnJndiConnectionFactoryResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName: msgVpnName, connectionFactoryName: connectionFactoryName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a JNDI Connection Factory object.
     - GET /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}
     - Gets a JNDI Connection Factory object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: connectionFactoryName|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "messagingDefaultDeliveryMode" : "persistent",
    "connectionFactoryName" : "connectionFactoryName",
    "guaranteedReceiveAckTimeout" : 1,
    "transportReadTimeout" : 1,
    "transportReconnectRetryCount" : 7,
    "dtoReceiveSubscriberNetworkPriority" : 6,
    "messagingDefaultElidingEligibleEnabled" : true,
    "transportDirectTransportEnabled" : true,
    "transportReconnectRetryWait" : 1,
    "clientDescription" : "clientDescription",
    "guaranteedReceiveWindowSize" : 5,
    "dtoReceiveSubscriberLocalPriority" : 0,
    "transportCompressionLevel" : 9,
    "transportConnectRetryPerHostCount" : 2,
    "guaranteedSendAckTimeout" : 2,
    "transportReceiveBufferSize" : 6,
    "msgVpnName" : "msgVpnName",
    "transportKeepaliveEnabled" : true,
    "allowDuplicateClientIdEnabled" : true,
    "transportPort" : 1,
    "transportConnectRetryCount" : 3,
    "transportConnectTimeout" : 4,
    "dynamicEndpointCreateDurableEnabled" : true,
    "clientId" : "clientId",
    "messagingJmsxUserIdEnabled" : true,
    "guaranteedReceiveWindowSizeAckThreshold" : 5,
    "dynamicEndpointRespectTtlEnabled" : true,
    "messagingTextInXmlPayloadEnabled" : true,
    "guaranteedSendWindowSize" : 7,
    "transportKeepaliveInterval" : 1,
    "transportOptimizeDirectEnabled" : true,
    "transportTcpNoDelayEnabled" : true,
    "transportSendBufferSize" : 4,
    "transportKeepaliveCount" : 7,
    "xaEnabled" : true,
    "dtoSendEnabled" : true,
    "messagingDefaultDmqEligibleEnabled" : true,
    "dtoReceiveOverrideEnabled" : true,
    "transportMsgCallbackOnIoThreadEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiConnectionFactoryResponse> 
     */
    public class func getMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName msgVpnName: String, connectionFactoryName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiConnectionFactoryResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{connectionFactoryName}", withString: "\(connectionFactoryName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiConnectionFactoryResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a JNDI Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnJndiQueue(msgVpnName msgVpnName: String, queueName: String, select: [String]? = nil, completion: ((data: MsgVpnJndiQueueResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnJndiQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a JNDI Queue object.
     - GET /msgVpns/{msgVpnName}/jndiQueues/{queueName}
     - Gets a JNDI Queue object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "queueName" : "queueName",
    "physicalName" : "physicalName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiQueueResponse> 
     */
    public class func getMsgVpnJndiQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiQueues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a JNDI Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnJndiTopic(msgVpnName msgVpnName: String, topicName: String, select: [String]? = nil, completion: ((data: MsgVpnJndiTopicResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnJndiTopicWithRequestBuilder(msgVpnName: msgVpnName, topicName: topicName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a JNDI Topic object.
     - GET /msgVpns/{msgVpnName}/jndiTopics/{topicName}
     - Gets a JNDI Topic object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| topicName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "physicalName" : "physicalName",
    "topicName" : "topicName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiTopicResponse> 
     */
    public class func getMsgVpnJndiTopicWithRequestBuilder(msgVpnName msgVpnName: String, topicName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiTopics/{topicName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicName}", withString: "\(topicName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets an MQTT Session object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnMqttSession(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnMqttSessionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets an MQTT Session object.
     - GET /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}
     - Gets an MQTT Session object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: mqttSessionClientId|x|| mqttSessionVirtualRouter|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "owner" : "owner",
    "mqttSessionClientId" : "mqttSessionClientId",
    "msgVpnName" : "msgVpnName",
    "enabled" : true,
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionResponse> 
     */
    public class func getMsgVpnMqttSessionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets an MQTT Session Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnMqttSessionSubscription(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionSubscriptionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, subscriptionTopic: subscriptionTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets an MQTT Session Subscription object.
     - GET /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}
     - Gets an MQTT Session Subscription object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: mqttSessionClientId|x|| mqttSessionVirtualRouter|x|| msgVpnName|x|| subscriptionTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "mqttSessionClientId" : "mqttSessionClientId",
    "subscriptionQos" : 0,
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic",
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> 
     */
    public class func getMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscriptionTopic}", withString: "\(subscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of MQTT Session Subscription objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnMqttSessionSubscriptions(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionSubscriptionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnMqttSessionSubscriptionsWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of MQTT Session Subscription objects.
     - GET /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions
     - Gets a list of MQTT Session Subscription objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: mqttSessionClientId|x|| mqttSessionVirtualRouter|x|| msgVpnName|x|| subscriptionTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "mqttSessionClientId" : "mqttSessionClientId",
    "subscriptionQos" : 0,
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic",
    "mqttSessionVirtualRouter" : "primary"
  }, {
    "mqttSessionClientId" : "mqttSessionClientId",
    "subscriptionQos" : 0,
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic",
    "mqttSessionVirtualRouter" : "primary"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionSubscriptionsResponse> 
     */
    public class func getMsgVpnMqttSessionSubscriptionsWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionSubscriptionsResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionSubscriptionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnQueue(msgVpnName msgVpnName: String, queueName: String, select: [String]? = nil, completion: ((data: MsgVpnQueueResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Queue object.
     - GET /msgVpns/{msgVpnName}/queues/{queueName}
     - Gets a Queue object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "queueName" : "queueName",
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxMsgSpoolUsage" : 5,
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueResponse> 
     */
    public class func getMsgVpnQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Queue Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the Queue Subscription. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnQueueSubscription(msgVpnName msgVpnName: String, queueName: String, subscriptionTopic: String, select: [String]? = nil, completion: ((data: MsgVpnQueueSubscriptionResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnQueueSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, subscriptionTopic: subscriptionTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Queue Subscription object.
     - GET /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}
     - Gets a Queue Subscription object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueName|x|| subscriptionTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "queueName" : "queueName",
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the Queue Subscription. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueSubscriptionResponse> 
     */
    public class func getMsgVpnQueueSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, subscriptionTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscriptionTopic}", withString: "\(subscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Queue Subscription objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnQueueSubscriptions(msgVpnName msgVpnName: String, queueName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnQueueSubscriptionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnQueueSubscriptionsWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Queue Subscription objects.
     - GET /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions
     - Gets a list of Queue Subscription objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueName|x|| subscriptionTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "queueName" : "queueName",
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic"
  }, {
    "queueName" : "queueName",
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueSubscriptionsResponse> 
     */
    public class func getMsgVpnQueueSubscriptionsWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueSubscriptionsResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}/subscriptions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueSubscriptionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a ReplayLog object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnReplayLog(msgVpnName msgVpnName: String, replayLogName: String, select: [String]? = nil, completion: ((data: MsgVpnReplayLogResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnReplayLogWithRequestBuilder(msgVpnName: msgVpnName, replayLogName: replayLogName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a ReplayLog object.
     - GET /msgVpns/{msgVpnName}/replayLogs/{replayLogName}
     - Gets a ReplayLog object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| replayLogName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.10.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "ingressEnabled" : true,
    "replayLogName" : "replayLogName",
    "maxSpoolUsage" : 0,
    "egressEnabled" : true,
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplayLogResponse> 
     */
    public class func getMsgVpnReplayLogWithRequestBuilder(msgVpnName msgVpnName: String, replayLogName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnReplayLogResponse> {
        var path = "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replayLogName}", withString: "\(replayLogName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplayLogResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Replicated Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnReplicatedTopic(msgVpnName msgVpnName: String, replicatedTopic: String, select: [String]? = nil, completion: ((data: MsgVpnReplicatedTopicResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName: msgVpnName, replicatedTopic: replicatedTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Replicated Topic object.
     - GET /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}
     - Gets a Replicated Topic object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| replicatedTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.9.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "replicationMode" : "sync",
    "replicatedTopic" : "replicatedTopic",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplicatedTopicResponse> 
     */
    public class func getMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName msgVpnName: String, replicatedTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnReplicatedTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replicatedTopic}", withString: "\(replicatedTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplicatedTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a REST Delivery Point object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPoint(msgVpnName msgVpnName: String, restDeliveryPointName: String, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a REST Delivery Point object.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}
     - Gets a REST Delivery Point object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| restDeliveryPointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "restConsumersUri" : "restConsumersUri",
    "queueBindingsUri" : "queueBindingsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointResponse> 
     */
    public class func getMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Queue Binding object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPointQueueBinding(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointQueueBindingResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, queueBindingName: queueBindingName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Queue Binding object.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}
     - Gets a Queue Binding object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueBindingName|x|| restDeliveryPointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "gatewayReplaceTargetAuthorityEnabled" : true,
    "queueBindingName" : "queueBindingName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "postRequestTarget" : "postRequestTarget"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> 
     */
    public class func getMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueBindingName}", withString: "\(queueBindingName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Queue Binding objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPointQueueBindings(msgVpnName msgVpnName: String, restDeliveryPointName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointQueueBindingsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointQueueBindingsWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Queue Binding objects.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings
     - Gets a list of Queue Binding objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueBindingName|x|| restDeliveryPointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "gatewayReplaceTargetAuthorityEnabled" : true,
    "queueBindingName" : "queueBindingName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "postRequestTarget" : "postRequestTarget"
  }, {
    "gatewayReplaceTargetAuthorityEnabled" : true,
    "queueBindingName" : "queueBindingName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "postRequestTarget" : "postRequestTarget"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingsResponse> 
     */
    public class func getMsgVpnRestDeliveryPointQueueBindingsWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointQueueBindingsResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a REST Consumer object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPointRestConsumer(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a REST Consumer object.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}
     - Gets a REST Consumer object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: authenticationClientCertContent||x| authenticationClientCertPassword||x| authenticationHttpBasicPassword||x| msgVpnName|x|| restConsumerName|x|| restDeliveryPointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxPostWaitTime" : 0,
    "remoteHost" : "remoteHost",
    "restConsumerName" : "restConsumerName",
    "remotePort" : 1,
    "enabled" : true,
    "authenticationClientCertPassword" : "authenticationClientCertPassword",
    "localInterface" : "localInterface",
    "outgoingConnectionCount" : 6,
    "retryDelay" : 5,
    "authenticationHttpBasicPassword" : "authenticationHttpBasicPassword",
    "tlsEnabled" : true,
    "authenticationScheme" : "none",
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "authenticationClientCertContent" : "authenticationClientCertContent",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "authenticationHttpBasicUsername" : "authenticationHttpBasicUsername"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> 
     */
    public class func getMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Trusted Common Name object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, tlsTrustedCommonName: String, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, tlsTrustedCommonName: tlsTrustedCommonName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Trusted Common Name object.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
     - Gets a Trusted Common Name object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| restConsumerName|x|| restDeliveryPointName|x|| tlsTrustedCommonName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.7.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "restConsumerName" : "restConsumerName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter tlsTrustedCommonName: (path) The tlsTrustedCommonName of the Trusted Common Name. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse> 
     */
    public class func getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, tlsTrustedCommonName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{tlsTrustedCommonName}", withString: "\(tlsTrustedCommonName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Trusted Common Name objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Trusted Common Name objects.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames
     - Gets a list of Trusted Common Name objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| restConsumerName|x|| restDeliveryPointName|x|| tlsTrustedCommonName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.7.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "restConsumerName" : "restConsumerName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  }, {
    "restConsumerName" : "restConsumerName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "tlsTrustedCommonName" : "tlsTrustedCommonName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse> 
     */
    public class func getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of REST Consumer objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPointRestConsumers(msgVpnName msgVpnName: String, restDeliveryPointName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumersResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointRestConsumersWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of REST Consumer objects.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers
     - Gets a list of REST Consumer objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: authenticationClientCertContent||x| authenticationClientCertPassword||x| authenticationHttpBasicPassword||x| msgVpnName|x|| restConsumerName|x|| restDeliveryPointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "maxPostWaitTime" : 0,
    "remoteHost" : "remoteHost",
    "restConsumerName" : "restConsumerName",
    "remotePort" : 1,
    "enabled" : true,
    "authenticationClientCertPassword" : "authenticationClientCertPassword",
    "localInterface" : "localInterface",
    "outgoingConnectionCount" : 6,
    "retryDelay" : 5,
    "authenticationHttpBasicPassword" : "authenticationHttpBasicPassword",
    "tlsEnabled" : true,
    "authenticationScheme" : "none",
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "authenticationClientCertContent" : "authenticationClientCertContent",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "authenticationHttpBasicUsername" : "authenticationHttpBasicUsername"
  }, {
    "maxPostWaitTime" : 0,
    "remoteHost" : "remoteHost",
    "restConsumerName" : "restConsumerName",
    "remotePort" : 1,
    "enabled" : true,
    "authenticationClientCertPassword" : "authenticationClientCertPassword",
    "localInterface" : "localInterface",
    "outgoingConnectionCount" : 6,
    "retryDelay" : 5,
    "authenticationHttpBasicPassword" : "authenticationHttpBasicPassword",
    "tlsEnabled" : true,
    "authenticationScheme" : "none",
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "authenticationClientCertContent" : "authenticationClientCertContent",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "authenticationHttpBasicUsername" : "authenticationHttpBasicUsername"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }, {
    "uri" : "uri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumersResponse> 
     */
    public class func getMsgVpnRestDeliveryPointRestConsumersWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumersResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumersResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Sequenced Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter sequencedTopic: (path) The sequencedTopic of the Sequenced Topic. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnSequencedTopic(msgVpnName msgVpnName: String, sequencedTopic: String, select: [String]? = nil, completion: ((data: MsgVpnSequencedTopicResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnSequencedTopicWithRequestBuilder(msgVpnName: msgVpnName, sequencedTopic: sequencedTopic, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Sequenced Topic object.
     - GET /msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}
     - Gets a Sequenced Topic object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| sequencedTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "sequencedTopic" : "sequencedTopic",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter sequencedTopic: (path) The sequencedTopic of the Sequenced Topic. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnSequencedTopicResponse> 
     */
    public class func getMsgVpnSequencedTopicWithRequestBuilder(msgVpnName msgVpnName: String, sequencedTopic: String, select: [String]? = nil) -> RequestBuilder<MsgVpnSequencedTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{sequencedTopic}", withString: "\(sequencedTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnSequencedTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Sequenced Topic objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnSequencedTopics(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnSequencedTopicsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnSequencedTopicsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Sequenced Topic objects.
     - GET /msgVpns/{msgVpnName}/sequencedTopics
     - Gets a list of Sequenced Topic objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| sequencedTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "sequencedTopic" : "sequencedTopic",
    "msgVpnName" : "msgVpnName"
  }, {
    "sequencedTopic" : "sequencedTopic",
    "msgVpnName" : "msgVpnName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnSequencedTopicsResponse> 
     */
    public class func getMsgVpnSequencedTopicsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnSequencedTopicsResponse> {
        var path = "/msgVpns/{msgVpnName}/sequencedTopics"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnSequencedTopicsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a Topic Endpoint object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnTopicEndpoint(msgVpnName msgVpnName: String, topicEndpointName: String, select: [String]? = nil, completion: ((data: MsgVpnTopicEndpointResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnTopicEndpointWithRequestBuilder(msgVpnName: msgVpnName, topicEndpointName: topicEndpointName, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a Topic Endpoint object.
     - GET /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}
     - Gets a Topic Endpoint object.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| topicEndpointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "topicEndpointName" : "topicEndpointName",
    "maxSpoolUsage" : 5,
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "eventSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnTopicEndpointResponse> 
     */
    public class func getMsgVpnTopicEndpointWithRequestBuilder(msgVpnName msgVpnName: String, topicEndpointName: String, select: [String]? = nil) -> RequestBuilder<MsgVpnTopicEndpointResponse> {
        var path = "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicEndpointName}", withString: "\(topicEndpointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnTopicEndpointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpn(msgVpnName msgVpnName: String, body: MsgVpn, select: [String]? = nil, completion: ((data: MsgVpnResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Message VPN object.
     - PUT /msgVpns/{msgVpnName}
     - Replaces a Message VPN object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replicationBridgeAuthenticationBasicPassword|||x|| replicationBridgeAuthenticationClientCertContent|||x|| replicationBridgeAuthenticationClientCertPassword|||x|| replicationEnabledQueueBehavior|||x||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent EventThresholdByValue|clearValue|setValue| EventThresholdByValue|setValue|clearValue| MsgVpn|authenticationBasicProfileName|authenticationBasicType| MsgVpn|authorizationProfileName|authorizationType| MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled| MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled| MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword| MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername| MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent| MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation. Requests which include the following attributes require greater access scope/level:   Attribute|Access Scope/Level :---|:---: authenticationBasicEnabled|global/readwrite authenticationBasicProfileName|global/readwrite authenticationBasicRadiusDomain|global/readwrite authenticationBasicType|global/readwrite authenticationClientCertAllowApiProvidedUsernameEnabled|global/readwrite authenticationClientCertEnabled|global/readwrite authenticationClientCertMaxChainDepth|global/readwrite authenticationClientCertRevocationCheckMode|global/readwrite authenticationClientCertUsernameSource|global/readwrite authenticationClientCertValidateDateEnabled|global/readwrite authenticationKerberosAllowApiProvidedUsernameEnabled|global/readwrite authenticationKerberosEnabled|global/readwrite bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/readwrite bridgingTlsServerCertMaxChainDepth|global/readwrite bridgingTlsServerCertValidateDateEnabled|global/readwrite dmrEnabled|global/readwrite exportSubscriptionsEnabled|global/readwrite maxConnectionCount|global/readwrite maxEgressFlowCount|global/readwrite maxEndpointCount|global/readwrite maxIngressFlowCount|global/readwrite maxMsgSpoolUsage|global/readwrite maxSubscriptionCount|global/readwrite maxTransactedSessionCount|global/readwrite maxTransactionCount|global/readwrite replicationBridgeAuthenticationBasicClientUsername|global/readwrite replicationBridgeAuthenticationBasicPassword|global/readwrite replicationBridgeAuthenticationClientCertContent|global/readwrite replicationBridgeAuthenticationClientCertPassword|global/readwrite replicationBridgeAuthenticationScheme|global/readwrite replicationBridgeCompressedDataEnabled|global/readwrite replicationBridgeEgressFlowWindowSize|global/readwrite replicationBridgeRetryDelay|global/readwrite replicationBridgeTlsEnabled|global/readwrite replicationBridgeUnidirectionalClientProfileName|global/readwrite replicationEnabled|global/readwrite replicationEnabledQueueBehavior|global/readwrite replicationQueueMaxMsgSpoolUsage|global/readwrite replicationRole|global/readwrite restTlsServerCertEnforceTrustedCommonNameEnabled|global/readwrite restTlsServerCertMaxChainDepth|global/readwrite restTlsServerCertValidateDateEnabled|global/readwrite sempOverMsgBusAdminClientEnabled|global/readwrite sempOverMsgBusAdminDistributedCacheEnabled|global/readwrite sempOverMsgBusAdminEnabled|global/readwrite sempOverMsgBusEnabled|global/readwrite sempOverMsgBusShowEnabled|global/readwrite serviceRestIncomingMaxConnectionCount|global/readwrite serviceRestIncomingPlainTextListenPort|global/readwrite serviceRestIncomingTlsListenPort|global/readwrite serviceRestOutgoingMaxConnectionCount|global/readwrite serviceSmfMaxConnectionCount|global/readwrite serviceWebMaxConnectionCount|global/readwrite    This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "serviceMqttMaxConnectionCount" : 6,
    "authorizationProfileName" : "authorizationProfileName",
    "replicationBridgeAuthenticationClientCertPassword" : "replicationBridgeAuthenticationClientCertPassword",
    "replicationBridgeEgressFlowWindowSize" : 4,
    "restTlsServerCertMaxChainDepth" : 9,
    "serviceRestIncomingPlainTextEnabled" : true,
    "replicationEnabled" : true,
    "eventServiceWebConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "bridgingTlsServerCertValidateDateEnabled" : true,
    "authorizationType" : "ldap",
    "replicationAckPropagationIntervalMsgCount" : 1,
    "bridgingTlsServerCertMaxChainDepth" : 6,
    "replicationBridgeCompressedDataEnabled" : true,
    "serviceAmqpPlainTextEnabled" : true,
    "bridgingTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "restTlsServerCertValidateDateEnabled" : true,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "authenticationKerberosEnabled" : true,
    "authorizationLdapGroupMembershipAttributeName" : "authorizationLdapGroupMembershipAttributeName",
    "serviceRestIncomingPlainTextListenPort" : 6,
    "authenticationClientCertUsernameSource" : "common-name",
    "replicationBridgeAuthenticationClientCertContent" : "replicationBridgeAuthenticationClientCertContent",
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceMqttPlainTextListenPort" : 3,
    "authenticationClientCertMaxChainDepth" : 0,
    "serviceMqttWebSocketEnabled" : true,
    "authenticationClientCertEnabled" : true,
    "restTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "replicationRejectMsgWhenSyncIneligibleEnabled" : true,
    "eventPublishTopicFormatSmfEnabled" : true,
    "authenticationBasicProfileName" : "authenticationBasicProfileName",
    "enabled" : true,
    "replicationBridgeAuthenticationScheme" : "basic",
    "replicationBridgeUnidirectionalClientProfileName" : "replicationBridgeUnidirectionalClientProfileName",
    "serviceRestIncomingMaxConnectionCount" : 6,
    "sempOverMsgBusEnabled" : true,
    "maxTransactionCount" : 7,
    "serviceAmqpTlsListenPort" : 9,
    "serviceMqttTlsListenPort" : 6,
    "eventServiceAmqpConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceRestMode" : "gateway",
    "serviceRestIncomingTlsEnabled" : true,
    "authenticationKerberosAllowApiProvidedUsernameEnabled" : true,
    "sempOverMsgBusAdminDistributedCacheEnabled" : true,
    "maxSubscriptionCount" : 1,
    "authenticationBasicType" : "internal",
    "serviceWebMaxConnectionCount" : 3,
    "serviceAmqpMaxConnectionCount" : 6,
    "maxEgressFlowCount" : 4,
    "serviceMqttWebSocketListenPort" : 2,
    "serviceSmfPlainTextEnabled" : true,
    "maxEndpointCount" : 7,
    "serviceWebTlsEnabled" : true,
    "serviceMqttTlsWebSocketEnabled" : true,
    "exportSubscriptionsEnabled" : true,
    "eventIngressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "eventPublishSubscriptionMode" : "off",
    "serviceMqttTlsEnabled" : true,
    "eventConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfTlsEnabled" : true,
    "eventLargeMsgThreshold" : 3,
    "serviceRestIncomingTlsListenPort" : 5,
    "replicationQueueRejectMsgToSenderOnDiscardEnabled" : true,
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventPublishMsgVpnEnabled" : true,
    "sempOverMsgBusShowEnabled" : true,
    "serviceWebPlainTextEnabled" : true,
    "msgVpnName" : "msgVpnName",
    "eventEndpointCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminEnabled" : true,
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventServiceRestIncomingConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfMaxConnectionCount" : 3,
    "jndiEnabled" : true,
    "serviceMqttPlainTextEnabled" : true,
    "eventPublishClientEnabled" : true,
    "replicationQueueMaxMsgSpoolUsage" : 9,
    "eventServiceMqttConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminClientEnabled" : true,
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "maxConnectionCount" : 2,
    "serviceRestOutgoingMaxConnectionCount" : 6,
    "replicationBridgeTlsEnabled" : true,
    "authenticationClientCertRevocationCheckMode" : "allow-all",
    "authenticationClientCertAllowApiProvidedUsernameEnabled" : true,
    "eventServiceSmfConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceAmqpPlainTextListenPort" : 8,
    "authenticationClientCertValidateDateEnabled" : true,
    "serviceAmqpTlsEnabled" : true,
    "eventEgressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "replicationTransactionMode" : "sync",
    "replicationRole" : "active",
    "authenticationBasicRadiusDomain" : "authenticationBasicRadiusDomain",
    "replicationEnabledQueueBehavior" : "fail-on-existing-queue",
    "replicationBridgeRetryDelay" : 5,
    "eventLogTag" : "eventLogTag",
    "distributedCacheManagementEnabled" : true,
    "serviceMqttTlsWebSocketListenPort" : 1,
    "replicationBridgeAuthenticationBasicClientUsername" : "replicationBridgeAuthenticationBasicClientUsername",
    "replicationBridgeAuthenticationBasicPassword" : "replicationBridgeAuthenticationBasicPassword",
    "maxIngressFlowCount" : 1,
    "maxTransactedSessionCount" : 6,
    "eventPublishTopicFormatMqttEnabled" : true,
    "authenticationBasicEnabled" : true,
    "maxMsgSpoolUsage" : 1,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientProfilesUri" : "clientProfilesUri",
    "topicEndpointsUri" : "topicEndpointsUri",
    "jndiConnectionFactoriesUri" : "jndiConnectionFactoriesUri",
    "clientUsernamesUri" : "clientUsernamesUri",
    "bridgesUri" : "bridgesUri",
    "replicatedTopicsUri" : "replicatedTopicsUri",
    "aclProfilesUri" : "aclProfilesUri",
    "sequencedTopicsUri" : "sequencedTopicsUri",
    "uri" : "uri",
    "jndiTopicsUri" : "jndiTopicsUri",
    "replayLogsUri" : "replayLogsUri",
    "queuesUri" : "queuesUri",
    "restDeliveryPointsUri" : "restDeliveryPointsUri",
    "mqttSessionsUri" : "mqttSessionsUri",
    "authorizationGroupsUri" : "authorizationGroupsUri",
    "jndiQueuesUri" : "jndiQueuesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnResponse> 
     */
    public class func replaceMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpn, select: [String]? = nil) -> RequestBuilder<MsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces an ACL Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The ACL Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnAclProfile(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfile, select: [String]? = nil, completion: ((data: MsgVpnAclProfileResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnAclProfileWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces an ACL Profile object.
     - PUT /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}
     - Replaces an ACL Profile object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName|x|x||| msgVpnName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientConnectDefaultAction" : "allow",
    "publishTopicDefaultAction" : "allow",
    "subscribeTopicDefaultAction" : "allow",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientConnectExceptionsUri" : "clientConnectExceptionsUri",
    "publishExceptionsUri" : "publishExceptionsUri",
    "uri" : "uri",
    "subscribeExceptionsUri" : "subscribeExceptionsUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The ACL Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileResponse> 
     */
    public class func replaceMsgVpnAclProfileWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfile, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces an LDAP Authorization Group object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter body: (body) The LDAP Authorization Group object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnAuthorizationGroup(msgVpnName msgVpnName: String, authorizationGroupName: String, body: MsgVpnAuthorizationGroup, select: [String]? = nil, completion: ((data: MsgVpnAuthorizationGroupResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName: msgVpnName, authorizationGroupName: authorizationGroupName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces an LDAP Authorization Group object.
     - PUT /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}
     - Replaces an LDAP Authorization Group object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName||||x| authorizationGroupName|x|x||| clientProfileName||||x| msgVpnName|x|x||| orderAfterAuthorizationGroupName|||x|| orderBeforeAuthorizationGroupName|||x||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "orderBeforeAuthorizationGroupName" : "orderBeforeAuthorizationGroupName",
    "authorizationGroupName" : "authorizationGroupName",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "enabled" : true,
    "orderAfterAuthorizationGroupName" : "orderAfterAuthorizationGroupName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter body: (body) The LDAP Authorization Group object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAuthorizationGroupResponse> 
     */
    public class func replaceMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName msgVpnName: String, authorizationGroupName: String, body: MsgVpnAuthorizationGroup, select: [String]? = nil) -> RequestBuilder<MsgVpnAuthorizationGroupResponse> {
        var path = "/msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{authorizationGroupName}", withString: "\(authorizationGroupName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAuthorizationGroupResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Bridge object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Bridge object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnBridge(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridge, select: [String]? = nil, completion: ((data: MsgVpnBridgeResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnBridgeWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Bridge object.
     - PUT /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}
     - Replaces a Bridge object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x|x||| bridgeVirtualRouter|x|x||| maxTtl||||x| msgVpnName|x|x||| remoteAuthenticationBasicClientUsername||||x| remoteAuthenticationBasicPassword|||x|x| remoteAuthenticationClientCertContent|||x|x| remoteAuthenticationClientCertPassword|||x|x| remoteAuthenticationScheme||||x| remoteDeliverToOnePriority||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword| MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername| MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "remoteAuthenticationBasicClientUsername" : "remoteAuthenticationBasicClientUsername",
    "remoteAuthenticationClientCertPassword" : "remoteAuthenticationClientCertPassword",
    "maxTtl" : 0,
    "remoteDeliverToOnePriority" : "p1",
    "bridgeName" : "bridgeName",
    "enabled" : true,
    "remoteAuthenticationBasicPassword" : "remoteAuthenticationBasicPassword",
    "bridgeVirtualRouter" : "primary",
    "remoteAuthenticationClientCertContent" : "remoteAuthenticationClientCertContent",
    "remoteConnectionRetryCount" : 6,
    "remoteConnectionRetryDelay" : 1,
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "msgVpnName" : "msgVpnName",
    "remoteAuthenticationScheme" : "basic"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "remoteMsgVpnsUri" : "remoteMsgVpnsUri",
    "uri" : "uri",
    "remoteSubscriptionsUri" : "remoteSubscriptionsUri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Bridge object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeResponse> 
     */
    public class func replaceMsgVpnBridgeWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridge, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Remote Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter body: (body) The Remote Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnBridgeRemoteMsgVpn(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, body: MsgVpnBridgeRemoteMsgVpn, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteMsgVpnResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, remoteMsgVpnName: remoteMsgVpnName, remoteMsgVpnLocation: remoteMsgVpnLocation, remoteMsgVpnInterface: remoteMsgVpnInterface, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Remote Message VPN object.
     - PUT /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
     - Replaces a Remote Message VPN object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x|x||| bridgeVirtualRouter|x|x||| clientUsername||||x| compressedDataEnabled||||x| egressFlowWindowSize||||x| msgVpnName|x|x||| password|||x|x| remoteMsgVpnInterface|x|x||| remoteMsgVpnLocation|x|x||| remoteMsgVpnName|x|x||| tlsEnabled||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnBridgeRemoteMsgVpn|clientUsername|password| MsgVpnBridgeRemoteMsgVpn|password|clientUsername|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "egressFlowWindowSize" : 6,
    "remoteMsgVpnLocation" : "remoteMsgVpnLocation",
    "bridgeName" : "bridgeName",
    "compressedDataEnabled" : true,
    "enabled" : true,
    "remoteMsgVpnName" : "remoteMsgVpnName",
    "bridgeVirtualRouter" : "primary",
    "password" : "password",
    "remoteMsgVpnInterface" : "remoteMsgVpnInterface",
    "tlsEnabled" : true,
    "clientUsername" : "clientUsername",
    "connectOrder" : 0,
    "queueBinding" : "queueBinding",
    "msgVpnName" : "msgVpnName",
    "unidirectionalClientProfile" : "unidirectionalClientProfile"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter body: (body) The Remote Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> 
     */
    public class func replaceMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, body: MsgVpnBridgeRemoteMsgVpn, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnName}", withString: "\(remoteMsgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnLocation}", withString: "\(remoteMsgVpnLocation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnInterface}", withString: "\(remoteMsgVpnInterface)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Client Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter body: (body) The Client Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnClientProfile(msgVpnName msgVpnName: String, clientProfileName: String, body: MsgVpnClientProfile, select: [String]? = nil, completion: ((data: MsgVpnClientProfileResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnClientProfileWithRequestBuilder(msgVpnName: msgVpnName, clientProfileName: clientProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Client Profile object.
     - PUT /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}
     - Replaces a Client Profile object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: clientProfileName|x|x||| msgVpnName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent EventThresholdByPercent|clearPercent|setPercent| EventThresholdByPercent|setPercent|clearPercent|    A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "apiTopicEndpointManagementCopyFromOnCreateName" : "apiTopicEndpointManagementCopyFromOnCreateName",
    "compressionEnabled" : true,
    "tcpMaxWindowSize" : 6,
    "clientProfileName" : "clientProfileName",
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpMaxSegmentSize" : 2,
    "queueDirect2MaxDepth" : 6,
    "msgVpnName" : "msgVpnName",
    "eventClientProvisionedEndpointSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5
    },
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MinMsgBurst" : 4,
    "elidingDelay" : 0,
    "eventServiceWebConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueControl1MinMsgBurst" : 1,
    "serviceWebMaxPayload" : 9,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "tcpKeepaliveIdleTime" : 6,
    "maxEndpointCountPerClientUsername" : 7,
    "queueDirect2MinMsgBurst" : 7,
    "queueGuaranteed1MinMsgBurst" : 9,
    "queueDirect1MaxDepth" : 1,
    "eventServiceSmfConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpCongestionWindowSize" : 6,
    "eventEndpointCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MaxDepth" : 1,
    "allowBridgeConnectionsEnabled" : true,
    "allowTransactedSessionsEnabled" : true,
    "serviceSmfMaxConnectionCountPerClientUsername" : 9,
    "allowGuaranteedMsgSendEnabled" : true,
    "queueDirect1MinMsgBurst" : 1,
    "queueGuaranteed1MaxDepth" : 5,
    "serviceWebInactiveTimeout" : 6,
    "allowGuaranteedMsgReceiveEnabled" : true,
    "tcpKeepaliveCount" : 3,
    "maxTransactionCount" : 4,
    "maxSubscriptionCount" : 3,
    "eventConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "elidingMaxTopicCount" : 6,
    "queueControl1MaxDepth" : 7,
    "tcpKeepaliveInterval" : 1,
    "elidingEnabled" : true,
    "maxIngressFlowCount" : 9,
    "replicationAllowClientConnectWhenStandbyEnabled" : true,
    "maxEgressFlowCount" : 2,
    "maxTransactedSessionCount" : 2,
    "rejectMsgToSenderOnNoSubscriptionMatchEnabled" : true,
    "serviceWebMaxConnectionCountPerClientUsername" : 8,
    "allowGuaranteedEndpointCreateEnabled" : true,
    "allowCutThroughForwardingEnabled" : true,
    "apiQueueManagementCopyFromOnCreateName" : "apiQueueManagementCopyFromOnCreateName",
    "maxConnectionCountPerClientUsername" : 5,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter body: (body) The Client Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientProfileResponse> 
     */
    public class func replaceMsgVpnClientProfileWithRequestBuilder(msgVpnName msgVpnName: String, clientProfileName: String, body: MsgVpnClientProfile, select: [String]? = nil) -> RequestBuilder<MsgVpnClientProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientProfileName}", withString: "\(clientProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Client Username object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter body: (body) The Client Username object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnClientUsername(msgVpnName msgVpnName: String, clientUsername: String, body: MsgVpnClientUsername, select: [String]? = nil, completion: ((data: MsgVpnClientUsernameResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnClientUsernameWithRequestBuilder(msgVpnName: msgVpnName, clientUsername: clientUsername, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Client Username object.
     - PUT /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}
     - Replaces a Client Username object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName||||x| clientProfileName||||x| clientUsername|x|x||| msgVpnName|x|x||| password|||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "password" : "password",
    "subscriptionManagerEnabled" : true,
    "clientUsername" : "clientUsername",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "guaranteedEndpointPermissionOverrideEnabled" : true,
    "aclProfileName" : "aclProfileName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter body: (body) The Client Username object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientUsernameResponse> 
     */
    public class func replaceMsgVpnClientUsernameWithRequestBuilder(msgVpnName msgVpnName: String, clientUsername: String, body: MsgVpnClientUsername, select: [String]? = nil) -> RequestBuilder<MsgVpnClientUsernameResponse> {
        var path = "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientUsername}", withString: "\(clientUsername)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientUsernameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a JNDI Connection Factory object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter body: (body) The JNDI Connection Factory object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnJndiConnectionFactory(msgVpnName msgVpnName: String, connectionFactoryName: String, body: MsgVpnJndiConnectionFactory, select: [String]? = nil, completion: ((data: MsgVpnJndiConnectionFactoryResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName: msgVpnName, connectionFactoryName: connectionFactoryName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a JNDI Connection Factory object.
     - PUT /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}
     - Replaces a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: connectionFactoryName|x|x||| msgVpnName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "messagingDefaultDeliveryMode" : "persistent",
    "connectionFactoryName" : "connectionFactoryName",
    "guaranteedReceiveAckTimeout" : 1,
    "transportReadTimeout" : 1,
    "transportReconnectRetryCount" : 7,
    "dtoReceiveSubscriberNetworkPriority" : 6,
    "messagingDefaultElidingEligibleEnabled" : true,
    "transportDirectTransportEnabled" : true,
    "transportReconnectRetryWait" : 1,
    "clientDescription" : "clientDescription",
    "guaranteedReceiveWindowSize" : 5,
    "dtoReceiveSubscriberLocalPriority" : 0,
    "transportCompressionLevel" : 9,
    "transportConnectRetryPerHostCount" : 2,
    "guaranteedSendAckTimeout" : 2,
    "transportReceiveBufferSize" : 6,
    "msgVpnName" : "msgVpnName",
    "transportKeepaliveEnabled" : true,
    "allowDuplicateClientIdEnabled" : true,
    "transportPort" : 1,
    "transportConnectRetryCount" : 3,
    "transportConnectTimeout" : 4,
    "dynamicEndpointCreateDurableEnabled" : true,
    "clientId" : "clientId",
    "messagingJmsxUserIdEnabled" : true,
    "guaranteedReceiveWindowSizeAckThreshold" : 5,
    "dynamicEndpointRespectTtlEnabled" : true,
    "messagingTextInXmlPayloadEnabled" : true,
    "guaranteedSendWindowSize" : 7,
    "transportKeepaliveInterval" : 1,
    "transportOptimizeDirectEnabled" : true,
    "transportTcpNoDelayEnabled" : true,
    "transportSendBufferSize" : 4,
    "transportKeepaliveCount" : 7,
    "xaEnabled" : true,
    "dtoSendEnabled" : true,
    "messagingDefaultDmqEligibleEnabled" : true,
    "dtoReceiveOverrideEnabled" : true,
    "transportMsgCallbackOnIoThreadEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter body: (body) The JNDI Connection Factory object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiConnectionFactoryResponse> 
     */
    public class func replaceMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName msgVpnName: String, connectionFactoryName: String, body: MsgVpnJndiConnectionFactory, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiConnectionFactoryResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{connectionFactoryName}", withString: "\(connectionFactoryName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiConnectionFactoryResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a JNDI Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter body: (body) The JNDI Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnJndiQueue(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnJndiQueue, select: [String]? = nil, completion: ((data: MsgVpnJndiQueueResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnJndiQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a JNDI Queue object.
     - PUT /msgVpns/{msgVpnName}/jndiQueues/{queueName}
     - Replaces a JNDI Queue object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| queueName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "queueName" : "queueName",
    "physicalName" : "physicalName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter body: (body) The JNDI Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiQueueResponse> 
     */
    public class func replaceMsgVpnJndiQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnJndiQueue, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiQueues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a JNDI Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter body: (body) The JNDI Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnJndiTopic(msgVpnName msgVpnName: String, topicName: String, body: MsgVpnJndiTopic, select: [String]? = nil, completion: ((data: MsgVpnJndiTopicResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnJndiTopicWithRequestBuilder(msgVpnName: msgVpnName, topicName: topicName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a JNDI Topic object.
     - PUT /msgVpns/{msgVpnName}/jndiTopics/{topicName}
     - Replaces a JNDI Topic object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| topicName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "physicalName" : "physicalName",
    "topicName" : "topicName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter body: (body) The JNDI Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiTopicResponse> 
     */
    public class func replaceMsgVpnJndiTopicWithRequestBuilder(msgVpnName msgVpnName: String, topicName: String, body: MsgVpnJndiTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiTopics/{topicName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicName}", withString: "\(topicName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces an MQTT Session object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter body: (body) The MQTT Session object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnMqttSession(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, body: MsgVpnMqttSession, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnMqttSessionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces an MQTT Session object.
     - PUT /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}
     - Replaces an MQTT Session object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: mqttSessionClientId|x|x||| mqttSessionVirtualRouter|x|x||| msgVpnName|x|x||| owner||||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "owner" : "owner",
    "mqttSessionClientId" : "mqttSessionClientId",
    "msgVpnName" : "msgVpnName",
    "enabled" : true,
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter body: (body) The MQTT Session object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionResponse> 
     */
    public class func replaceMsgVpnMqttSessionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, body: MsgVpnMqttSession, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces an MQTT Session Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter body: (body) The MQTT Session Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnMqttSessionSubscription(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, body: MsgVpnMqttSessionSubscription, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionSubscriptionResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, subscriptionTopic: subscriptionTopic, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces an MQTT Session Subscription object.
     - PUT /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}
     - Replaces an MQTT Session Subscription object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: mqttSessionClientId|x|x||| mqttSessionVirtualRouter|x|x||| msgVpnName|x|x||| subscriptionTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "mqttSessionClientId" : "mqttSessionClientId",
    "subscriptionQos" : 0,
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic",
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter body: (body) The MQTT Session Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> 
     */
    public class func replaceMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, body: MsgVpnMqttSessionSubscription, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscriptionTopic}", withString: "\(subscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter body: (body) The Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnQueue(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnQueue, select: [String]? = nil, completion: ((data: MsgVpnQueueResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Queue object.
     - PUT /msgVpns/{msgVpnName}/queues/{queueName}
     - Replaces a Queue object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: accessType||||x| msgVpnName|x|x||| owner||||x| permission||||x| queueName|x|x||| respectMsgPriorityEnabled||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "queueName" : "queueName",
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxMsgSpoolUsage" : 5,
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter body: (body) The Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueResponse> 
     */
    public class func replaceMsgVpnQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnQueue, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a ReplayLog object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter body: (body) The ReplayLog object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnReplayLog(msgVpnName msgVpnName: String, replayLogName: String, body: MsgVpnReplayLog, select: [String]? = nil, completion: ((data: MsgVpnReplayLogResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnReplayLogWithRequestBuilder(msgVpnName: msgVpnName, replayLogName: replayLogName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a ReplayLog object.
     - PUT /msgVpns/{msgVpnName}/replayLogs/{replayLogName}
     - Replaces a ReplayLog object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replayLogName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.10.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "ingressEnabled" : true,
    "replayLogName" : "replayLogName",
    "maxSpoolUsage" : 0,
    "egressEnabled" : true,
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter body: (body) The ReplayLog object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplayLogResponse> 
     */
    public class func replaceMsgVpnReplayLogWithRequestBuilder(msgVpnName msgVpnName: String, replayLogName: String, body: MsgVpnReplayLog, select: [String]? = nil) -> RequestBuilder<MsgVpnReplayLogResponse> {
        var path = "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replayLogName}", withString: "\(replayLogName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplayLogResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Replicated Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter body: (body) The Replicated Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnReplicatedTopic(msgVpnName msgVpnName: String, replicatedTopic: String, body: MsgVpnReplicatedTopic, select: [String]? = nil, completion: ((data: MsgVpnReplicatedTopicResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName: msgVpnName, replicatedTopic: replicatedTopic, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Replicated Topic object.
     - PUT /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}
     - Replaces a Replicated Topic object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replicatedTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.9.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "replicationMode" : "sync",
    "replicatedTopic" : "replicatedTopic",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter body: (body) The Replicated Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplicatedTopicResponse> 
     */
    public class func replaceMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName msgVpnName: String, replicatedTopic: String, body: MsgVpnReplicatedTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnReplicatedTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replicatedTopic}", withString: "\(replicatedTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplicatedTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a REST Delivery Point object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The REST Delivery Point object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnRestDeliveryPoint(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPoint, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a REST Delivery Point object.
     - PUT /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}
     - Replaces a REST Delivery Point object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: clientProfileName||||x| msgVpnName|x|x||| restDeliveryPointName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "restConsumersUri" : "restConsumersUri",
    "queueBindingsUri" : "queueBindingsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The REST Delivery Point object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointResponse> 
     */
    public class func replaceMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPoint, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Queue Binding object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter body: (body) The Queue Binding object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnRestDeliveryPointQueueBinding(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, body: MsgVpnRestDeliveryPointQueueBinding, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointQueueBindingResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, queueBindingName: queueBindingName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Queue Binding object.
     - PUT /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}
     - Replaces a Queue Binding object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| queueBindingName|x|x||| restDeliveryPointName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "gatewayReplaceTargetAuthorityEnabled" : true,
    "queueBindingName" : "queueBindingName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "postRequestTarget" : "postRequestTarget"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter body: (body) The Queue Binding object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> 
     */
    public class func replaceMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, body: MsgVpnRestDeliveryPointQueueBinding, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueBindingName}", withString: "\(queueBindingName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a REST Consumer object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter body: (body) The REST Consumer object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnRestDeliveryPointRestConsumer(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, body: MsgVpnRestDeliveryPointRestConsumer, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a REST Consumer object.
     - PUT /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}
     - Replaces a REST Consumer object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: authenticationClientCertContent|||x|x| authenticationClientCertPassword|||x|x| authenticationHttpBasicPassword|||x|x| authenticationHttpBasicUsername||||x| authenticationScheme||||x| msgVpnName|x|x||| outgoingConnectionCount||||x| remoteHost||||x| remotePort||||x| restConsumerName|x|x||| restDeliveryPointName|x|x||| tlsCipherSuiteList||||x| tlsEnabled||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent| MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername| MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword| MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled| MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxPostWaitTime" : 0,
    "remoteHost" : "remoteHost",
    "restConsumerName" : "restConsumerName",
    "remotePort" : 1,
    "enabled" : true,
    "authenticationClientCertPassword" : "authenticationClientCertPassword",
    "localInterface" : "localInterface",
    "outgoingConnectionCount" : 6,
    "retryDelay" : 5,
    "authenticationHttpBasicPassword" : "authenticationHttpBasicPassword",
    "tlsEnabled" : true,
    "authenticationScheme" : "none",
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "authenticationClientCertContent" : "authenticationClientCertContent",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "authenticationHttpBasicUsername" : "authenticationHttpBasicUsername"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter body: (body) The REST Consumer object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> 
     */
    public class func replaceMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, body: MsgVpnRestDeliveryPointRestConsumer, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Replaces a Topic Endpoint object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter body: (body) The Topic Endpoint object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceMsgVpnTopicEndpoint(msgVpnName msgVpnName: String, topicEndpointName: String, body: MsgVpnTopicEndpoint, select: [String]? = nil, completion: ((data: MsgVpnTopicEndpointResponse?, error: ErrorType?) -> Void)) {
        replaceMsgVpnTopicEndpointWithRequestBuilder(msgVpnName: msgVpnName, topicEndpointName: topicEndpointName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Replaces a Topic Endpoint object.
     - PUT /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}
     - Replaces a Topic Endpoint object. Any attribute missing from the request will be set to its default value, unless the user is not authorized to change its value in which case the missing attribute will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: accessType||||x| msgVpnName|x|x||| owner||||x| permission||||x| respectMsgPriorityEnabled||||x| topicEndpointName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "topicEndpointName" : "topicEndpointName",
    "maxSpoolUsage" : 5,
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "eventSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter body: (body) The Topic Endpoint object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnTopicEndpointResponse> 
     */
    public class func replaceMsgVpnTopicEndpointWithRequestBuilder(msgVpnName msgVpnName: String, topicEndpointName: String, body: MsgVpnTopicEndpoint, select: [String]? = nil) -> RequestBuilder<MsgVpnTopicEndpointResponse> {
        var path = "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicEndpointName}", withString: "\(topicEndpointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnTopicEndpointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpn(msgVpnName msgVpnName: String, body: MsgVpn, select: [String]? = nil, completion: ((data: MsgVpnResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Message VPN object.
     - PATCH /msgVpns/{msgVpnName}
     - Updates a Message VPN object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replicationBridgeAuthenticationBasicPassword|||x|| replicationBridgeAuthenticationClientCertContent|||x|| replicationBridgeAuthenticationClientCertPassword|||x|| replicationEnabledQueueBehavior|||x||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent EventThresholdByValue|clearValue|setValue| EventThresholdByValue|setValue|clearValue| MsgVpn|authenticationBasicProfileName|authenticationBasicType| MsgVpn|authorizationProfileName|authorizationType| MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled| MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled| MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword| MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername| MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent| MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation. Requests which include the following attributes require greater access scope/level:   Attribute|Access Scope/Level :---|:---: authenticationBasicEnabled|global/readwrite authenticationBasicProfileName|global/readwrite authenticationBasicRadiusDomain|global/readwrite authenticationBasicType|global/readwrite authenticationClientCertAllowApiProvidedUsernameEnabled|global/readwrite authenticationClientCertEnabled|global/readwrite authenticationClientCertMaxChainDepth|global/readwrite authenticationClientCertRevocationCheckMode|global/readwrite authenticationClientCertUsernameSource|global/readwrite authenticationClientCertValidateDateEnabled|global/readwrite authenticationKerberosAllowApiProvidedUsernameEnabled|global/readwrite authenticationKerberosEnabled|global/readwrite bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/readwrite bridgingTlsServerCertMaxChainDepth|global/readwrite bridgingTlsServerCertValidateDateEnabled|global/readwrite dmrEnabled|global/readwrite exportSubscriptionsEnabled|global/readwrite maxConnectionCount|global/readwrite maxEgressFlowCount|global/readwrite maxEndpointCount|global/readwrite maxIngressFlowCount|global/readwrite maxMsgSpoolUsage|global/readwrite maxSubscriptionCount|global/readwrite maxTransactedSessionCount|global/readwrite maxTransactionCount|global/readwrite replicationBridgeAuthenticationBasicClientUsername|global/readwrite replicationBridgeAuthenticationBasicPassword|global/readwrite replicationBridgeAuthenticationClientCertContent|global/readwrite replicationBridgeAuthenticationClientCertPassword|global/readwrite replicationBridgeAuthenticationScheme|global/readwrite replicationBridgeCompressedDataEnabled|global/readwrite replicationBridgeEgressFlowWindowSize|global/readwrite replicationBridgeRetryDelay|global/readwrite replicationBridgeTlsEnabled|global/readwrite replicationBridgeUnidirectionalClientProfileName|global/readwrite replicationEnabled|global/readwrite replicationEnabledQueueBehavior|global/readwrite replicationQueueMaxMsgSpoolUsage|global/readwrite replicationRole|global/readwrite restTlsServerCertEnforceTrustedCommonNameEnabled|global/readwrite restTlsServerCertMaxChainDepth|global/readwrite restTlsServerCertValidateDateEnabled|global/readwrite sempOverMsgBusAdminClientEnabled|global/readwrite sempOverMsgBusAdminDistributedCacheEnabled|global/readwrite sempOverMsgBusAdminEnabled|global/readwrite sempOverMsgBusEnabled|global/readwrite sempOverMsgBusShowEnabled|global/readwrite serviceRestIncomingMaxConnectionCount|global/readwrite serviceRestIncomingPlainTextListenPort|global/readwrite serviceRestIncomingTlsListenPort|global/readwrite serviceRestOutgoingMaxConnectionCount|global/readwrite serviceSmfMaxConnectionCount|global/readwrite serviceWebMaxConnectionCount|global/readwrite    This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "serviceMqttMaxConnectionCount" : 6,
    "authorizationProfileName" : "authorizationProfileName",
    "replicationBridgeAuthenticationClientCertPassword" : "replicationBridgeAuthenticationClientCertPassword",
    "replicationBridgeEgressFlowWindowSize" : 4,
    "restTlsServerCertMaxChainDepth" : 9,
    "serviceRestIncomingPlainTextEnabled" : true,
    "replicationEnabled" : true,
    "eventServiceWebConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "bridgingTlsServerCertValidateDateEnabled" : true,
    "authorizationType" : "ldap",
    "replicationAckPropagationIntervalMsgCount" : 1,
    "bridgingTlsServerCertMaxChainDepth" : 6,
    "replicationBridgeCompressedDataEnabled" : true,
    "serviceAmqpPlainTextEnabled" : true,
    "bridgingTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "restTlsServerCertValidateDateEnabled" : true,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "authenticationKerberosEnabled" : true,
    "authorizationLdapGroupMembershipAttributeName" : "authorizationLdapGroupMembershipAttributeName",
    "serviceRestIncomingPlainTextListenPort" : 6,
    "authenticationClientCertUsernameSource" : "common-name",
    "replicationBridgeAuthenticationClientCertContent" : "replicationBridgeAuthenticationClientCertContent",
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceMqttPlainTextListenPort" : 3,
    "authenticationClientCertMaxChainDepth" : 0,
    "serviceMqttWebSocketEnabled" : true,
    "authenticationClientCertEnabled" : true,
    "restTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "replicationRejectMsgWhenSyncIneligibleEnabled" : true,
    "eventPublishTopicFormatSmfEnabled" : true,
    "authenticationBasicProfileName" : "authenticationBasicProfileName",
    "enabled" : true,
    "replicationBridgeAuthenticationScheme" : "basic",
    "replicationBridgeUnidirectionalClientProfileName" : "replicationBridgeUnidirectionalClientProfileName",
    "serviceRestIncomingMaxConnectionCount" : 6,
    "sempOverMsgBusEnabled" : true,
    "maxTransactionCount" : 7,
    "serviceAmqpTlsListenPort" : 9,
    "serviceMqttTlsListenPort" : 6,
    "eventServiceAmqpConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceRestMode" : "gateway",
    "serviceRestIncomingTlsEnabled" : true,
    "authenticationKerberosAllowApiProvidedUsernameEnabled" : true,
    "sempOverMsgBusAdminDistributedCacheEnabled" : true,
    "maxSubscriptionCount" : 1,
    "authenticationBasicType" : "internal",
    "serviceWebMaxConnectionCount" : 3,
    "serviceAmqpMaxConnectionCount" : 6,
    "maxEgressFlowCount" : 4,
    "serviceMqttWebSocketListenPort" : 2,
    "serviceSmfPlainTextEnabled" : true,
    "maxEndpointCount" : 7,
    "serviceWebTlsEnabled" : true,
    "serviceMqttTlsWebSocketEnabled" : true,
    "exportSubscriptionsEnabled" : true,
    "eventIngressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "eventPublishSubscriptionMode" : "off",
    "serviceMqttTlsEnabled" : true,
    "eventConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfTlsEnabled" : true,
    "eventLargeMsgThreshold" : 3,
    "serviceRestIncomingTlsListenPort" : 5,
    "replicationQueueRejectMsgToSenderOnDiscardEnabled" : true,
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventPublishMsgVpnEnabled" : true,
    "sempOverMsgBusShowEnabled" : true,
    "serviceWebPlainTextEnabled" : true,
    "msgVpnName" : "msgVpnName",
    "eventEndpointCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminEnabled" : true,
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventServiceRestIncomingConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfMaxConnectionCount" : 3,
    "jndiEnabled" : true,
    "serviceMqttPlainTextEnabled" : true,
    "eventPublishClientEnabled" : true,
    "replicationQueueMaxMsgSpoolUsage" : 9,
    "eventServiceMqttConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminClientEnabled" : true,
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "maxConnectionCount" : 2,
    "serviceRestOutgoingMaxConnectionCount" : 6,
    "replicationBridgeTlsEnabled" : true,
    "authenticationClientCertRevocationCheckMode" : "allow-all",
    "authenticationClientCertAllowApiProvidedUsernameEnabled" : true,
    "eventServiceSmfConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceAmqpPlainTextListenPort" : 8,
    "authenticationClientCertValidateDateEnabled" : true,
    "serviceAmqpTlsEnabled" : true,
    "eventEgressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "replicationTransactionMode" : "sync",
    "replicationRole" : "active",
    "authenticationBasicRadiusDomain" : "authenticationBasicRadiusDomain",
    "replicationEnabledQueueBehavior" : "fail-on-existing-queue",
    "replicationBridgeRetryDelay" : 5,
    "eventLogTag" : "eventLogTag",
    "distributedCacheManagementEnabled" : true,
    "serviceMqttTlsWebSocketListenPort" : 1,
    "replicationBridgeAuthenticationBasicClientUsername" : "replicationBridgeAuthenticationBasicClientUsername",
    "replicationBridgeAuthenticationBasicPassword" : "replicationBridgeAuthenticationBasicPassword",
    "maxIngressFlowCount" : 1,
    "maxTransactedSessionCount" : 6,
    "eventPublishTopicFormatMqttEnabled" : true,
    "authenticationBasicEnabled" : true,
    "maxMsgSpoolUsage" : 1,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientProfilesUri" : "clientProfilesUri",
    "topicEndpointsUri" : "topicEndpointsUri",
    "jndiConnectionFactoriesUri" : "jndiConnectionFactoriesUri",
    "clientUsernamesUri" : "clientUsernamesUri",
    "bridgesUri" : "bridgesUri",
    "replicatedTopicsUri" : "replicatedTopicsUri",
    "aclProfilesUri" : "aclProfilesUri",
    "sequencedTopicsUri" : "sequencedTopicsUri",
    "uri" : "uri",
    "jndiTopicsUri" : "jndiTopicsUri",
    "replayLogsUri" : "replayLogsUri",
    "queuesUri" : "queuesUri",
    "restDeliveryPointsUri" : "restDeliveryPointsUri",
    "mqttSessionsUri" : "mqttSessionsUri",
    "authorizationGroupsUri" : "authorizationGroupsUri",
    "jndiQueuesUri" : "jndiQueuesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter body: (body) The Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnResponse> 
     */
    public class func updateMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, body: MsgVpn, select: [String]? = nil) -> RequestBuilder<MsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates an ACL Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The ACL Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnAclProfile(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfile, select: [String]? = nil, completion: ((data: MsgVpnAclProfileResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnAclProfileWithRequestBuilder(msgVpnName: msgVpnName, aclProfileName: aclProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates an ACL Profile object.
     - PATCH /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}
     - Updates an ACL Profile object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName|x|x||| msgVpnName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientConnectDefaultAction" : "allow",
    "publishTopicDefaultAction" : "allow",
    "subscribeTopicDefaultAction" : "allow",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "clientConnectExceptionsUri" : "clientConnectExceptionsUri",
    "publishExceptionsUri" : "publishExceptionsUri",
    "uri" : "uri",
    "subscribeExceptionsUri" : "subscribeExceptionsUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter aclProfileName: (path) The aclProfileName of the ACL Profile. 
     - parameter body: (body) The ACL Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfileResponse> 
     */
    public class func updateMsgVpnAclProfileWithRequestBuilder(msgVpnName msgVpnName: String, aclProfileName: String, body: MsgVpnAclProfile, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{aclProfileName}", withString: "\(aclProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates an LDAP Authorization Group object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter body: (body) The LDAP Authorization Group object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnAuthorizationGroup(msgVpnName msgVpnName: String, authorizationGroupName: String, body: MsgVpnAuthorizationGroup, select: [String]? = nil, completion: ((data: MsgVpnAuthorizationGroupResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName: msgVpnName, authorizationGroupName: authorizationGroupName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates an LDAP Authorization Group object.
     - PATCH /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}
     - Updates an LDAP Authorization Group object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName||||x| authorizationGroupName|x|x||| clientProfileName||||x| msgVpnName|x|x||| orderAfterAuthorizationGroupName|||x|| orderBeforeAuthorizationGroupName|||x||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "orderBeforeAuthorizationGroupName" : "orderBeforeAuthorizationGroupName",
    "authorizationGroupName" : "authorizationGroupName",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "enabled" : true,
    "orderAfterAuthorizationGroupName" : "orderAfterAuthorizationGroupName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter authorizationGroupName: (path) The authorizationGroupName of the LDAP Authorization Group. 
     - parameter body: (body) The LDAP Authorization Group object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAuthorizationGroupResponse> 
     */
    public class func updateMsgVpnAuthorizationGroupWithRequestBuilder(msgVpnName msgVpnName: String, authorizationGroupName: String, body: MsgVpnAuthorizationGroup, select: [String]? = nil) -> RequestBuilder<MsgVpnAuthorizationGroupResponse> {
        var path = "/msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{authorizationGroupName}", withString: "\(authorizationGroupName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAuthorizationGroupResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Bridge object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Bridge object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnBridge(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridge, select: [String]? = nil, completion: ((data: MsgVpnBridgeResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnBridgeWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Bridge object.
     - PATCH /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}
     - Updates a Bridge object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x|x||| bridgeVirtualRouter|x|x||| maxTtl||||x| msgVpnName|x|x||| remoteAuthenticationBasicClientUsername||||x| remoteAuthenticationBasicPassword|||x|x| remoteAuthenticationClientCertContent|||x|x| remoteAuthenticationClientCertPassword|||x|x| remoteAuthenticationScheme||||x| remoteDeliverToOnePriority||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword| MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername| MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "remoteAuthenticationBasicClientUsername" : "remoteAuthenticationBasicClientUsername",
    "remoteAuthenticationClientCertPassword" : "remoteAuthenticationClientCertPassword",
    "maxTtl" : 0,
    "remoteDeliverToOnePriority" : "p1",
    "bridgeName" : "bridgeName",
    "enabled" : true,
    "remoteAuthenticationBasicPassword" : "remoteAuthenticationBasicPassword",
    "bridgeVirtualRouter" : "primary",
    "remoteAuthenticationClientCertContent" : "remoteAuthenticationClientCertContent",
    "remoteConnectionRetryCount" : 6,
    "remoteConnectionRetryDelay" : 1,
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "msgVpnName" : "msgVpnName",
    "remoteAuthenticationScheme" : "basic"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "remoteMsgVpnsUri" : "remoteMsgVpnsUri",
    "uri" : "uri",
    "remoteSubscriptionsUri" : "remoteSubscriptionsUri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter body: (body) The Bridge object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeResponse> 
     */
    public class func updateMsgVpnBridgeWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, body: MsgVpnBridge, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Remote Message VPN object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter body: (body) The Remote Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnBridgeRemoteMsgVpn(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, body: MsgVpnBridgeRemoteMsgVpn, select: [String]? = nil, completion: ((data: MsgVpnBridgeRemoteMsgVpnResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName: msgVpnName, bridgeName: bridgeName, bridgeVirtualRouter: bridgeVirtualRouter, remoteMsgVpnName: remoteMsgVpnName, remoteMsgVpnLocation: remoteMsgVpnLocation, remoteMsgVpnInterface: remoteMsgVpnInterface, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Remote Message VPN object.
     - PATCH /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
     - Updates a Remote Message VPN object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: bridgeName|x|x||| bridgeVirtualRouter|x|x||| clientUsername||||x| compressedDataEnabled||||x| egressFlowWindowSize||||x| msgVpnName|x|x||| password|||x|x| remoteMsgVpnInterface|x|x||| remoteMsgVpnLocation|x|x||| remoteMsgVpnName|x|x||| tlsEnabled||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnBridgeRemoteMsgVpn|clientUsername|password| MsgVpnBridgeRemoteMsgVpn|password|clientUsername|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "egressFlowWindowSize" : 6,
    "remoteMsgVpnLocation" : "remoteMsgVpnLocation",
    "bridgeName" : "bridgeName",
    "compressedDataEnabled" : true,
    "enabled" : true,
    "remoteMsgVpnName" : "remoteMsgVpnName",
    "bridgeVirtualRouter" : "primary",
    "password" : "password",
    "remoteMsgVpnInterface" : "remoteMsgVpnInterface",
    "tlsEnabled" : true,
    "clientUsername" : "clientUsername",
    "connectOrder" : 0,
    "queueBinding" : "queueBinding",
    "msgVpnName" : "msgVpnName",
    "unidirectionalClientProfile" : "unidirectionalClientProfile"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter bridgeName: (path) The bridgeName of the Bridge. 
     - parameter bridgeVirtualRouter: (path) The bridgeVirtualRouter of the Bridge. 
     - parameter remoteMsgVpnName: (path) The remoteMsgVpnName of the Remote Message VPN. 
     - parameter remoteMsgVpnLocation: (path) The remoteMsgVpnLocation of the Remote Message VPN. 
     - parameter remoteMsgVpnInterface: (path) The remoteMsgVpnInterface of the Remote Message VPN. 
     - parameter body: (body) The Remote Message VPN object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> 
     */
    public class func updateMsgVpnBridgeRemoteMsgVpnWithRequestBuilder(msgVpnName msgVpnName: String, bridgeName: String, bridgeVirtualRouter: String, remoteMsgVpnName: String, remoteMsgVpnLocation: String, remoteMsgVpnInterface: String, body: MsgVpnBridgeRemoteMsgVpn, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeName}", withString: "\(bridgeName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{bridgeVirtualRouter}", withString: "\(bridgeVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnName}", withString: "\(remoteMsgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnLocation}", withString: "\(remoteMsgVpnLocation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{remoteMsgVpnInterface}", withString: "\(remoteMsgVpnInterface)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgeRemoteMsgVpnResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Client Profile object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter body: (body) The Client Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnClientProfile(msgVpnName msgVpnName: String, clientProfileName: String, body: MsgVpnClientProfile, select: [String]? = nil, completion: ((data: MsgVpnClientProfileResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnClientProfileWithRequestBuilder(msgVpnName: msgVpnName, clientProfileName: clientProfileName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Client Profile object.
     - PATCH /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}
     - Updates a Client Profile object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: clientProfileName|x|x||| msgVpnName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent EventThresholdByPercent|clearPercent|setPercent| EventThresholdByPercent|setPercent|clearPercent|    A SEMP client authorized with a minimum access scope/level of \"global/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "apiTopicEndpointManagementCopyFromOnCreateName" : "apiTopicEndpointManagementCopyFromOnCreateName",
    "compressionEnabled" : true,
    "tcpMaxWindowSize" : 6,
    "clientProfileName" : "clientProfileName",
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpMaxSegmentSize" : 2,
    "queueDirect2MaxDepth" : 6,
    "msgVpnName" : "msgVpnName",
    "eventClientProvisionedEndpointSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5
    },
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MinMsgBurst" : 4,
    "elidingDelay" : 0,
    "eventServiceWebConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueControl1MinMsgBurst" : 1,
    "serviceWebMaxPayload" : 9,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "tcpKeepaliveIdleTime" : 6,
    "maxEndpointCountPerClientUsername" : 7,
    "queueDirect2MinMsgBurst" : 7,
    "queueGuaranteed1MinMsgBurst" : 9,
    "queueDirect1MaxDepth" : 1,
    "eventServiceSmfConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpCongestionWindowSize" : 6,
    "eventEndpointCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MaxDepth" : 1,
    "allowBridgeConnectionsEnabled" : true,
    "allowTransactedSessionsEnabled" : true,
    "serviceSmfMaxConnectionCountPerClientUsername" : 9,
    "allowGuaranteedMsgSendEnabled" : true,
    "queueDirect1MinMsgBurst" : 1,
    "queueGuaranteed1MaxDepth" : 5,
    "serviceWebInactiveTimeout" : 6,
    "allowGuaranteedMsgReceiveEnabled" : true,
    "tcpKeepaliveCount" : 3,
    "maxTransactionCount" : 4,
    "maxSubscriptionCount" : 3,
    "eventConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "elidingMaxTopicCount" : 6,
    "queueControl1MaxDepth" : 7,
    "tcpKeepaliveInterval" : 1,
    "elidingEnabled" : true,
    "maxIngressFlowCount" : 9,
    "replicationAllowClientConnectWhenStandbyEnabled" : true,
    "maxEgressFlowCount" : 2,
    "maxTransactedSessionCount" : 2,
    "rejectMsgToSenderOnNoSubscriptionMatchEnabled" : true,
    "serviceWebMaxConnectionCountPerClientUsername" : 8,
    "allowGuaranteedEndpointCreateEnabled" : true,
    "allowCutThroughForwardingEnabled" : true,
    "apiQueueManagementCopyFromOnCreateName" : "apiQueueManagementCopyFromOnCreateName",
    "maxConnectionCountPerClientUsername" : 5,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientProfileName: (path) The clientProfileName of the Client Profile. 
     - parameter body: (body) The Client Profile object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientProfileResponse> 
     */
    public class func updateMsgVpnClientProfileWithRequestBuilder(msgVpnName msgVpnName: String, clientProfileName: String, body: MsgVpnClientProfile, select: [String]? = nil) -> RequestBuilder<MsgVpnClientProfileResponse> {
        var path = "/msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientProfileName}", withString: "\(clientProfileName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientProfileResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Client Username object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter body: (body) The Client Username object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnClientUsername(msgVpnName msgVpnName: String, clientUsername: String, body: MsgVpnClientUsername, select: [String]? = nil, completion: ((data: MsgVpnClientUsernameResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnClientUsernameWithRequestBuilder(msgVpnName: msgVpnName, clientUsername: clientUsername, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Client Username object.
     - PATCH /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}
     - Updates a Client Username object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: aclProfileName||||x| clientProfileName||||x| clientUsername|x|x||| msgVpnName|x|x||| password|||x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "password" : "password",
    "subscriptionManagerEnabled" : true,
    "clientUsername" : "clientUsername",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "guaranteedEndpointPermissionOverrideEnabled" : true,
    "aclProfileName" : "aclProfileName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter clientUsername: (path) The clientUsername of the Client Username. 
     - parameter body: (body) The Client Username object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientUsernameResponse> 
     */
    public class func updateMsgVpnClientUsernameWithRequestBuilder(msgVpnName msgVpnName: String, clientUsername: String, body: MsgVpnClientUsername, select: [String]? = nil) -> RequestBuilder<MsgVpnClientUsernameResponse> {
        var path = "/msgVpns/{msgVpnName}/clientUsernames/{clientUsername}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{clientUsername}", withString: "\(clientUsername)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientUsernameResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a JNDI Connection Factory object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter body: (body) The JNDI Connection Factory object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnJndiConnectionFactory(msgVpnName msgVpnName: String, connectionFactoryName: String, body: MsgVpnJndiConnectionFactory, select: [String]? = nil, completion: ((data: MsgVpnJndiConnectionFactoryResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName: msgVpnName, connectionFactoryName: connectionFactoryName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a JNDI Connection Factory object.
     - PATCH /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}
     - Updates a JNDI Connection Factory object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: connectionFactoryName|x|x||| msgVpnName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "messagingDefaultDeliveryMode" : "persistent",
    "connectionFactoryName" : "connectionFactoryName",
    "guaranteedReceiveAckTimeout" : 1,
    "transportReadTimeout" : 1,
    "transportReconnectRetryCount" : 7,
    "dtoReceiveSubscriberNetworkPriority" : 6,
    "messagingDefaultElidingEligibleEnabled" : true,
    "transportDirectTransportEnabled" : true,
    "transportReconnectRetryWait" : 1,
    "clientDescription" : "clientDescription",
    "guaranteedReceiveWindowSize" : 5,
    "dtoReceiveSubscriberLocalPriority" : 0,
    "transportCompressionLevel" : 9,
    "transportConnectRetryPerHostCount" : 2,
    "guaranteedSendAckTimeout" : 2,
    "transportReceiveBufferSize" : 6,
    "msgVpnName" : "msgVpnName",
    "transportKeepaliveEnabled" : true,
    "allowDuplicateClientIdEnabled" : true,
    "transportPort" : 1,
    "transportConnectRetryCount" : 3,
    "transportConnectTimeout" : 4,
    "dynamicEndpointCreateDurableEnabled" : true,
    "clientId" : "clientId",
    "messagingJmsxUserIdEnabled" : true,
    "guaranteedReceiveWindowSizeAckThreshold" : 5,
    "dynamicEndpointRespectTtlEnabled" : true,
    "messagingTextInXmlPayloadEnabled" : true,
    "guaranteedSendWindowSize" : 7,
    "transportKeepaliveInterval" : 1,
    "transportOptimizeDirectEnabled" : true,
    "transportTcpNoDelayEnabled" : true,
    "transportSendBufferSize" : 4,
    "transportKeepaliveCount" : 7,
    "xaEnabled" : true,
    "dtoSendEnabled" : true,
    "messagingDefaultDmqEligibleEnabled" : true,
    "dtoReceiveOverrideEnabled" : true,
    "transportMsgCallbackOnIoThreadEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter connectionFactoryName: (path) The connectionFactoryName of the JNDI Connection Factory. 
     - parameter body: (body) The JNDI Connection Factory object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiConnectionFactoryResponse> 
     */
    public class func updateMsgVpnJndiConnectionFactoryWithRequestBuilder(msgVpnName msgVpnName: String, connectionFactoryName: String, body: MsgVpnJndiConnectionFactory, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiConnectionFactoryResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{connectionFactoryName}", withString: "\(connectionFactoryName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiConnectionFactoryResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a JNDI Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter body: (body) The JNDI Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnJndiQueue(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnJndiQueue, select: [String]? = nil, completion: ((data: MsgVpnJndiQueueResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnJndiQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a JNDI Queue object.
     - PATCH /msgVpns/{msgVpnName}/jndiQueues/{queueName}
     - Updates a JNDI Queue object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| queueName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "queueName" : "queueName",
    "physicalName" : "physicalName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the JNDI Queue. 
     - parameter body: (body) The JNDI Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiQueueResponse> 
     */
    public class func updateMsgVpnJndiQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnJndiQueue, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiQueues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a JNDI Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter body: (body) The JNDI Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnJndiTopic(msgVpnName msgVpnName: String, topicName: String, body: MsgVpnJndiTopic, select: [String]? = nil, completion: ((data: MsgVpnJndiTopicResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnJndiTopicWithRequestBuilder(msgVpnName: msgVpnName, topicName: topicName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a JNDI Topic object.
     - PATCH /msgVpns/{msgVpnName}/jndiTopics/{topicName}
     - Updates a JNDI Topic object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| topicName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "physicalName" : "physicalName",
    "topicName" : "topicName",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicName: (path) The topicName of the JNDI Topic. 
     - parameter body: (body) The JNDI Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiTopicResponse> 
     */
    public class func updateMsgVpnJndiTopicWithRequestBuilder(msgVpnName msgVpnName: String, topicName: String, body: MsgVpnJndiTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiTopics/{topicName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicName}", withString: "\(topicName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates an MQTT Session object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter body: (body) The MQTT Session object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnMqttSession(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, body: MsgVpnMqttSession, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnMqttSessionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates an MQTT Session object.
     - PATCH /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}
     - Updates an MQTT Session object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: mqttSessionClientId|x|x||| mqttSessionVirtualRouter|x|x||| msgVpnName|x|x||| owner||||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "owner" : "owner",
    "mqttSessionClientId" : "mqttSessionClientId",
    "msgVpnName" : "msgVpnName",
    "enabled" : true,
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter body: (body) The MQTT Session object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionResponse> 
     */
    public class func updateMsgVpnMqttSessionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, body: MsgVpnMqttSession, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates an MQTT Session Subscription object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter body: (body) The MQTT Session Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnMqttSessionSubscription(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, body: MsgVpnMqttSessionSubscription, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionSubscriptionResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName: msgVpnName, mqttSessionClientId: mqttSessionClientId, mqttSessionVirtualRouter: mqttSessionVirtualRouter, subscriptionTopic: subscriptionTopic, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates an MQTT Session Subscription object.
     - PATCH /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}
     - Updates an MQTT Session Subscription object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: mqttSessionClientId|x|x||| mqttSessionVirtualRouter|x|x||| msgVpnName|x|x||| subscriptionTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "mqttSessionClientId" : "mqttSessionClientId",
    "subscriptionQos" : 0,
    "msgVpnName" : "msgVpnName",
    "subscriptionTopic" : "subscriptionTopic",
    "mqttSessionVirtualRouter" : "primary"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter mqttSessionClientId: (path) The mqttSessionClientId of the MQTT Session. 
     - parameter mqttSessionVirtualRouter: (path) The mqttSessionVirtualRouter of the MQTT Session. 
     - parameter subscriptionTopic: (path) The subscriptionTopic of the MQTT Session Subscription. 
     - parameter body: (body) The MQTT Session Subscription object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> 
     */
    public class func updateMsgVpnMqttSessionSubscriptionWithRequestBuilder(msgVpnName msgVpnName: String, mqttSessionClientId: String, mqttSessionVirtualRouter: String, subscriptionTopic: String, body: MsgVpnMqttSessionSubscription, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionSubscriptionResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionClientId}", withString: "\(mqttSessionClientId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{mqttSessionVirtualRouter}", withString: "\(mqttSessionVirtualRouter)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{subscriptionTopic}", withString: "\(subscriptionTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionSubscriptionResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Queue object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter body: (body) The Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnQueue(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnQueue, select: [String]? = nil, completion: ((data: MsgVpnQueueResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnQueueWithRequestBuilder(msgVpnName: msgVpnName, queueName: queueName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Queue object.
     - PATCH /msgVpns/{msgVpnName}/queues/{queueName}
     - Updates a Queue object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: accessType||||x| msgVpnName|x|x||| owner||||x| permission||||x| queueName|x|x||| respectMsgPriorityEnabled||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "queueName" : "queueName",
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxMsgSpoolUsage" : 5,
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter queueName: (path) The queueName of the Queue. 
     - parameter body: (body) The Queue object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueueResponse> 
     */
    public class func updateMsgVpnQueueWithRequestBuilder(msgVpnName msgVpnName: String, queueName: String, body: MsgVpnQueue, select: [String]? = nil) -> RequestBuilder<MsgVpnQueueResponse> {
        var path = "/msgVpns/{msgVpnName}/queues/{queueName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueName}", withString: "\(queueName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueueResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a ReplayLog object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter body: (body) The ReplayLog object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnReplayLog(msgVpnName msgVpnName: String, replayLogName: String, body: MsgVpnReplayLog, select: [String]? = nil, completion: ((data: MsgVpnReplayLogResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnReplayLogWithRequestBuilder(msgVpnName: msgVpnName, replayLogName: replayLogName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a ReplayLog object.
     - PATCH /msgVpns/{msgVpnName}/replayLogs/{replayLogName}
     - Updates a ReplayLog object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replayLogName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.10.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "ingressEnabled" : true,
    "replayLogName" : "replayLogName",
    "maxSpoolUsage" : 0,
    "egressEnabled" : true,
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replayLogName: (path) The replayLogName of the ReplayLog. 
     - parameter body: (body) The ReplayLog object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplayLogResponse> 
     */
    public class func updateMsgVpnReplayLogWithRequestBuilder(msgVpnName msgVpnName: String, replayLogName: String, body: MsgVpnReplayLog, select: [String]? = nil) -> RequestBuilder<MsgVpnReplayLogResponse> {
        var path = "/msgVpns/{msgVpnName}/replayLogs/{replayLogName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replayLogName}", withString: "\(replayLogName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplayLogResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Replicated Topic object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter body: (body) The Replicated Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnReplicatedTopic(msgVpnName msgVpnName: String, replicatedTopic: String, body: MsgVpnReplicatedTopic, select: [String]? = nil, completion: ((data: MsgVpnReplicatedTopicResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName: msgVpnName, replicatedTopic: replicatedTopic, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Replicated Topic object.
     - PATCH /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}
     - Updates a Replicated Topic object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| replicatedTopic|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.9.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "replicationMode" : "sync",
    "replicatedTopic" : "replicatedTopic",
    "msgVpnName" : "msgVpnName"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter replicatedTopic: (path) The replicatedTopic of the Replicated Topic. 
     - parameter body: (body) The Replicated Topic object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplicatedTopicResponse> 
     */
    public class func updateMsgVpnReplicatedTopicWithRequestBuilder(msgVpnName msgVpnName: String, replicatedTopic: String, body: MsgVpnReplicatedTopic, select: [String]? = nil) -> RequestBuilder<MsgVpnReplicatedTopicResponse> {
        var path = "/msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{replicatedTopic}", withString: "\(replicatedTopic)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplicatedTopicResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a REST Delivery Point object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The REST Delivery Point object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnRestDeliveryPoint(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPoint, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a REST Delivery Point object.
     - PATCH /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}
     - Updates a REST Delivery Point object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: clientProfileName||||x| msgVpnName|x|x||| restDeliveryPointName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "enabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "restConsumersUri" : "restConsumersUri",
    "queueBindingsUri" : "queueBindingsUri",
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter body: (body) The REST Delivery Point object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointResponse> 
     */
    public class func updateMsgVpnRestDeliveryPointWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, body: MsgVpnRestDeliveryPoint, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Queue Binding object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter body: (body) The Queue Binding object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnRestDeliveryPointQueueBinding(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, body: MsgVpnRestDeliveryPointQueueBinding, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointQueueBindingResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, queueBindingName: queueBindingName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Queue Binding object.
     - PATCH /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}
     - Updates a Queue Binding object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: msgVpnName|x|x||| queueBindingName|x|x||| restDeliveryPointName|x|x|||    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "gatewayReplaceTargetAuthorityEnabled" : true,
    "queueBindingName" : "queueBindingName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "postRequestTarget" : "postRequestTarget"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter queueBindingName: (path) The queueBindingName of the Queue Binding. 
     - parameter body: (body) The Queue Binding object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> 
     */
    public class func updateMsgVpnRestDeliveryPointQueueBindingWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, queueBindingName: String, body: MsgVpnRestDeliveryPointQueueBinding, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{queueBindingName}", withString: "\(queueBindingName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointQueueBindingResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a REST Consumer object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter body: (body) The REST Consumer object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnRestDeliveryPointRestConsumer(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, body: MsgVpnRestDeliveryPointRestConsumer, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointRestConsumerResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName: msgVpnName, restDeliveryPointName: restDeliveryPointName, restConsumerName: restConsumerName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a REST Consumer object.
     - PATCH /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}
     - Updates a REST Consumer object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: authenticationClientCertContent|||x|x| authenticationClientCertPassword|||x|x| authenticationHttpBasicPassword|||x|x| authenticationHttpBasicUsername||||x| authenticationScheme||||x| msgVpnName|x|x||| outgoingConnectionCount||||x| remoteHost||||x| remotePort||||x| restConsumerName|x|x||| restDeliveryPointName|x|x||| tlsCipherSuiteList||||x| tlsEnabled||||x|    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent| MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername| MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword| MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled| MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxPostWaitTime" : 0,
    "remoteHost" : "remoteHost",
    "restConsumerName" : "restConsumerName",
    "remotePort" : 1,
    "enabled" : true,
    "authenticationClientCertPassword" : "authenticationClientCertPassword",
    "localInterface" : "localInterface",
    "outgoingConnectionCount" : 6,
    "retryDelay" : 5,
    "authenticationHttpBasicPassword" : "authenticationHttpBasicPassword",
    "tlsEnabled" : true,
    "authenticationScheme" : "none",
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "authenticationClientCertContent" : "authenticationClientCertContent",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "authenticationHttpBasicUsername" : "authenticationHttpBasicUsername"
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter restDeliveryPointName: (path) The restDeliveryPointName of the REST Delivery Point. 
     - parameter restConsumerName: (path) The restConsumerName of the REST Consumer. 
     - parameter body: (body) The REST Consumer object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> 
     */
    public class func updateMsgVpnRestDeliveryPointRestConsumerWithRequestBuilder(msgVpnName msgVpnName: String, restDeliveryPointName: String, restConsumerName: String, body: MsgVpnRestDeliveryPointRestConsumer, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restDeliveryPointName}", withString: "\(restDeliveryPointName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{restConsumerName}", withString: "\(restConsumerName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointRestConsumerResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Updates a Topic Endpoint object.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter body: (body) The Topic Endpoint object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateMsgVpnTopicEndpoint(msgVpnName msgVpnName: String, topicEndpointName: String, body: MsgVpnTopicEndpoint, select: [String]? = nil, completion: ((data: MsgVpnTopicEndpointResponse?, error: ErrorType?) -> Void)) {
        updateMsgVpnTopicEndpointWithRequestBuilder(msgVpnName: msgVpnName, topicEndpointName: topicEndpointName, body: body, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Updates a Topic Endpoint object.
     - PATCH /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}
     - Updates a Topic Endpoint object. Any attribute missing from the request will be left unchanged.   Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated :---|:---:|:---:|:---:|:---:|:---: accessType||||x| msgVpnName|x|x||| owner||||x| permission||||x| respectMsgPriorityEnabled||||x| topicEndpointName|x|x|||    The following attributes in the request may only be provided in certain combinations with other attributes:   Class|Attribute|Requires|Conflicts :---|:---|:---|:--- EventThreshold|clearPercent|setPercent|clearValue, setValue EventThreshold|clearValue|setValue|clearPercent, setPercent EventThreshold|setPercent|clearPercent|clearValue, setValue EventThreshold|setValue|clearValue|clearPercent, setPercent    A SEMP client authorized with a minimum access scope/level of \"vpn/readwrite\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : {
    "maxBindCount" : 0,
    "owner" : "owner",
    "topicEndpointName" : "topicEndpointName",
    "maxSpoolUsage" : 5,
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "eventSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  },
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : {
    "uri" : "uri"
  }
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter topicEndpointName: (path) The topicEndpointName of the Topic Endpoint. 
     - parameter body: (body) The Topic Endpoint object&#39;s attributes. 
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnTopicEndpointResponse> 
     */
    public class func updateMsgVpnTopicEndpointWithRequestBuilder(msgVpnName msgVpnName: String, topicEndpointName: String, body: MsgVpnTopicEndpoint, select: [String]? = nil) -> RequestBuilder<MsgVpnTopicEndpointResponse> {
        var path = "/msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{topicEndpointName}", withString: "\(topicEndpointName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path
        let parameters = body.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnTopicEndpointResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
