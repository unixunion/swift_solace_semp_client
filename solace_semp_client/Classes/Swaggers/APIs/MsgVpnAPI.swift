//
// MsgVpnAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class MsgVpnAPI: APIBase {
    /**
     Gets a list of ACL Profile objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAclProfiles(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnAclProfilesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAclProfilesWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of ACL Profile objects.
     - GET /msgVpns/{msgVpnName}/aclProfiles
     - Gets a list of ACL Profile objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: aclProfileName|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "clientConnectDefaultAction" : "allow",
    "publishTopicDefaultAction" : "allow",
    "subscribeTopicDefaultAction" : "allow",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  }, {
    "clientConnectDefaultAction" : "allow",
    "publishTopicDefaultAction" : "allow",
    "subscribeTopicDefaultAction" : "allow",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "clientConnectExceptionsUri" : "clientConnectExceptionsUri",
    "publishExceptionsUri" : "publishExceptionsUri",
    "uri" : "uri",
    "subscribeExceptionsUri" : "subscribeExceptionsUri"
  }, {
    "clientConnectExceptionsUri" : "clientConnectExceptionsUri",
    "publishExceptionsUri" : "publishExceptionsUri",
    "uri" : "uri",
    "subscribeExceptionsUri" : "subscribeExceptionsUri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAclProfilesResponse> 
     */
    public class func getMsgVpnAclProfilesWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnAclProfilesResponse> {
        var path = "/msgVpns/{msgVpnName}/aclProfiles"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAclProfilesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of LDAP Authorization Group objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnAuthorizationGroups(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnAuthorizationGroupsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnAuthorizationGroupsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of LDAP Authorization Group objects.
     - GET /msgVpns/{msgVpnName}/authorizationGroups
     - Gets a list of LDAP Authorization Group objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: authorizationGroupName|x|| msgVpnName|x|| orderAfterAuthorizationGroupName||x| orderBeforeAuthorizationGroupName||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "orderBeforeAuthorizationGroupName" : "orderBeforeAuthorizationGroupName",
    "authorizationGroupName" : "authorizationGroupName",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "enabled" : true,
    "orderAfterAuthorizationGroupName" : "orderAfterAuthorizationGroupName"
  }, {
    "orderBeforeAuthorizationGroupName" : "orderBeforeAuthorizationGroupName",
    "authorizationGroupName" : "authorizationGroupName",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "aclProfileName" : "aclProfileName",
    "enabled" : true,
    "orderAfterAuthorizationGroupName" : "orderAfterAuthorizationGroupName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnAuthorizationGroupsResponse> 
     */
    public class func getMsgVpnAuthorizationGroupsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnAuthorizationGroupsResponse> {
        var path = "/msgVpns/{msgVpnName}/authorizationGroups"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnAuthorizationGroupsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Bridge objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnBridges(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnBridgesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnBridgesWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Bridge objects.
     - GET /msgVpns/{msgVpnName}/bridges
     - Gets a list of Bridge objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: bridgeName|x|| bridgeVirtualRouter|x|| msgVpnName|x|| remoteAuthenticationBasicPassword||x| remoteAuthenticationClientCertContent||x| remoteAuthenticationClientCertPassword||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "remoteAuthenticationBasicClientUsername" : "remoteAuthenticationBasicClientUsername",
    "remoteAuthenticationClientCertPassword" : "remoteAuthenticationClientCertPassword",
    "maxTtl" : 0,
    "remoteDeliverToOnePriority" : "p1",
    "bridgeName" : "bridgeName",
    "enabled" : true,
    "remoteAuthenticationBasicPassword" : "remoteAuthenticationBasicPassword",
    "bridgeVirtualRouter" : "primary",
    "remoteAuthenticationClientCertContent" : "remoteAuthenticationClientCertContent",
    "remoteConnectionRetryCount" : 6,
    "remoteConnectionRetryDelay" : 1,
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "msgVpnName" : "msgVpnName",
    "remoteAuthenticationScheme" : "basic"
  }, {
    "remoteAuthenticationBasicClientUsername" : "remoteAuthenticationBasicClientUsername",
    "remoteAuthenticationClientCertPassword" : "remoteAuthenticationClientCertPassword",
    "maxTtl" : 0,
    "remoteDeliverToOnePriority" : "p1",
    "bridgeName" : "bridgeName",
    "enabled" : true,
    "remoteAuthenticationBasicPassword" : "remoteAuthenticationBasicPassword",
    "bridgeVirtualRouter" : "primary",
    "remoteAuthenticationClientCertContent" : "remoteAuthenticationClientCertContent",
    "remoteConnectionRetryCount" : 6,
    "remoteConnectionRetryDelay" : 1,
    "tlsCipherSuiteList" : "tlsCipherSuiteList",
    "msgVpnName" : "msgVpnName",
    "remoteAuthenticationScheme" : "basic"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "remoteMsgVpnsUri" : "remoteMsgVpnsUri",
    "uri" : "uri",
    "remoteSubscriptionsUri" : "remoteSubscriptionsUri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  }, {
    "remoteMsgVpnsUri" : "remoteMsgVpnsUri",
    "uri" : "uri",
    "remoteSubscriptionsUri" : "remoteSubscriptionsUri",
    "tlsTrustedCommonNamesUri" : "tlsTrustedCommonNamesUri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnBridgesResponse> 
     */
    public class func getMsgVpnBridgesWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnBridgesResponse> {
        var path = "/msgVpns/{msgVpnName}/bridges"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnBridgesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Client Profile objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnClientProfiles(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnClientProfilesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnClientProfilesWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Client Profile objects.
     - GET /msgVpns/{msgVpnName}/clientProfiles
     - Gets a list of Client Profile objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: clientProfileName|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "apiTopicEndpointManagementCopyFromOnCreateName" : "apiTopicEndpointManagementCopyFromOnCreateName",
    "compressionEnabled" : true,
    "tcpMaxWindowSize" : 6,
    "clientProfileName" : "clientProfileName",
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpMaxSegmentSize" : 2,
    "queueDirect2MaxDepth" : 6,
    "msgVpnName" : "msgVpnName",
    "eventClientProvisionedEndpointSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5
    },
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MinMsgBurst" : 4,
    "elidingDelay" : 0,
    "eventServiceWebConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueControl1MinMsgBurst" : 1,
    "serviceWebMaxPayload" : 9,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "tcpKeepaliveIdleTime" : 6,
    "maxEndpointCountPerClientUsername" : 7,
    "queueDirect2MinMsgBurst" : 7,
    "queueGuaranteed1MinMsgBurst" : 9,
    "queueDirect1MaxDepth" : 1,
    "eventServiceSmfConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpCongestionWindowSize" : 6,
    "eventEndpointCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MaxDepth" : 1,
    "allowBridgeConnectionsEnabled" : true,
    "allowTransactedSessionsEnabled" : true,
    "serviceSmfMaxConnectionCountPerClientUsername" : 9,
    "allowGuaranteedMsgSendEnabled" : true,
    "queueDirect1MinMsgBurst" : 1,
    "queueGuaranteed1MaxDepth" : 5,
    "serviceWebInactiveTimeout" : 6,
    "allowGuaranteedMsgReceiveEnabled" : true,
    "tcpKeepaliveCount" : 3,
    "maxTransactionCount" : 4,
    "maxSubscriptionCount" : 3,
    "eventConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "elidingMaxTopicCount" : 6,
    "queueControl1MaxDepth" : 7,
    "tcpKeepaliveInterval" : 1,
    "elidingEnabled" : true,
    "maxIngressFlowCount" : 9,
    "replicationAllowClientConnectWhenStandbyEnabled" : true,
    "maxEgressFlowCount" : 2,
    "maxTransactedSessionCount" : 2,
    "rejectMsgToSenderOnNoSubscriptionMatchEnabled" : true,
    "serviceWebMaxConnectionCountPerClientUsername" : 8,
    "allowGuaranteedEndpointCreateEnabled" : true,
    "allowCutThroughForwardingEnabled" : true,
    "apiQueueManagementCopyFromOnCreateName" : "apiQueueManagementCopyFromOnCreateName",
    "maxConnectionCountPerClientUsername" : 5,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  }, {
    "apiTopicEndpointManagementCopyFromOnCreateName" : "apiTopicEndpointManagementCopyFromOnCreateName",
    "compressionEnabled" : true,
    "tcpMaxWindowSize" : 6,
    "clientProfileName" : "clientProfileName",
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpMaxSegmentSize" : 2,
    "queueDirect2MaxDepth" : 6,
    "msgVpnName" : "msgVpnName",
    "eventClientProvisionedEndpointSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5
    },
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MinMsgBurst" : 4,
    "elidingDelay" : 0,
    "eventServiceWebConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueControl1MinMsgBurst" : 1,
    "serviceWebMaxPayload" : 9,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "tcpKeepaliveIdleTime" : 6,
    "maxEndpointCountPerClientUsername" : 7,
    "queueDirect2MinMsgBurst" : 7,
    "queueGuaranteed1MinMsgBurst" : 9,
    "queueDirect1MaxDepth" : 1,
    "eventServiceSmfConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "tcpCongestionWindowSize" : 6,
    "eventEndpointCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "queueDirect3MaxDepth" : 1,
    "allowBridgeConnectionsEnabled" : true,
    "allowTransactedSessionsEnabled" : true,
    "serviceSmfMaxConnectionCountPerClientUsername" : 9,
    "allowGuaranteedMsgSendEnabled" : true,
    "queueDirect1MinMsgBurst" : 1,
    "queueGuaranteed1MaxDepth" : 5,
    "serviceWebInactiveTimeout" : 6,
    "allowGuaranteedMsgReceiveEnabled" : true,
    "tcpKeepaliveCount" : 3,
    "maxTransactionCount" : 4,
    "maxSubscriptionCount" : 3,
    "eventConnectionCountPerClientUsernameThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "elidingMaxTopicCount" : 6,
    "queueControl1MaxDepth" : 7,
    "tcpKeepaliveInterval" : 1,
    "elidingEnabled" : true,
    "maxIngressFlowCount" : 9,
    "replicationAllowClientConnectWhenStandbyEnabled" : true,
    "maxEgressFlowCount" : 2,
    "maxTransactedSessionCount" : 2,
    "rejectMsgToSenderOnNoSubscriptionMatchEnabled" : true,
    "serviceWebMaxConnectionCountPerClientUsername" : 8,
    "allowGuaranteedEndpointCreateEnabled" : true,
    "allowCutThroughForwardingEnabled" : true,
    "apiQueueManagementCopyFromOnCreateName" : "apiQueueManagementCopyFromOnCreateName",
    "maxConnectionCountPerClientUsername" : 5,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientProfilesResponse> 
     */
    public class func getMsgVpnClientProfilesWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnClientProfilesResponse> {
        var path = "/msgVpns/{msgVpnName}/clientProfiles"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientProfilesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Client Username objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnClientUsernames(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnClientUsernamesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnClientUsernamesWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Client Username objects.
     - GET /msgVpns/{msgVpnName}/clientUsernames
     - Gets a list of Client Username objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: clientUsername|x|| msgVpnName|x|| password||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "password" : "password",
    "subscriptionManagerEnabled" : true,
    "clientUsername" : "clientUsername",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "guaranteedEndpointPermissionOverrideEnabled" : true,
    "aclProfileName" : "aclProfileName",
    "enabled" : true
  }, {
    "password" : "password",
    "subscriptionManagerEnabled" : true,
    "clientUsername" : "clientUsername",
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "guaranteedEndpointPermissionOverrideEnabled" : true,
    "aclProfileName" : "aclProfileName",
    "enabled" : true
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnClientUsernamesResponse> 
     */
    public class func getMsgVpnClientUsernamesWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnClientUsernamesResponse> {
        var path = "/msgVpns/{msgVpnName}/clientUsernames"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnClientUsernamesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of JNDI Connection Factory objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnJndiConnectionFactories(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnJndiConnectionFactoriesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnJndiConnectionFactoriesWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of JNDI Connection Factory objects.
     - GET /msgVpns/{msgVpnName}/jndiConnectionFactories
     - Gets a list of JNDI Connection Factory objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: connectionFactoryName|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "messagingDefaultDeliveryMode" : "persistent",
    "connectionFactoryName" : "connectionFactoryName",
    "guaranteedReceiveAckTimeout" : 1,
    "transportReadTimeout" : 1,
    "transportReconnectRetryCount" : 7,
    "dtoReceiveSubscriberNetworkPriority" : 6,
    "messagingDefaultElidingEligibleEnabled" : true,
    "transportDirectTransportEnabled" : true,
    "transportReconnectRetryWait" : 1,
    "clientDescription" : "clientDescription",
    "guaranteedReceiveWindowSize" : 5,
    "dtoReceiveSubscriberLocalPriority" : 0,
    "transportCompressionLevel" : 9,
    "transportConnectRetryPerHostCount" : 2,
    "guaranteedSendAckTimeout" : 2,
    "transportReceiveBufferSize" : 6,
    "msgVpnName" : "msgVpnName",
    "transportKeepaliveEnabled" : true,
    "allowDuplicateClientIdEnabled" : true,
    "transportPort" : 1,
    "transportConnectRetryCount" : 3,
    "transportConnectTimeout" : 4,
    "dynamicEndpointCreateDurableEnabled" : true,
    "clientId" : "clientId",
    "messagingJmsxUserIdEnabled" : true,
    "guaranteedReceiveWindowSizeAckThreshold" : 5,
    "dynamicEndpointRespectTtlEnabled" : true,
    "messagingTextInXmlPayloadEnabled" : true,
    "guaranteedSendWindowSize" : 7,
    "transportKeepaliveInterval" : 1,
    "transportOptimizeDirectEnabled" : true,
    "transportTcpNoDelayEnabled" : true,
    "transportSendBufferSize" : 4,
    "transportKeepaliveCount" : 7,
    "xaEnabled" : true,
    "dtoSendEnabled" : true,
    "messagingDefaultDmqEligibleEnabled" : true,
    "dtoReceiveOverrideEnabled" : true,
    "transportMsgCallbackOnIoThreadEnabled" : true
  }, {
    "messagingDefaultDeliveryMode" : "persistent",
    "connectionFactoryName" : "connectionFactoryName",
    "guaranteedReceiveAckTimeout" : 1,
    "transportReadTimeout" : 1,
    "transportReconnectRetryCount" : 7,
    "dtoReceiveSubscriberNetworkPriority" : 6,
    "messagingDefaultElidingEligibleEnabled" : true,
    "transportDirectTransportEnabled" : true,
    "transportReconnectRetryWait" : 1,
    "clientDescription" : "clientDescription",
    "guaranteedReceiveWindowSize" : 5,
    "dtoReceiveSubscriberLocalPriority" : 0,
    "transportCompressionLevel" : 9,
    "transportConnectRetryPerHostCount" : 2,
    "guaranteedSendAckTimeout" : 2,
    "transportReceiveBufferSize" : 6,
    "msgVpnName" : "msgVpnName",
    "transportKeepaliveEnabled" : true,
    "allowDuplicateClientIdEnabled" : true,
    "transportPort" : 1,
    "transportConnectRetryCount" : 3,
    "transportConnectTimeout" : 4,
    "dynamicEndpointCreateDurableEnabled" : true,
    "clientId" : "clientId",
    "messagingJmsxUserIdEnabled" : true,
    "guaranteedReceiveWindowSizeAckThreshold" : 5,
    "dynamicEndpointRespectTtlEnabled" : true,
    "messagingTextInXmlPayloadEnabled" : true,
    "guaranteedSendWindowSize" : 7,
    "transportKeepaliveInterval" : 1,
    "transportOptimizeDirectEnabled" : true,
    "transportTcpNoDelayEnabled" : true,
    "transportSendBufferSize" : 4,
    "transportKeepaliveCount" : 7,
    "xaEnabled" : true,
    "dtoSendEnabled" : true,
    "messagingDefaultDmqEligibleEnabled" : true,
    "dtoReceiveOverrideEnabled" : true,
    "transportMsgCallbackOnIoThreadEnabled" : true
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiConnectionFactoriesResponse> 
     */
    public class func getMsgVpnJndiConnectionFactoriesWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiConnectionFactoriesResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiConnectionFactories"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiConnectionFactoriesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of JNDI Queue objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnJndiQueues(msgVpnName msgVpnName: String, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnJndiQueuesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnJndiQueuesWithRequestBuilder(msgVpnName: msgVpnName, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of JNDI Queue objects.
     - GET /msgVpns/{msgVpnName}/jndiQueues
     - Gets a list of JNDI Queue objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "queueName" : "queueName",
    "physicalName" : "physicalName",
    "msgVpnName" : "msgVpnName"
  }, {
    "queueName" : "queueName",
    "physicalName" : "physicalName",
    "msgVpnName" : "msgVpnName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiQueuesResponse> 
     */
    public class func getMsgVpnJndiQueuesWithRequestBuilder(msgVpnName msgVpnName: String, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiQueuesResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiQueues"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiQueuesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of JNDI Topic objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnJndiTopics(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnJndiTopicsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnJndiTopicsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of JNDI Topic objects.
     - GET /msgVpns/{msgVpnName}/jndiTopics
     - Gets a list of JNDI Topic objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| topicName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.2.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "physicalName" : "physicalName",
    "topicName" : "topicName",
    "msgVpnName" : "msgVpnName"
  }, {
    "physicalName" : "physicalName",
    "topicName" : "topicName",
    "msgVpnName" : "msgVpnName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnJndiTopicsResponse> 
     */
    public class func getMsgVpnJndiTopicsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnJndiTopicsResponse> {
        var path = "/msgVpns/{msgVpnName}/jndiTopics"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnJndiTopicsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of MQTT Session objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnMqttSessions(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnMqttSessionsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnMqttSessionsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of MQTT Session objects.
     - GET /msgVpns/{msgVpnName}/mqttSessions
     - Gets a list of MQTT Session objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: mqttSessionClientId|x|| mqttSessionVirtualRouter|x|| msgVpnName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "owner" : "owner",
    "mqttSessionClientId" : "mqttSessionClientId",
    "msgVpnName" : "msgVpnName",
    "enabled" : true,
    "mqttSessionVirtualRouter" : "primary"
  }, {
    "owner" : "owner",
    "mqttSessionClientId" : "mqttSessionClientId",
    "msgVpnName" : "msgVpnName",
    "enabled" : true,
    "mqttSessionVirtualRouter" : "primary"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }, {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnMqttSessionsResponse> 
     */
    public class func getMsgVpnMqttSessionsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnMqttSessionsResponse> {
        var path = "/msgVpns/{msgVpnName}/mqttSessions"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnMqttSessionsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Queue objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnQueues(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnQueuesResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnQueuesWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Queue objects.
     - GET /msgVpns/{msgVpnName}/queues
     - Gets a list of Queue objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| queueName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "maxBindCount" : 0,
    "owner" : "owner",
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "queueName" : "queueName",
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxMsgSpoolUsage" : 5,
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  }, {
    "maxBindCount" : 0,
    "owner" : "owner",
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "queueName" : "queueName",
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxMsgSpoolUsage" : 5,
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  }, {
    "subscriptionsUri" : "subscriptionsUri",
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnQueuesResponse> 
     */
    public class func getMsgVpnQueuesWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnQueuesResponse> {
        var path = "/msgVpns/{msgVpnName}/queues"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnQueuesResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of ReplayLog objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnReplayLogs(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnReplayLogsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnReplayLogsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of ReplayLog objects.
     - GET /msgVpns/{msgVpnName}/replayLogs
     - Gets a list of ReplayLog objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| replayLogName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.10.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "ingressEnabled" : true,
    "replayLogName" : "replayLogName",
    "maxSpoolUsage" : 0,
    "egressEnabled" : true,
    "msgVpnName" : "msgVpnName"
  }, {
    "ingressEnabled" : true,
    "replayLogName" : "replayLogName",
    "maxSpoolUsage" : 0,
    "egressEnabled" : true,
    "msgVpnName" : "msgVpnName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplayLogsResponse> 
     */
    public class func getMsgVpnReplayLogsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnReplayLogsResponse> {
        var path = "/msgVpns/{msgVpnName}/replayLogs"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplayLogsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Replicated Topic objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnReplicatedTopics(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnReplicatedTopicsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnReplicatedTopicsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Replicated Topic objects.
     - GET /msgVpns/{msgVpnName}/replicatedTopics
     - Gets a list of Replicated Topic objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| replicatedTopic|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.9.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "replicationMode" : "sync",
    "replicatedTopic" : "replicatedTopic",
    "msgVpnName" : "msgVpnName"
  }, {
    "replicationMode" : "sync",
    "replicatedTopic" : "replicatedTopic",
    "msgVpnName" : "msgVpnName"
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnReplicatedTopicsResponse> 
     */
    public class func getMsgVpnReplicatedTopicsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnReplicatedTopicsResponse> {
        var path = "/msgVpns/{msgVpnName}/replicatedTopics"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnReplicatedTopicsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of REST Delivery Point objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnRestDeliveryPoints(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnRestDeliveryPointsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnRestDeliveryPointsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of REST Delivery Point objects.
     - GET /msgVpns/{msgVpnName}/restDeliveryPoints
     - Gets a list of REST Delivery Point objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| restDeliveryPointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "enabled" : true
  }, {
    "clientProfileName" : "clientProfileName",
    "msgVpnName" : "msgVpnName",
    "restDeliveryPointName" : "restDeliveryPointName",
    "enabled" : true
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "restConsumersUri" : "restConsumersUri",
    "queueBindingsUri" : "queueBindingsUri",
    "uri" : "uri"
  }, {
    "restConsumersUri" : "restConsumersUri",
    "queueBindingsUri" : "queueBindingsUri",
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnRestDeliveryPointsResponse> 
     */
    public class func getMsgVpnRestDeliveryPointsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnRestDeliveryPointsResponse> {
        var path = "/msgVpns/{msgVpnName}/restDeliveryPoints"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnRestDeliveryPointsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Topic Endpoint objects.
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpnTopicEndpoints(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnTopicEndpointsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnTopicEndpointsWithRequestBuilder(msgVpnName: msgVpnName, count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Topic Endpoint objects.
     - GET /msgVpns/{msgVpnName}/topicEndpoints
     - Gets a list of Topic Endpoint objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| topicEndpointName|x||    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.1.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "maxBindCount" : 0,
    "owner" : "owner",
    "topicEndpointName" : "topicEndpointName",
    "maxSpoolUsage" : 5,
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "eventSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  }, {
    "maxBindCount" : 0,
    "owner" : "owner",
    "topicEndpointName" : "topicEndpointName",
    "maxSpoolUsage" : 5,
    "egressEnabled" : true,
    "maxTtl" : 2,
    "respectTtlEnabled" : true,
    "permission" : "no-access",
    "rejectLowPriorityMsgLimit" : 7,
    "eventSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "maxRedeliveryCount" : 5,
    "maxMsgSize" : 1,
    "accessType" : "exclusive",
    "deadMsgQueue" : "deadMsgQueue",
    "ingressEnabled" : true,
    "rejectMsgToSenderOnDiscardBehavior" : "always",
    "consumerAckPropagationEnabled" : true,
    "eventBindCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "respectMsgPriorityEnabled" : true,
    "eventRejectLowPriorityMsgLimitThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "msgVpnName" : "msgVpnName",
    "maxDeliveredUnackedMsgsPerFlow" : 6,
    "rejectLowPriorityMsgEnabled" : true
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "uri" : "uri"
  }, {
    "uri" : "uri"
  } ]
}}]
     
     - parameter msgVpnName: (path) The msgVpnName of the Message VPN. 
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnTopicEndpointsResponse> 
     */
    public class func getMsgVpnTopicEndpointsWithRequestBuilder(msgVpnName msgVpnName: String, count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnTopicEndpointsResponse> {
        var path = "/msgVpns/{msgVpnName}/topicEndpoints"
        path = path.stringByReplacingOccurrencesOfString("{msgVpnName}", withString: "\(msgVpnName)", options: .LiteralSearch, range: nil)
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnTopicEndpointsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Gets a list of Message VPN objects.
     
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getMsgVpns(count count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil, completion: ((data: MsgVpnsResponse?, error: ErrorType?) -> Void)) {
        getMsgVpnsWithRequestBuilder(count: count, cursor: cursor, _where: _where, select: select).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Gets a list of Message VPN objects.
     - GET /msgVpns
     - Gets a list of Message VPN objects.   Attribute|Identifying|Write-Only|Deprecated :---|:---:|:---:|:---: msgVpnName|x|| replicationBridgeAuthenticationBasicPassword||x| replicationBridgeAuthenticationClientCertContent||x| replicationBridgeAuthenticationClientCertPassword||x| replicationEnabledQueueBehavior||x|    A SEMP client authorized with a minimum access scope/level of \"vpn/readonly\" is required to perform this operation.  This has been available since 2.0.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "serviceMqttMaxConnectionCount" : 6,
    "authorizationProfileName" : "authorizationProfileName",
    "replicationBridgeAuthenticationClientCertPassword" : "replicationBridgeAuthenticationClientCertPassword",
    "replicationBridgeEgressFlowWindowSize" : 4,
    "restTlsServerCertMaxChainDepth" : 9,
    "serviceRestIncomingPlainTextEnabled" : true,
    "replicationEnabled" : true,
    "eventServiceWebConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "bridgingTlsServerCertValidateDateEnabled" : true,
    "authorizationType" : "ldap",
    "replicationAckPropagationIntervalMsgCount" : 1,
    "bridgingTlsServerCertMaxChainDepth" : 6,
    "replicationBridgeCompressedDataEnabled" : true,
    "serviceAmqpPlainTextEnabled" : true,
    "bridgingTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "restTlsServerCertValidateDateEnabled" : true,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "authenticationKerberosEnabled" : true,
    "authorizationLdapGroupMembershipAttributeName" : "authorizationLdapGroupMembershipAttributeName",
    "serviceRestIncomingPlainTextListenPort" : 6,
    "authenticationClientCertUsernameSource" : "common-name",
    "replicationBridgeAuthenticationClientCertContent" : "replicationBridgeAuthenticationClientCertContent",
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceMqttPlainTextListenPort" : 3,
    "authenticationClientCertMaxChainDepth" : 0,
    "serviceMqttWebSocketEnabled" : true,
    "authenticationClientCertEnabled" : true,
    "restTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "replicationRejectMsgWhenSyncIneligibleEnabled" : true,
    "eventPublishTopicFormatSmfEnabled" : true,
    "authenticationBasicProfileName" : "authenticationBasicProfileName",
    "enabled" : true,
    "replicationBridgeAuthenticationScheme" : "basic",
    "replicationBridgeUnidirectionalClientProfileName" : "replicationBridgeUnidirectionalClientProfileName",
    "serviceRestIncomingMaxConnectionCount" : 6,
    "sempOverMsgBusEnabled" : true,
    "maxTransactionCount" : 7,
    "serviceAmqpTlsListenPort" : 9,
    "serviceMqttTlsListenPort" : 6,
    "eventServiceAmqpConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceRestMode" : "gateway",
    "serviceRestIncomingTlsEnabled" : true,
    "authenticationKerberosAllowApiProvidedUsernameEnabled" : true,
    "sempOverMsgBusAdminDistributedCacheEnabled" : true,
    "maxSubscriptionCount" : 1,
    "authenticationBasicType" : "internal",
    "serviceWebMaxConnectionCount" : 3,
    "serviceAmqpMaxConnectionCount" : 6,
    "maxEgressFlowCount" : 4,
    "serviceMqttWebSocketListenPort" : 2,
    "serviceSmfPlainTextEnabled" : true,
    "maxEndpointCount" : 7,
    "serviceWebTlsEnabled" : true,
    "serviceMqttTlsWebSocketEnabled" : true,
    "exportSubscriptionsEnabled" : true,
    "eventIngressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "eventPublishSubscriptionMode" : "off",
    "serviceMqttTlsEnabled" : true,
    "eventConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfTlsEnabled" : true,
    "eventLargeMsgThreshold" : 3,
    "serviceRestIncomingTlsListenPort" : 5,
    "replicationQueueRejectMsgToSenderOnDiscardEnabled" : true,
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventPublishMsgVpnEnabled" : true,
    "sempOverMsgBusShowEnabled" : true,
    "serviceWebPlainTextEnabled" : true,
    "msgVpnName" : "msgVpnName",
    "eventEndpointCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminEnabled" : true,
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventServiceRestIncomingConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfMaxConnectionCount" : 3,
    "jndiEnabled" : true,
    "serviceMqttPlainTextEnabled" : true,
    "eventPublishClientEnabled" : true,
    "replicationQueueMaxMsgSpoolUsage" : 9,
    "eventServiceMqttConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminClientEnabled" : true,
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "maxConnectionCount" : 2,
    "serviceRestOutgoingMaxConnectionCount" : 6,
    "replicationBridgeTlsEnabled" : true,
    "authenticationClientCertRevocationCheckMode" : "allow-all",
    "authenticationClientCertAllowApiProvidedUsernameEnabled" : true,
    "eventServiceSmfConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceAmqpPlainTextListenPort" : 8,
    "authenticationClientCertValidateDateEnabled" : true,
    "serviceAmqpTlsEnabled" : true,
    "eventEgressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "replicationTransactionMode" : "sync",
    "replicationRole" : "active",
    "authenticationBasicRadiusDomain" : "authenticationBasicRadiusDomain",
    "replicationEnabledQueueBehavior" : "fail-on-existing-queue",
    "replicationBridgeRetryDelay" : 5,
    "eventLogTag" : "eventLogTag",
    "distributedCacheManagementEnabled" : true,
    "serviceMqttTlsWebSocketListenPort" : 1,
    "replicationBridgeAuthenticationBasicClientUsername" : "replicationBridgeAuthenticationBasicClientUsername",
    "replicationBridgeAuthenticationBasicPassword" : "replicationBridgeAuthenticationBasicPassword",
    "maxIngressFlowCount" : 1,
    "maxTransactedSessionCount" : 6,
    "eventPublishTopicFormatMqttEnabled" : true,
    "authenticationBasicEnabled" : true,
    "maxMsgSpoolUsage" : 1,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  }, {
    "serviceMqttMaxConnectionCount" : 6,
    "authorizationProfileName" : "authorizationProfileName",
    "replicationBridgeAuthenticationClientCertPassword" : "replicationBridgeAuthenticationClientCertPassword",
    "replicationBridgeEgressFlowWindowSize" : 4,
    "restTlsServerCertMaxChainDepth" : 9,
    "serviceRestIncomingPlainTextEnabled" : true,
    "replicationEnabled" : true,
    "eventServiceWebConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "bridgingTlsServerCertValidateDateEnabled" : true,
    "authorizationType" : "ldap",
    "replicationAckPropagationIntervalMsgCount" : 1,
    "bridgingTlsServerCertMaxChainDepth" : 6,
    "replicationBridgeCompressedDataEnabled" : true,
    "serviceAmqpPlainTextEnabled" : true,
    "bridgingTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "restTlsServerCertValidateDateEnabled" : true,
    "eventTransactedSessionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "authenticationKerberosEnabled" : true,
    "authorizationLdapGroupMembershipAttributeName" : "authorizationLdapGroupMembershipAttributeName",
    "serviceRestIncomingPlainTextListenPort" : 6,
    "authenticationClientCertUsernameSource" : "common-name",
    "replicationBridgeAuthenticationClientCertContent" : "replicationBridgeAuthenticationClientCertContent",
    "eventSubscriptionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceMqttPlainTextListenPort" : 3,
    "authenticationClientCertMaxChainDepth" : 0,
    "serviceMqttWebSocketEnabled" : true,
    "authenticationClientCertEnabled" : true,
    "restTlsServerCertEnforceTrustedCommonNameEnabled" : true,
    "replicationRejectMsgWhenSyncIneligibleEnabled" : true,
    "eventPublishTopicFormatSmfEnabled" : true,
    "authenticationBasicProfileName" : "authenticationBasicProfileName",
    "enabled" : true,
    "replicationBridgeAuthenticationScheme" : "basic",
    "replicationBridgeUnidirectionalClientProfileName" : "replicationBridgeUnidirectionalClientProfileName",
    "serviceRestIncomingMaxConnectionCount" : 6,
    "sempOverMsgBusEnabled" : true,
    "maxTransactionCount" : 7,
    "serviceAmqpTlsListenPort" : 9,
    "serviceMqttTlsListenPort" : 6,
    "eventServiceAmqpConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceRestMode" : "gateway",
    "serviceRestIncomingTlsEnabled" : true,
    "authenticationKerberosAllowApiProvidedUsernameEnabled" : true,
    "sempOverMsgBusAdminDistributedCacheEnabled" : true,
    "maxSubscriptionCount" : 1,
    "authenticationBasicType" : "internal",
    "serviceWebMaxConnectionCount" : 3,
    "serviceAmqpMaxConnectionCount" : 6,
    "maxEgressFlowCount" : 4,
    "serviceMqttWebSocketListenPort" : 2,
    "serviceSmfPlainTextEnabled" : true,
    "maxEndpointCount" : 7,
    "serviceWebTlsEnabled" : true,
    "serviceMqttTlsWebSocketEnabled" : true,
    "exportSubscriptionsEnabled" : true,
    "eventIngressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "eventPublishSubscriptionMode" : "off",
    "serviceMqttTlsEnabled" : true,
    "eventConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfTlsEnabled" : true,
    "eventLargeMsgThreshold" : 3,
    "serviceRestIncomingTlsListenPort" : 5,
    "replicationQueueRejectMsgToSenderOnDiscardEnabled" : true,
    "eventTransactionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventPublishMsgVpnEnabled" : true,
    "sempOverMsgBusShowEnabled" : true,
    "serviceWebPlainTextEnabled" : true,
    "msgVpnName" : "msgVpnName",
    "eventEndpointCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminEnabled" : true,
    "eventEgressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventServiceRestIncomingConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "eventMsgSpoolUsageThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceSmfMaxConnectionCount" : 3,
    "jndiEnabled" : true,
    "serviceMqttPlainTextEnabled" : true,
    "eventPublishClientEnabled" : true,
    "replicationQueueMaxMsgSpoolUsage" : 9,
    "eventServiceMqttConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "sempOverMsgBusAdminClientEnabled" : true,
    "tlsAllowDowngradeToPlainTextEnabled" : true,
    "maxConnectionCount" : 2,
    "serviceRestOutgoingMaxConnectionCount" : 6,
    "replicationBridgeTlsEnabled" : true,
    "authenticationClientCertRevocationCheckMode" : "allow-all",
    "authenticationClientCertAllowApiProvidedUsernameEnabled" : true,
    "eventServiceSmfConnectionCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    },
    "serviceAmqpPlainTextListenPort" : 8,
    "authenticationClientCertValidateDateEnabled" : true,
    "serviceAmqpTlsEnabled" : true,
    "eventEgressMsgRateThreshold" : {
      "setValue" : 9,
      "clearValue" : 7
    },
    "replicationTransactionMode" : "sync",
    "replicationRole" : "active",
    "authenticationBasicRadiusDomain" : "authenticationBasicRadiusDomain",
    "replicationEnabledQueueBehavior" : "fail-on-existing-queue",
    "replicationBridgeRetryDelay" : 5,
    "eventLogTag" : "eventLogTag",
    "distributedCacheManagementEnabled" : true,
    "serviceMqttTlsWebSocketListenPort" : 1,
    "replicationBridgeAuthenticationBasicClientUsername" : "replicationBridgeAuthenticationBasicClientUsername",
    "replicationBridgeAuthenticationBasicPassword" : "replicationBridgeAuthenticationBasicPassword",
    "maxIngressFlowCount" : 1,
    "maxTransactedSessionCount" : 6,
    "eventPublishTopicFormatMqttEnabled" : true,
    "authenticationBasicEnabled" : true,
    "maxMsgSpoolUsage" : 1,
    "eventIngressFlowCountThreshold" : {
      "clearPercent" : 1,
      "setPercent" : 5,
      "setValue" : 2,
      "clearValue" : 5
    }
  } ],
  "meta" : {
    "request" : {
      "method" : "method",
      "uri" : "uri"
    },
    "paging" : {
      "nextPageUri" : "nextPageUri",
      "cursorQuery" : "cursorQuery"
    },
    "error" : {
      "code" : 0,
      "description" : "description",
      "status" : "status"
    },
    "responseCode" : 6
  },
  "links" : [ {
    "clientProfilesUri" : "clientProfilesUri",
    "topicEndpointsUri" : "topicEndpointsUri",
    "jndiConnectionFactoriesUri" : "jndiConnectionFactoriesUri",
    "clientUsernamesUri" : "clientUsernamesUri",
    "bridgesUri" : "bridgesUri",
    "replicatedTopicsUri" : "replicatedTopicsUri",
    "aclProfilesUri" : "aclProfilesUri",
    "sequencedTopicsUri" : "sequencedTopicsUri",
    "uri" : "uri",
    "jndiTopicsUri" : "jndiTopicsUri",
    "replayLogsUri" : "replayLogsUri",
    "queuesUri" : "queuesUri",
    "restDeliveryPointsUri" : "restDeliveryPointsUri",
    "mqttSessionsUri" : "mqttSessionsUri",
    "authorizationGroupsUri" : "authorizationGroupsUri",
    "jndiQueuesUri" : "jndiQueuesUri"
  }, {
    "clientProfilesUri" : "clientProfilesUri",
    "topicEndpointsUri" : "topicEndpointsUri",
    "jndiConnectionFactoriesUri" : "jndiConnectionFactoriesUri",
    "clientUsernamesUri" : "clientUsernamesUri",
    "bridgesUri" : "bridgesUri",
    "replicatedTopicsUri" : "replicatedTopicsUri",
    "aclProfilesUri" : "aclProfilesUri",
    "sequencedTopicsUri" : "sequencedTopicsUri",
    "uri" : "uri",
    "jndiTopicsUri" : "jndiTopicsUri",
    "replayLogsUri" : "replayLogsUri",
    "queuesUri" : "queuesUri",
    "restDeliveryPointsUri" : "restDeliveryPointsUri",
    "mqttSessionsUri" : "mqttSessionsUri",
    "authorizationGroupsUri" : "authorizationGroupsUri",
    "jndiQueuesUri" : "jndiQueuesUri"
  } ]
}}]
     
     - parameter count: (query) Limit the count of objects in the response. See [Count](#count \&quot;Description of the syntax of the &#x60;count&#x60; parameter\&quot;). (optional, default to 10)
     - parameter cursor: (query) The cursor, or position, for the next page of objects. See [Cursor](#cursor \&quot;Description of the syntax of the &#x60;cursor&#x60; parameter\&quot;). (optional)
     - parameter _where: (query) Include in the response only objects where certain conditions are true. See [Where](#where \&quot;Description of the syntax of the &#x60;where&#x60; parameter\&quot;). (optional)
     - parameter select: (query) Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See [Select](#select \&quot;Description of the syntax of the &#x60;select&#x60; parameter\&quot;). (optional)

     - returns: RequestBuilder<MsgVpnsResponse> 
     */
    public class func getMsgVpnsWithRequestBuilder(count count: Int32? = nil, cursor: String? = nil, _where: [String]? = nil, select: [String]? = nil) -> RequestBuilder<MsgVpnsResponse> {
        let path = "/msgVpns"
        let URLString = solace_semp_clientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "count": count?.encodeToJSON(),
            "cursor": cursor,
            "where": _where,
            "select": select
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<MsgVpnsResponse>.Type = solace_semp_clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
